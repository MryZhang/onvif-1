// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.27 from http://www.onvif.org/onvif/ver10/media/wsdl/media.wsdl http://www.onvif.org/onvif/ver20/media/wsdl/media.wsdl and ./typemap.dat
   2016-01-29 02:29:44 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

trt = "http://www.onvif.org/ver10/media/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
tr2 = "http://www.onvif.org/ver20/media/wsdl"

*/

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tr2	"http://www.onvif.org/ver20/media/wsdl"
//gsoap tr2   schema namespace:	http://www.onvif.org/ver20/media/wsdl
//gsoap tr2   schema elementForm:	qualified
//gsoap tr2   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in XSD type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in XSD type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Built-in XSD type "xs:duration".
#import "custom/duration.h"

/// Built-in XSD type "xs:hexBinary".
struct xsd__hexBinary { unsigned char *__ptr; int __size; };

// Imported XSD type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.
/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:integer".
typedef char* xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.
/// Built-in attribute "xml:lang".
typedef char* _xml__lang;



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
typedef char* trt__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of xs:int.
///
typedef char* tt__IntAttrList;

/// @brief "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of xs:float.
///
typedef char* tt__FloatAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of xs:string.
///
typedef char* tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":ReferenceTokenList is a simpleType containing a whitespace separated list of "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef char* tt__ReferenceTokenList;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef char* wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
typedef char* tr2__EncodingTypes;

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0 to 64.
typedef char* tt__ReferenceToken: 64;

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0 to 64.
typedef char* tt__Name: 64;

/// @brief "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RotateMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RotateMode
{
	tt__RotateMode__OFF,	///< xs:string value="OFF"
	tt__RotateMode__ON,	///< xs:string value="ON"
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncoding__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Mpeg4Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__H264Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   ONVIF prominent MIME type names as referenced by IANA. See also <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__VideoEncodingMimeNames__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncodingMimeNames
{
	tt__VideoEncodingMimeNames__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncodingMimeNames__MPV4_ES,	///< xs:string value="MPV4-ES"
	tt__VideoEncodingMimeNames__H264,	///< xs:string value="H264"
	tt__VideoEncodingMimeNames__H265,	///< xs:string value="H265"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncodingProfiles__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncodingProfiles
{
	tt__VideoEncodingProfiles__Simple,	///< xs:string value="Simple"
	tt__VideoEncodingProfiles__AdvancedSimple,	///< xs:string value="AdvancedSimple"
	tt__VideoEncodingProfiles__Baseline,	///< xs:string value="Baseline"
	tt__VideoEncodingProfiles__Main,	///< xs:string value="Main"
	tt__VideoEncodingProfiles__Main10,	///< xs:string value="Main10"
	tt__VideoEncodingProfiles__Extended,	///< xs:string value="Extended"
	tt__VideoEncodingProfiles__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AudioEncoding__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   ONVIF prominent MIME type names as referenced by IANA. See also <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a> .
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__AudioEncodingMimeNames__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AudioEncodingMimeNames
{
	tt__AudioEncodingMimeNames__PCMU,	///< xs:string value="PCMU"
	tt__AudioEncodingMimeNames__G726,	///< xs:string value="G726"
	tt__AudioEncodingMimeNames__MP4A_LATM,	///< xs:string value="MP4A-LATM"
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataCompressionType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__MetadataCompressionType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__MetadataCompressionType
{
	tt__MetadataCompressionType__None,	///< xs:string value="None"
	tt__MetadataCompressionType__GZIP,	///< xs:string value="GZIP"
	tt__MetadataCompressionType__EXI,	///< xs:string value="EXI"
};

/// @brief "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__StreamType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// @brief "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TransportProtocol__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of XSD type xs:integer.
///
/// Value range is 0 to 31.
typedef xsd__integer tt__NetworkInterfaceConfigPriority;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of XSD type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__DNSName;

/// @brief "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of XSD type xs:token.
///
typedef xsd__token tt__Domain;

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 1 to 32.
typedef struct xsd__hexBinary tt__Dot11SSIDType 1 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 32.
typedef struct xsd__hexBinary tt__Dot11PSK;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of XSD type xs:string.
///
/// Content pattern is "[ -~]{8,63}".
typedef char* tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__SystemLogType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalIdleState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DigitalIdleState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DigitalIdleState
{
	tt__DigitalIdleState__closed,	///< xs:string value="closed"
	tt__DigitalIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__EFlipMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ReverseMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0 to 128.
typedef char* tt__AuxiliaryData: 128;

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourDirection__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AutoFocusMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WideDynamicMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available backlight compenstation modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__BacklightCompensationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__BacklightCompensationMode
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is disabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is enabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposurePriority__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposureMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Enabled__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WhiteBalanceMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ImageStabilizationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterAutoBoundaryType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IrCutFilterAutoBoundaryType
{
	tt__IrCutFilterAutoBoundaryType__Common,	///< xs:string value="Common"
	tt__IrCutFilterAutoBoundaryType__ToOn,	///< xs:string value="ToOn"
	tt__IrCutFilterAutoBoundaryType__ToOff,	///< xs:string value="ToOff"
	tt__IrCutFilterAutoBoundaryType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ToneCompensationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ToneCompensationMode
{
	tt__ToneCompensationMode__OFF,	///< xs:string value="OFF"
	tt__ToneCompensationMode__ON,	///< xs:string value="ON"
	tt__ToneCompensationMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DefoggingMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DefoggingMode
{
	tt__DefoggingMode__OFF,	///< xs:string value="OFF"
	tt__DefoggingMode__ON,	///< xs:string value="ON"
	tt__DefoggingMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of XSD type xs:anyURI.
///
typedef xsd__anyURI tt__TopicNamespaceLocation;

/// @brief "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PropertyOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// @brief "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Direction__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// @brief "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ClassType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ClassType
{
	tt__ClassType__Animal,	///< xs:string value="Animal"
	tt__ClassType__Face,	///< xs:string value="Face"
	tt__ClassType__Human,	///< xs:string value="Human"
	tt__ClassType__Vehical,	///< xs:string value="Vehical"
	tt__ClassType__Other,	///< xs:string value="Other"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies a receiver connection mode.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The receiver connects on demand, as required by consumers of the media streams.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver attempts to maintain a persistent connection to the configured endpoint.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver does not attempt to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies the current connection state of the receiver.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The receiver is not connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// <PRE><BLOCKQUOTE>
///   The receiver is attempting to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// <PRE><BLOCKQUOTE>
///   The receiver is connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__Description;

/// @brief "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__XPathExpression;

/// @brief "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SearchState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SearchState
{
/// <PRE><BLOCKQUOTE>
///   The search is queued and not yet started.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// <PRE><BLOCKQUOTE>
///   The search is underway and not yet completed.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// <PRE><BLOCKQUOTE>
///   The search has been completed and no new results will be found.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// <PRE><BLOCKQUOTE>
///   The state of the search is unknown. (This is not a valid response from GetSearchState.)
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RecordingStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TrackType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// <PRE><BLOCKQUOTE>
///   Placeholder for future extension.
/// </BLOCKQUOTE></PRE>
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__RecordingJobMode;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of XSD type xs:string.
///
typedef char* tt__RecordingJobState;

/// @brief "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ModeOfOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   AudioClassType acceptable values are;
///   gun_shot, scream, glass_breaking, tire_screech
/// </BLOCKQUOTE></PRE>
typedef char* tt__AudioClassType;

/// @brief "http://www.onvif.org/ver10/schema":OSDType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__OSDType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__OSDType
{
	tt__OSDType__Text,	///< xs:string value="Text"
	tt__OSDType__Image,	///< xs:string value="Image"
	tt__OSDType__Extended,	///< xs:string value="Extended"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of XSD type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
typedef _QName wstop__SimpleTopicExpression;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/media/wsdl":ConfigurationEnumeration is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tr2__ConfigurationEnumeration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tr2__ConfigurationEnumeration
{
	tr2__ConfigurationEnumeration__All,	///< xs:string value="All"
	tr2__ConfigurationEnumeration__VideoSource,	///< xs:string value="VideoSource"
	tr2__ConfigurationEnumeration__VideoEncoder,	///< xs:string value="VideoEncoder"
	tr2__ConfigurationEnumeration__AudioSource,	///< xs:string value="AudioSource"
	tr2__ConfigurationEnumeration__AudioEncoder,	///< xs:string value="AudioEncoder"
	tr2__ConfigurationEnumeration__AudioOutput,	///< xs:string value="AudioOutput"
	tr2__ConfigurationEnumeration__AudioDecoder,	///< xs:string value="AudioDecoder"
	tr2__ConfigurationEnumeration__Metadata,	///< xs:string value="Metadata"
	tr2__ConfigurationEnumeration__Analytics,	///< xs:string value="Analytics"
	tr2__ConfigurationEnumeration__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":TransportProtocol is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tr2__TransportProtocol__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tr2__TransportProtocol
{
	tr2__TransportProtocol__RtspUnicast,	///< xs:string value="RtspUnicast"
	tr2__TransportProtocol__RtspMulticast,	///< xs:string value="RtspMulticast"
	tr2__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tr2__TransportProtocol__RtspOverHttp,	///< xs:string value="RtspOverHttp"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__ReceiverReference;

/// @brief "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingReference;

/// @brief "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__TrackReference;

/// @brief "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__JobToken;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingJobReference;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
///
/// struct trt__Capabilities operations:
/// - soap_default_trt__Capabilities(soap*, trt__Capabilities*) reset members to default
/// - int soap_read_trt__Capabilities(soap*, trt__Capabilities*) deserialize from a source
/// - int soap_write_trt__Capabilities(soap*, trt__Capabilities*) serialize to a sink
/// - trt__Capabilities* soap_dup_trt__Capabilities(soap*, trt__Capabilities* dst, trt__Capabilities *src) returns deep copy of trt__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__Capabilities(trt__Capabilities*) deep deletes trt__Capabilities data members, use only on dst after soap_dup_trt__Capabilities(NULL, trt__Capabilities *dst, trt__Capabilities *src) (use soapcpp2 -Ed)
struct trt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    struct trt__ProfileCapabilities*     ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    struct trt__StreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "SnapshotUri" of XSD type xs:boolean.
   @enum xsd__boolean*                   SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "Rotation" of XSD type xs:boolean.
   @enum xsd__boolean*                   Rotation                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for changing video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "VideoSourceMode" of XSD type xs:boolean.
   @enum xsd__boolean*                   VideoSourceMode                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if OSD is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "OSD" of XSD type xs:boolean.
   @enum xsd__boolean*                   OSD                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the Efficient XML Interchange (EXI) binary XML format.
/// </BLOCKQUOTE></PRE>
/// Attribute "EXICompression" of XSD type xs:boolean.
   @enum xsd__boolean*                   EXICompression                 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
///
/// struct trt__ProfileCapabilities operations:
/// - soap_default_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities*) reset members to default
/// - int soap_read_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities*) deserialize from a source
/// - int soap_write_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities*) serialize to a sink
/// - trt__ProfileCapabilities* soap_dup_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities* dst, trt__ProfileCapabilities *src) returns deep copy of trt__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__ProfileCapabilities(trt__ProfileCapabilities*) deep deletes trt__ProfileCapabilities data members, use only on dst after soap_dup_trt__ProfileCapabilities(NULL, trt__ProfileCapabilities *dst, trt__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct trt__ProfileCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfProfiles" of XSD type xs:int.
   @int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
///
/// struct trt__StreamingCapabilities operations:
/// - soap_default_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities*) reset members to default
/// - int soap_read_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities*) deserialize from a source
/// - int soap_write_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities*) serialize to a sink
/// - trt__StreamingCapabilities* soap_dup_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities* dst, trt__StreamingCapabilities *src) returns deep copy of trt__StreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__StreamingCapabilities(trt__StreamingCapabilities*) deep deletes trt__StreamingCapabilities data members, use only on dst after soap_dup_trt__StreamingCapabilities(NULL, trt__StreamingCapabilities *dst, trt__StreamingCapabilities *src) (use soapcpp2 -Ed)
struct trt__StreamingCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTPMulticast" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP over TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_RTSP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
/// Attribute "NonAggregateControl" of XSD type xs:boolean.
   @enum xsd__boolean*                   NonAggregateControl            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the device does not support live media streaming via RTSP.
/// </BLOCKQUOTE></PRE>
/// Attribute "NoRTSPStreaming" of XSD type xs:boolean.
   @enum xsd__boolean*                   NoRTSPStreaming                0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceMode is a complexType.
///
/// struct trt__VideoSourceMode operations:
/// - soap_default_trt__VideoSourceMode(soap*, trt__VideoSourceMode*) reset members to default
/// - int soap_read_trt__VideoSourceMode(soap*, trt__VideoSourceMode*) deserialize from a source
/// - int soap_write_trt__VideoSourceMode(soap*, trt__VideoSourceMode*) serialize to a sink
/// - trt__VideoSourceMode* soap_dup_trt__VideoSourceMode(soap*, trt__VideoSourceMode* dst, trt__VideoSourceMode *src) returns deep copy of trt__VideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__VideoSourceMode(trt__VideoSourceMode*) deep deletes trt__VideoSourceMode data members, use only on dst after soap_dup_trt__VideoSourceMode(NULL, trt__VideoSourceMode *dst, trt__VideoSourceMode *src) (use soapcpp2 -Ed)
struct trt__VideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Max frame rate in frames per second for this video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "MaxFramerate" of XSD type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Max horizontal and vertical resolution for this video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "MaxResolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          MaxResolution                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
/// Element "Encodings" of XSD type "http://www.onvif.org/ver10/media/wsdl":EncodingTypes.
    trt__EncodingTypes                   Encodings                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// </BLOCKQUOTE></PRE>
/// Element "Reboot" of XSD type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of this video source mode. This field should be described in English.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension.
    struct trt__VideoSourceModeExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicate token for video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "Enabled" of XSD type xs:boolean.
   @enum xsd__boolean*                   Enabled                        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension is a complexType.
///
/// struct trt__VideoSourceModeExtension operations:
/// - soap_default_trt__VideoSourceModeExtension(soap*, trt__VideoSourceModeExtension*) reset members to default
/// - int soap_read_trt__VideoSourceModeExtension(soap*, trt__VideoSourceModeExtension*) deserialize from a source
/// - int soap_write_trt__VideoSourceModeExtension(soap*, trt__VideoSourceModeExtension*) serialize to a sink
/// - trt__VideoSourceModeExtension* soap_dup_trt__VideoSourceModeExtension(soap*, trt__VideoSourceModeExtension* dst, trt__VideoSourceModeExtension *src) returns deep copy of trt__VideoSourceModeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__VideoSourceModeExtension(trt__VideoSourceModeExtension*) deep deletes trt__VideoSourceModeExtension data members, use only on dst after soap_dup_trt__VideoSourceModeExtension(NULL, trt__VideoSourceModeExtension *dst, trt__VideoSourceModeExtension *src) (use soapcpp2 -Ed)
struct trt__VideoSourceModeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
///
/// struct _trt__GetServiceCapabilities operations:
/// - soap_default__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities*) reset members to default
/// - int soap_read__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities*) serialize to a sink
/// - _trt__GetServiceCapabilities* soap_dup__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities* dst, _trt__GetServiceCapabilities *src) returns deep copy of _trt__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetServiceCapabilities(_trt__GetServiceCapabilities*) deep deletes _trt__GetServiceCapabilities data members, use only on dst after soap_dup__trt__GetServiceCapabilities(NULL, _trt__GetServiceCapabilities *dst, _trt__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _trt__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// struct _trt__GetServiceCapabilitiesResponse operations:
/// - soap_default__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse*) reset members to default
/// - int soap_read__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _trt__GetServiceCapabilitiesResponse* soap_dup__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse* dst, _trt__GetServiceCapabilitiesResponse *src) returns deep copy of _trt__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetServiceCapabilitiesResponse(_trt__GetServiceCapabilitiesResponse*) deep deletes _trt__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__trt__GetServiceCapabilitiesResponse(NULL, _trt__GetServiceCapabilitiesResponse *dst, _trt__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    struct trt__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
///
/// struct _trt__GetVideoSources operations:
/// - soap_default__trt__GetVideoSources(soap*, _trt__GetVideoSources*) reset members to default
/// - int soap_read__trt__GetVideoSources(soap*, _trt__GetVideoSources*) deserialize from a source
/// - int soap_write__trt__GetVideoSources(soap*, _trt__GetVideoSources*) serialize to a sink
/// - _trt__GetVideoSources* soap_dup__trt__GetVideoSources(soap*, _trt__GetVideoSources* dst, _trt__GetVideoSources *src) returns deep copy of _trt__GetVideoSources src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSources(_trt__GetVideoSources*) deep deletes _trt__GetVideoSources data members, use only on dst after soap_dup__trt__GetVideoSources(NULL, _trt__GetVideoSources *dst, _trt__GetVideoSources *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSources
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
///
/// struct _trt__GetVideoSourcesResponse operations:
/// - soap_default__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse*) reset members to default
/// - int soap_read__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse*) serialize to a sink
/// - _trt__GetVideoSourcesResponse* soap_dup__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse* dst, _trt__GetVideoSourcesResponse *src) returns deep copy of _trt__GetVideoSourcesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourcesResponse(_trt__GetVideoSourcesResponse*) deep deletes _trt__GetVideoSourcesResponse data members, use only on dst after soap_dup__trt__GetVideoSourcesResponse(NULL, _trt__GetVideoSourcesResponse *dst, _trt__GetVideoSourcesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourcesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Video Sources
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoSource* is 0..unbounded.
   $int                                  __sizeVideoSources             0;
/// Array struct tt__VideoSource* of size 0..unbounded.
    struct tt__VideoSource*              VideoSources                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
///
/// struct _trt__GetAudioSources operations:
/// - soap_default__trt__GetAudioSources(soap*, _trt__GetAudioSources*) reset members to default
/// - int soap_read__trt__GetAudioSources(soap*, _trt__GetAudioSources*) deserialize from a source
/// - int soap_write__trt__GetAudioSources(soap*, _trt__GetAudioSources*) serialize to a sink
/// - _trt__GetAudioSources* soap_dup__trt__GetAudioSources(soap*, _trt__GetAudioSources* dst, _trt__GetAudioSources *src) returns deep copy of _trt__GetAudioSources src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSources(_trt__GetAudioSources*) deep deletes _trt__GetAudioSources data members, use only on dst after soap_dup__trt__GetAudioSources(NULL, _trt__GetAudioSources *dst, _trt__GetAudioSources *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSources
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
///
/// struct _trt__GetAudioSourcesResponse operations:
/// - soap_default__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse*) reset members to default
/// - int soap_read__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse*) serialize to a sink
/// - _trt__GetAudioSourcesResponse* soap_dup__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse* dst, _trt__GetAudioSourcesResponse *src) returns deep copy of _trt__GetAudioSourcesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourcesResponse(_trt__GetAudioSourcesResponse*) deep deletes _trt__GetAudioSourcesResponse data members, use only on dst after soap_dup__trt__GetAudioSourcesResponse(NULL, _trt__GetAudioSourcesResponse *dst, _trt__GetAudioSourcesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourcesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Sources
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioSource* is 0..unbounded.
   $int                                  __sizeAudioSources             0;
/// Array struct tt__AudioSource* of size 0..unbounded.
    struct tt__AudioSource*              AudioSources                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
///
/// struct _trt__GetAudioOutputs operations:
/// - soap_default__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs*) reset members to default
/// - int soap_read__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs*) serialize to a sink
/// - _trt__GetAudioOutputs* soap_dup__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs* dst, _trt__GetAudioOutputs *src) returns deep copy of _trt__GetAudioOutputs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputs(_trt__GetAudioOutputs*) deep deletes _trt__GetAudioOutputs data members, use only on dst after soap_dup__trt__GetAudioOutputs(NULL, _trt__GetAudioOutputs *dst, _trt__GetAudioOutputs *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
///
/// struct _trt__GetAudioOutputsResponse operations:
/// - soap_default__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse*) reset members to default
/// - int soap_read__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse*) serialize to a sink
/// - _trt__GetAudioOutputsResponse* soap_dup__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse* dst, _trt__GetAudioOutputsResponse *src) returns deep copy of _trt__GetAudioOutputsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputsResponse(_trt__GetAudioOutputsResponse*) deep deletes _trt__GetAudioOutputsResponse data members, use only on dst after soap_dup__trt__GetAudioOutputsResponse(NULL, _trt__GetAudioOutputsResponse *dst, _trt__GetAudioOutputsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputsResponse
{
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Outputs
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioOutput* is 0..unbounded.
   $int                                  __sizeAudioOutputs             0;
/// Array struct tt__AudioOutput* of size 0..unbounded.
    struct tt__AudioOutput*              AudioOutputs                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
///
/// struct _trt__CreateProfile operations:
/// - soap_default__trt__CreateProfile(soap*, _trt__CreateProfile*) reset members to default
/// - int soap_read__trt__CreateProfile(soap*, _trt__CreateProfile*) deserialize from a source
/// - int soap_write__trt__CreateProfile(soap*, _trt__CreateProfile*) serialize to a sink
/// - _trt__CreateProfile* soap_dup__trt__CreateProfile(soap*, _trt__CreateProfile* dst, _trt__CreateProfile *src) returns deep copy of _trt__CreateProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateProfile(_trt__CreateProfile*) deep deletes _trt__CreateProfile data members, use only on dst after soap_dup__trt__CreateProfile(NULL, _trt__CreateProfile *dst, _trt__CreateProfile *src) (use soapcpp2 -Ed)
struct _trt__CreateProfile
{
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
///
/// struct _trt__CreateProfileResponse operations:
/// - soap_default__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse*) reset members to default
/// - int soap_read__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse*) deserialize from a source
/// - int soap_write__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse*) serialize to a sink
/// - _trt__CreateProfileResponse* soap_dup__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse* dst, _trt__CreateProfileResponse *src) returns deep copy of _trt__CreateProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateProfileResponse(_trt__CreateProfileResponse*) deep deletes _trt__CreateProfileResponse data members, use only on dst after soap_dup__trt__CreateProfileResponse(NULL, _trt__CreateProfileResponse *dst, _trt__CreateProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__CreateProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the new created profile
/// </BLOCKQUOTE></PRE>
/// Element "Profile" of XSD type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
///
/// struct _trt__GetProfile operations:
/// - soap_default__trt__GetProfile(soap*, _trt__GetProfile*) reset members to default
/// - int soap_read__trt__GetProfile(soap*, _trt__GetProfile*) deserialize from a source
/// - int soap_write__trt__GetProfile(soap*, _trt__GetProfile*) serialize to a sink
/// - _trt__GetProfile* soap_dup__trt__GetProfile(soap*, _trt__GetProfile* dst, _trt__GetProfile *src) returns deep copy of _trt__GetProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfile(_trt__GetProfile*) deep deletes _trt__GetProfile data members, use only on dst after soap_dup__trt__GetProfile(NULL, _trt__GetProfile *dst, _trt__GetProfile *src) (use soapcpp2 -Ed)
struct _trt__GetProfile
{
/// <PRE><BLOCKQUOTE>
///   this command requests a specific profile
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
///
/// struct _trt__GetProfileResponse operations:
/// - soap_default__trt__GetProfileResponse(soap*, _trt__GetProfileResponse*) reset members to default
/// - int soap_read__trt__GetProfileResponse(soap*, _trt__GetProfileResponse*) deserialize from a source
/// - int soap_write__trt__GetProfileResponse(soap*, _trt__GetProfileResponse*) serialize to a sink
/// - _trt__GetProfileResponse* soap_dup__trt__GetProfileResponse(soap*, _trt__GetProfileResponse* dst, _trt__GetProfileResponse *src) returns deep copy of _trt__GetProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfileResponse(_trt__GetProfileResponse*) deep deletes _trt__GetProfileResponse data members, use only on dst after soap_dup__trt__GetProfileResponse(NULL, _trt__GetProfileResponse *dst, _trt__GetProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__GetProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the requested media profile
/// </BLOCKQUOTE></PRE>
/// Element "Profile" of XSD type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
///
/// struct _trt__GetProfiles operations:
/// - soap_default__trt__GetProfiles(soap*, _trt__GetProfiles*) reset members to default
/// - int soap_read__trt__GetProfiles(soap*, _trt__GetProfiles*) deserialize from a source
/// - int soap_write__trt__GetProfiles(soap*, _trt__GetProfiles*) serialize to a sink
/// - _trt__GetProfiles* soap_dup__trt__GetProfiles(soap*, _trt__GetProfiles* dst, _trt__GetProfiles *src) returns deep copy of _trt__GetProfiles src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfiles(_trt__GetProfiles*) deep deletes _trt__GetProfiles data members, use only on dst after soap_dup__trt__GetProfiles(NULL, _trt__GetProfiles *dst, _trt__GetProfiles *src) (use soapcpp2 -Ed)
struct _trt__GetProfiles
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
///
/// struct _trt__GetProfilesResponse operations:
/// - soap_default__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse*) reset members to default
/// - int soap_read__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse*) deserialize from a source
/// - int soap_write__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse*) serialize to a sink
/// - _trt__GetProfilesResponse* soap_dup__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse* dst, _trt__GetProfilesResponse *src) returns deep copy of _trt__GetProfilesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfilesResponse(_trt__GetProfilesResponse*) deep deletes _trt__GetProfilesResponse data members, use only on dst after soap_dup__trt__GetProfilesResponse(NULL, _trt__GetProfilesResponse *dst, _trt__GetProfilesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   lists all profiles that exist in the media service
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Profile* is 0..unbounded.
   $int                                  __sizeProfiles                 0;
/// Array struct tt__Profile* of size 0..unbounded.
    struct tt__Profile*                  Profiles                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
///
/// struct _trt__AddVideoEncoderConfiguration operations:
/// - soap_default__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration*) reset members to default
/// - int soap_read__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration*) serialize to a sink
/// - _trt__AddVideoEncoderConfiguration* soap_dup__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration* dst, _trt__AddVideoEncoderConfiguration *src) returns deep copy of _trt__AddVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoEncoderConfiguration(_trt__AddVideoEncoderConfiguration*) deep deletes _trt__AddVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__AddVideoEncoderConfiguration(NULL, _trt__AddVideoEncoderConfiguration *dst, _trt__AddVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
///
/// struct _trt__AddVideoEncoderConfigurationResponse operations:
/// - soap_default__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__AddVideoEncoderConfigurationResponse* soap_dup__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse* dst, _trt__AddVideoEncoderConfigurationResponse *src) returns deep copy of _trt__AddVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoEncoderConfigurationResponse(_trt__AddVideoEncoderConfigurationResponse*) deep deletes _trt__AddVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__AddVideoEncoderConfigurationResponse(NULL, _trt__AddVideoEncoderConfigurationResponse *dst, _trt__AddVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
///
/// struct _trt__RemoveVideoEncoderConfiguration operations:
/// - soap_default__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration*) reset members to default
/// - int soap_read__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration*) serialize to a sink
/// - _trt__RemoveVideoEncoderConfiguration* soap_dup__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration* dst, _trt__RemoveVideoEncoderConfiguration *src) returns deep copy of _trt__RemoveVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoEncoderConfiguration(_trt__RemoveVideoEncoderConfiguration*) deep deletes _trt__RemoveVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__RemoveVideoEncoderConfiguration(NULL, _trt__RemoveVideoEncoderConfiguration *dst, _trt__RemoveVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
///
/// struct _trt__RemoveVideoEncoderConfigurationResponse operations:
/// - soap_default__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__RemoveVideoEncoderConfigurationResponse* soap_dup__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse* dst, _trt__RemoveVideoEncoderConfigurationResponse *src) returns deep copy of _trt__RemoveVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoEncoderConfigurationResponse(_trt__RemoveVideoEncoderConfigurationResponse*) deep deletes _trt__RemoveVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveVideoEncoderConfigurationResponse(NULL, _trt__RemoveVideoEncoderConfigurationResponse *dst, _trt__RemoveVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
///
/// struct _trt__AddVideoSourceConfiguration operations:
/// - soap_default__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration*) reset members to default
/// - int soap_read__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration*) serialize to a sink
/// - _trt__AddVideoSourceConfiguration* soap_dup__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration* dst, _trt__AddVideoSourceConfiguration *src) returns deep copy of _trt__AddVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoSourceConfiguration(_trt__AddVideoSourceConfiguration*) deep deletes _trt__AddVideoSourceConfiguration data members, use only on dst after soap_dup__trt__AddVideoSourceConfiguration(NULL, _trt__AddVideoSourceConfiguration *dst, _trt__AddVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
///
/// struct _trt__AddVideoSourceConfigurationResponse operations:
/// - soap_default__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__AddVideoSourceConfigurationResponse* soap_dup__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse* dst, _trt__AddVideoSourceConfigurationResponse *src) returns deep copy of _trt__AddVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoSourceConfigurationResponse(_trt__AddVideoSourceConfigurationResponse*) deep deletes _trt__AddVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__AddVideoSourceConfigurationResponse(NULL, _trt__AddVideoSourceConfigurationResponse *dst, _trt__AddVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
///
/// struct _trt__RemoveVideoSourceConfiguration operations:
/// - soap_default__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration*) reset members to default
/// - int soap_read__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration*) serialize to a sink
/// - _trt__RemoveVideoSourceConfiguration* soap_dup__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration* dst, _trt__RemoveVideoSourceConfiguration *src) returns deep copy of _trt__RemoveVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoSourceConfiguration(_trt__RemoveVideoSourceConfiguration*) deep deletes _trt__RemoveVideoSourceConfiguration data members, use only on dst after soap_dup__trt__RemoveVideoSourceConfiguration(NULL, _trt__RemoveVideoSourceConfiguration *dst, _trt__RemoveVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
///
/// struct _trt__RemoveVideoSourceConfigurationResponse operations:
/// - soap_default__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__RemoveVideoSourceConfigurationResponse* soap_dup__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse* dst, _trt__RemoveVideoSourceConfigurationResponse *src) returns deep copy of _trt__RemoveVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoSourceConfigurationResponse(_trt__RemoveVideoSourceConfigurationResponse*) deep deletes _trt__RemoveVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveVideoSourceConfigurationResponse(NULL, _trt__RemoveVideoSourceConfigurationResponse *dst, _trt__RemoveVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
///
/// struct _trt__AddAudioEncoderConfiguration operations:
/// - soap_default__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration*) reset members to default
/// - int soap_read__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration*) serialize to a sink
/// - _trt__AddAudioEncoderConfiguration* soap_dup__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration* dst, _trt__AddAudioEncoderConfiguration *src) returns deep copy of _trt__AddAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioEncoderConfiguration(_trt__AddAudioEncoderConfiguration*) deep deletes _trt__AddAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__AddAudioEncoderConfiguration(NULL, _trt__AddAudioEncoderConfiguration *dst, _trt__AddAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
///
/// struct _trt__AddAudioEncoderConfigurationResponse operations:
/// - soap_default__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioEncoderConfigurationResponse* soap_dup__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse* dst, _trt__AddAudioEncoderConfigurationResponse *src) returns deep copy of _trt__AddAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioEncoderConfigurationResponse(_trt__AddAudioEncoderConfigurationResponse*) deep deletes _trt__AddAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioEncoderConfigurationResponse(NULL, _trt__AddAudioEncoderConfigurationResponse *dst, _trt__AddAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
///
/// struct _trt__RemoveAudioEncoderConfiguration operations:
/// - soap_default__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration*) reset members to default
/// - int soap_read__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration*) serialize to a sink
/// - _trt__RemoveAudioEncoderConfiguration* soap_dup__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration* dst, _trt__RemoveAudioEncoderConfiguration *src) returns deep copy of _trt__RemoveAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioEncoderConfiguration(_trt__RemoveAudioEncoderConfiguration*) deep deletes _trt__RemoveAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioEncoderConfiguration(NULL, _trt__RemoveAudioEncoderConfiguration *dst, _trt__RemoveAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
///
/// struct _trt__RemoveAudioEncoderConfigurationResponse operations:
/// - soap_default__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioEncoderConfigurationResponse* soap_dup__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse* dst, _trt__RemoveAudioEncoderConfigurationResponse *src) returns deep copy of _trt__RemoveAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioEncoderConfigurationResponse(_trt__RemoveAudioEncoderConfigurationResponse*) deep deletes _trt__RemoveAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioEncoderConfigurationResponse(NULL, _trt__RemoveAudioEncoderConfigurationResponse *dst, _trt__RemoveAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
///
/// struct _trt__AddAudioSourceConfiguration operations:
/// - soap_default__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration*) reset members to default
/// - int soap_read__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration*) serialize to a sink
/// - _trt__AddAudioSourceConfiguration* soap_dup__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration* dst, _trt__AddAudioSourceConfiguration *src) returns deep copy of _trt__AddAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioSourceConfiguration(_trt__AddAudioSourceConfiguration*) deep deletes _trt__AddAudioSourceConfiguration data members, use only on dst after soap_dup__trt__AddAudioSourceConfiguration(NULL, _trt__AddAudioSourceConfiguration *dst, _trt__AddAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
///
/// struct _trt__AddAudioSourceConfigurationResponse operations:
/// - soap_default__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioSourceConfigurationResponse* soap_dup__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse* dst, _trt__AddAudioSourceConfigurationResponse *src) returns deep copy of _trt__AddAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioSourceConfigurationResponse(_trt__AddAudioSourceConfigurationResponse*) deep deletes _trt__AddAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioSourceConfigurationResponse(NULL, _trt__AddAudioSourceConfigurationResponse *dst, _trt__AddAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
///
/// struct _trt__RemoveAudioSourceConfiguration operations:
/// - soap_default__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration*) reset members to default
/// - int soap_read__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration*) serialize to a sink
/// - _trt__RemoveAudioSourceConfiguration* soap_dup__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration* dst, _trt__RemoveAudioSourceConfiguration *src) returns deep copy of _trt__RemoveAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioSourceConfiguration(_trt__RemoveAudioSourceConfiguration*) deep deletes _trt__RemoveAudioSourceConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioSourceConfiguration(NULL, _trt__RemoveAudioSourceConfiguration *dst, _trt__RemoveAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
///
/// struct _trt__RemoveAudioSourceConfigurationResponse operations:
/// - soap_default__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioSourceConfigurationResponse* soap_dup__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse* dst, _trt__RemoveAudioSourceConfigurationResponse *src) returns deep copy of _trt__RemoveAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioSourceConfigurationResponse(_trt__RemoveAudioSourceConfigurationResponse*) deep deletes _trt__RemoveAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioSourceConfigurationResponse(NULL, _trt__RemoveAudioSourceConfigurationResponse *dst, _trt__RemoveAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
///
/// struct _trt__AddPTZConfiguration operations:
/// - soap_default__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration*) reset members to default
/// - int soap_read__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration*) deserialize from a source
/// - int soap_write__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration*) serialize to a sink
/// - _trt__AddPTZConfiguration* soap_dup__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration* dst, _trt__AddPTZConfiguration *src) returns deep copy of _trt__AddPTZConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddPTZConfiguration(_trt__AddPTZConfiguration*) deep deletes _trt__AddPTZConfiguration data members, use only on dst after soap_dup__trt__AddPTZConfiguration(NULL, _trt__AddPTZConfiguration *dst, _trt__AddPTZConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddPTZConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the PTZConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
///
/// struct _trt__AddPTZConfigurationResponse operations:
/// - soap_default__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse*) serialize to a sink
/// - _trt__AddPTZConfigurationResponse* soap_dup__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse* dst, _trt__AddPTZConfigurationResponse *src) returns deep copy of _trt__AddPTZConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddPTZConfigurationResponse(_trt__AddPTZConfigurationResponse*) deep deletes _trt__AddPTZConfigurationResponse data members, use only on dst after soap_dup__trt__AddPTZConfigurationResponse(NULL, _trt__AddPTZConfigurationResponse *dst, _trt__AddPTZConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddPTZConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
///
/// struct _trt__RemovePTZConfiguration operations:
/// - soap_default__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration*) reset members to default
/// - int soap_read__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration*) deserialize from a source
/// - int soap_write__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration*) serialize to a sink
/// - _trt__RemovePTZConfiguration* soap_dup__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration* dst, _trt__RemovePTZConfiguration *src) returns deep copy of _trt__RemovePTZConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemovePTZConfiguration(_trt__RemovePTZConfiguration*) deep deletes _trt__RemovePTZConfiguration data members, use only on dst after soap_dup__trt__RemovePTZConfiguration(NULL, _trt__RemovePTZConfiguration *dst, _trt__RemovePTZConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemovePTZConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   PTZConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
///
/// struct _trt__RemovePTZConfigurationResponse operations:
/// - soap_default__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse*) serialize to a sink
/// - _trt__RemovePTZConfigurationResponse* soap_dup__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse* dst, _trt__RemovePTZConfigurationResponse *src) returns deep copy of _trt__RemovePTZConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemovePTZConfigurationResponse(_trt__RemovePTZConfigurationResponse*) deep deletes _trt__RemovePTZConfigurationResponse data members, use only on dst after soap_dup__trt__RemovePTZConfigurationResponse(NULL, _trt__RemovePTZConfigurationResponse *dst, _trt__RemovePTZConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemovePTZConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
///
/// struct _trt__AddVideoAnalyticsConfiguration operations:
/// - soap_default__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration*) reset members to default
/// - int soap_read__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__AddVideoAnalyticsConfiguration* soap_dup__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration* dst, _trt__AddVideoAnalyticsConfiguration *src) returns deep copy of _trt__AddVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoAnalyticsConfiguration(_trt__AddVideoAnalyticsConfiguration*) deep deletes _trt__AddVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__AddVideoAnalyticsConfiguration(NULL, _trt__AddVideoAnalyticsConfiguration *dst, _trt__AddVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoAnalyticsConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
///
/// struct _trt__AddVideoAnalyticsConfigurationResponse operations:
/// - soap_default__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__AddVideoAnalyticsConfigurationResponse* soap_dup__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse* dst, _trt__AddVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__AddVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddVideoAnalyticsConfigurationResponse(_trt__AddVideoAnalyticsConfigurationResponse*) deep deletes _trt__AddVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__AddVideoAnalyticsConfigurationResponse(NULL, _trt__AddVideoAnalyticsConfigurationResponse *dst, _trt__AddVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
///
/// struct _trt__RemoveVideoAnalyticsConfiguration operations:
/// - soap_default__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration*) reset members to default
/// - int soap_read__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__RemoveVideoAnalyticsConfiguration* soap_dup__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration* dst, _trt__RemoveVideoAnalyticsConfiguration *src) returns deep copy of _trt__RemoveVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoAnalyticsConfiguration(_trt__RemoveVideoAnalyticsConfiguration*) deep deletes _trt__RemoveVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__RemoveVideoAnalyticsConfiguration(NULL, _trt__RemoveVideoAnalyticsConfiguration *dst, _trt__RemoveVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoAnalyticsConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
///
/// struct _trt__RemoveVideoAnalyticsConfigurationResponse operations:
/// - soap_default__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* soap_dup__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse* dst, _trt__RemoveVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__RemoveVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveVideoAnalyticsConfigurationResponse(_trt__RemoveVideoAnalyticsConfigurationResponse*) deep deletes _trt__RemoveVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveVideoAnalyticsConfigurationResponse(NULL, _trt__RemoveVideoAnalyticsConfigurationResponse *dst, _trt__RemoveVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
///
/// struct _trt__AddMetadataConfiguration operations:
/// - soap_default__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration*) reset members to default
/// - int soap_read__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration*) serialize to a sink
/// - _trt__AddMetadataConfiguration* soap_dup__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration* dst, _trt__AddMetadataConfiguration *src) returns deep copy of _trt__AddMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddMetadataConfiguration(_trt__AddMetadataConfiguration*) deep deletes _trt__AddMetadataConfiguration data members, use only on dst after soap_dup__trt__AddMetadataConfiguration(NULL, _trt__AddMetadataConfiguration *dst, _trt__AddMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the MetadataConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
///
/// struct _trt__AddMetadataConfigurationResponse operations:
/// - soap_default__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse*) serialize to a sink
/// - _trt__AddMetadataConfigurationResponse* soap_dup__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse* dst, _trt__AddMetadataConfigurationResponse *src) returns deep copy of _trt__AddMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddMetadataConfigurationResponse(_trt__AddMetadataConfigurationResponse*) deep deletes _trt__AddMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__AddMetadataConfigurationResponse(NULL, _trt__AddMetadataConfigurationResponse *dst, _trt__AddMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
///
/// struct _trt__RemoveMetadataConfiguration operations:
/// - soap_default__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration*) reset members to default
/// - int soap_read__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration*) serialize to a sink
/// - _trt__RemoveMetadataConfiguration* soap_dup__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration* dst, _trt__RemoveMetadataConfiguration *src) returns deep copy of _trt__RemoveMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveMetadataConfiguration(_trt__RemoveMetadataConfiguration*) deep deletes _trt__RemoveMetadataConfiguration data members, use only on dst after soap_dup__trt__RemoveMetadataConfiguration(NULL, _trt__RemoveMetadataConfiguration *dst, _trt__RemoveMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   MetadataConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
///
/// struct _trt__RemoveMetadataConfigurationResponse operations:
/// - soap_default__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse*) serialize to a sink
/// - _trt__RemoveMetadataConfigurationResponse* soap_dup__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse* dst, _trt__RemoveMetadataConfigurationResponse *src) returns deep copy of _trt__RemoveMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveMetadataConfigurationResponse(_trt__RemoveMetadataConfigurationResponse*) deep deletes _trt__RemoveMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveMetadataConfigurationResponse(NULL, _trt__RemoveMetadataConfigurationResponse *dst, _trt__RemoveMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
///
/// struct _trt__AddAudioOutputConfiguration operations:
/// - soap_default__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration*) reset members to default
/// - int soap_read__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration*) serialize to a sink
/// - _trt__AddAudioOutputConfiguration* soap_dup__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration* dst, _trt__AddAudioOutputConfiguration *src) returns deep copy of _trt__AddAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioOutputConfiguration(_trt__AddAudioOutputConfiguration*) deep deletes _trt__AddAudioOutputConfiguration data members, use only on dst after soap_dup__trt__AddAudioOutputConfiguration(NULL, _trt__AddAudioOutputConfiguration *dst, _trt__AddAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioOutputConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
///
/// struct _trt__AddAudioOutputConfigurationResponse operations:
/// - soap_default__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioOutputConfigurationResponse* soap_dup__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse* dst, _trt__AddAudioOutputConfigurationResponse *src) returns deep copy of _trt__AddAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioOutputConfigurationResponse(_trt__AddAudioOutputConfigurationResponse*) deep deletes _trt__AddAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioOutputConfigurationResponse(NULL, _trt__AddAudioOutputConfigurationResponse *dst, _trt__AddAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
///
/// struct _trt__RemoveAudioOutputConfiguration operations:
/// - soap_default__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration*) reset members to default
/// - int soap_read__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration*) serialize to a sink
/// - _trt__RemoveAudioOutputConfiguration* soap_dup__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration* dst, _trt__RemoveAudioOutputConfiguration *src) returns deep copy of _trt__RemoveAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioOutputConfiguration(_trt__RemoveAudioOutputConfiguration*) deep deletes _trt__RemoveAudioOutputConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioOutputConfiguration(NULL, _trt__RemoveAudioOutputConfiguration *dst, _trt__RemoveAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioOutputConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
///
/// struct _trt__RemoveAudioOutputConfigurationResponse operations:
/// - soap_default__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioOutputConfigurationResponse* soap_dup__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse* dst, _trt__RemoveAudioOutputConfigurationResponse *src) returns deep copy of _trt__RemoveAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioOutputConfigurationResponse(_trt__RemoveAudioOutputConfigurationResponse*) deep deletes _trt__RemoveAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioOutputConfigurationResponse(NULL, _trt__RemoveAudioOutputConfigurationResponse *dst, _trt__RemoveAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
///
/// struct _trt__AddAudioDecoderConfiguration operations:
/// - soap_default__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration*) reset members to default
/// - int soap_read__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration*) serialize to a sink
/// - _trt__AddAudioDecoderConfiguration* soap_dup__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration* dst, _trt__AddAudioDecoderConfiguration *src) returns deep copy of _trt__AddAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioDecoderConfiguration(_trt__AddAudioDecoderConfiguration*) deep deletes _trt__AddAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__AddAudioDecoderConfiguration(NULL, _trt__AddAudioDecoderConfiguration *dst, _trt__AddAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__AddAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile where the configuration should be added.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the AudioDecoderConfiguration to add.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
///
/// struct _trt__AddAudioDecoderConfigurationResponse operations:
/// - soap_default__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__AddAudioDecoderConfigurationResponse* soap_dup__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse* dst, _trt__AddAudioDecoderConfigurationResponse *src) returns deep copy of _trt__AddAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__AddAudioDecoderConfigurationResponse(_trt__AddAudioDecoderConfigurationResponse*) deep deletes _trt__AddAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__AddAudioDecoderConfigurationResponse(NULL, _trt__AddAudioDecoderConfigurationResponse *dst, _trt__AddAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__AddAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
///
/// struct _trt__RemoveAudioDecoderConfiguration operations:
/// - soap_default__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration*) reset members to default
/// - int soap_read__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration*) serialize to a sink
/// - _trt__RemoveAudioDecoderConfiguration* soap_dup__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration* dst, _trt__RemoveAudioDecoderConfiguration *src) returns deep copy of _trt__RemoveAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioDecoderConfiguration(_trt__RemoveAudioDecoderConfiguration*) deep deletes _trt__RemoveAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__RemoveAudioDecoderConfiguration(NULL, _trt__RemoveAudioDecoderConfiguration *dst, _trt__RemoveAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
///
/// struct _trt__RemoveAudioDecoderConfigurationResponse operations:
/// - soap_default__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__RemoveAudioDecoderConfigurationResponse* soap_dup__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse* dst, _trt__RemoveAudioDecoderConfigurationResponse *src) returns deep copy of _trt__RemoveAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__RemoveAudioDecoderConfigurationResponse(_trt__RemoveAudioDecoderConfigurationResponse*) deep deletes _trt__RemoveAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__RemoveAudioDecoderConfigurationResponse(NULL, _trt__RemoveAudioDecoderConfigurationResponse *dst, _trt__RemoveAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__RemoveAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
///
/// struct _trt__DeleteProfile operations:
/// - soap_default__trt__DeleteProfile(soap*, _trt__DeleteProfile*) reset members to default
/// - int soap_read__trt__DeleteProfile(soap*, _trt__DeleteProfile*) deserialize from a source
/// - int soap_write__trt__DeleteProfile(soap*, _trt__DeleteProfile*) serialize to a sink
/// - _trt__DeleteProfile* soap_dup__trt__DeleteProfile(soap*, _trt__DeleteProfile* dst, _trt__DeleteProfile *src) returns deep copy of _trt__DeleteProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteProfile(_trt__DeleteProfile*) deep deletes _trt__DeleteProfile data members, use only on dst after soap_dup__trt__DeleteProfile(NULL, _trt__DeleteProfile *dst, _trt__DeleteProfile *src) (use soapcpp2 -Ed)
struct _trt__DeleteProfile
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
///
/// struct _trt__DeleteProfileResponse operations:
/// - soap_default__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse*) reset members to default
/// - int soap_read__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse*) deserialize from a source
/// - int soap_write__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse*) serialize to a sink
/// - _trt__DeleteProfileResponse* soap_dup__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse* dst, _trt__DeleteProfileResponse *src) returns deep copy of _trt__DeleteProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteProfileResponse(_trt__DeleteProfileResponse*) deep deletes _trt__DeleteProfileResponse data members, use only on dst after soap_dup__trt__DeleteProfileResponse(NULL, _trt__DeleteProfileResponse *dst, _trt__DeleteProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__DeleteProfileResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
///
/// struct _trt__GetVideoEncoderConfigurations operations:
/// - soap_default__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations*) reset members to default
/// - int soap_read__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurations* soap_dup__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations* dst, _trt__GetVideoEncoderConfigurations *src) returns deep copy of _trt__GetVideoEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurations(_trt__GetVideoEncoderConfigurations*) deep deletes _trt__GetVideoEncoderConfigurations data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurations(NULL, _trt__GetVideoEncoderConfigurations *dst, _trt__GetVideoEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
/// struct _trt__GetVideoEncoderConfigurationsResponse operations:
/// - soap_default__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationsResponse* soap_dup__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse* dst, _trt__GetVideoEncoderConfigurationsResponse *src) returns deep copy of _trt__GetVideoEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationsResponse(_trt__GetVideoEncoderConfigurationsResponse*) deep deletes _trt__GetVideoEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationsResponse(NULL, _trt__GetVideoEncoderConfigurationsResponse *dst, _trt__GetVideoEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoderConfiguration* of size 0..unbounded.
    struct tt__VideoEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
///
/// struct _trt__GetVideoSourceConfigurations operations:
/// - soap_default__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations*) reset members to default
/// - int soap_read__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations*) serialize to a sink
/// - _trt__GetVideoSourceConfigurations* soap_dup__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations* dst, _trt__GetVideoSourceConfigurations *src) returns deep copy of _trt__GetVideoSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurations(_trt__GetVideoSourceConfigurations*) deep deletes _trt__GetVideoSourceConfigurations data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurations(NULL, _trt__GetVideoSourceConfigurations *dst, _trt__GetVideoSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
/// struct _trt__GetVideoSourceConfigurationsResponse operations:
/// - soap_default__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationsResponse* soap_dup__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse* dst, _trt__GetVideoSourceConfigurationsResponse *src) returns deep copy of _trt__GetVideoSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationsResponse(_trt__GetVideoSourceConfigurationsResponse*) deep deletes _trt__GetVideoSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationsResponse(NULL, _trt__GetVideoSourceConfigurationsResponse *dst, _trt__GetVideoSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
///
/// struct _trt__GetAudioEncoderConfigurations operations:
/// - soap_default__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations*) reset members to default
/// - int soap_read__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurations* soap_dup__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations* dst, _trt__GetAudioEncoderConfigurations *src) returns deep copy of _trt__GetAudioEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurations(_trt__GetAudioEncoderConfigurations*) deep deletes _trt__GetAudioEncoderConfigurations data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurations(NULL, _trt__GetAudioEncoderConfigurations *dst, _trt__GetAudioEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
/// struct _trt__GetAudioEncoderConfigurationsResponse operations:
/// - soap_default__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationsResponse* soap_dup__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse* dst, _trt__GetAudioEncoderConfigurationsResponse *src) returns deep copy of _trt__GetAudioEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationsResponse(_trt__GetAudioEncoderConfigurationsResponse*) deep deletes _trt__GetAudioEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationsResponse(NULL, _trt__GetAudioEncoderConfigurationsResponse *dst, _trt__GetAudioEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoderConfiguration* of size 0..unbounded.
    struct tt__AudioEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
///
/// struct _trt__GetAudioSourceConfigurations operations:
/// - soap_default__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations*) reset members to default
/// - int soap_read__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations*) serialize to a sink
/// - _trt__GetAudioSourceConfigurations* soap_dup__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations* dst, _trt__GetAudioSourceConfigurations *src) returns deep copy of _trt__GetAudioSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurations(_trt__GetAudioSourceConfigurations*) deep deletes _trt__GetAudioSourceConfigurations data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurations(NULL, _trt__GetAudioSourceConfigurations *dst, _trt__GetAudioSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
/// struct _trt__GetAudioSourceConfigurationsResponse operations:
/// - soap_default__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationsResponse* soap_dup__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse* dst, _trt__GetAudioSourceConfigurationsResponse *src) returns deep copy of _trt__GetAudioSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationsResponse(_trt__GetAudioSourceConfigurationsResponse*) deep deletes _trt__GetAudioSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationsResponse(NULL, _trt__GetAudioSourceConfigurationsResponse *dst, _trt__GetAudioSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
///
/// struct _trt__GetVideoAnalyticsConfigurations operations:
/// - soap_default__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations*) reset members to default
/// - int soap_read__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfigurations* soap_dup__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations* dst, _trt__GetVideoAnalyticsConfigurations *src) returns deep copy of _trt__GetVideoAnalyticsConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfigurations(_trt__GetVideoAnalyticsConfigurations*) deep deletes _trt__GetVideoAnalyticsConfigurations data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfigurations(NULL, _trt__GetVideoAnalyticsConfigurations *dst, _trt__GetVideoAnalyticsConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
///
/// struct _trt__GetVideoAnalyticsConfigurationsResponse operations:
/// - soap_default__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfigurationsResponse* soap_dup__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse* dst, _trt__GetVideoAnalyticsConfigurationsResponse *src) returns deep copy of _trt__GetVideoAnalyticsConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfigurationsResponse(_trt__GetVideoAnalyticsConfigurationsResponse*) deep deletes _trt__GetVideoAnalyticsConfigurationsResponse data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfigurationsResponse(NULL, _trt__GetVideoAnalyticsConfigurationsResponse *dst, _trt__GetVideoAnalyticsConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of VideoAnalytics configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
///
/// struct _trt__GetMetadataConfigurations operations:
/// - soap_default__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations*) reset members to default
/// - int soap_read__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations*) serialize to a sink
/// - _trt__GetMetadataConfigurations* soap_dup__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations* dst, _trt__GetMetadataConfigurations *src) returns deep copy of _trt__GetMetadataConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurations(_trt__GetMetadataConfigurations*) deep deletes _trt__GetMetadataConfigurations data members, use only on dst after soap_dup__trt__GetMetadataConfigurations(NULL, _trt__GetMetadataConfigurations *dst, _trt__GetMetadataConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
/// struct _trt__GetMetadataConfigurationsResponse operations:
/// - soap_default__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse*) serialize to a sink
/// - _trt__GetMetadataConfigurationsResponse* soap_dup__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse* dst, _trt__GetMetadataConfigurationsResponse *src) returns deep copy of _trt__GetMetadataConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationsResponse(_trt__GetMetadataConfigurationsResponse*) deep deletes _trt__GetMetadataConfigurationsResponse data members, use only on dst after soap_dup__trt__GetMetadataConfigurationsResponse(NULL, _trt__GetMetadataConfigurationsResponse *dst, _trt__GetMetadataConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
///
/// struct _trt__GetAudioOutputConfigurations operations:
/// - soap_default__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations*) reset members to default
/// - int soap_read__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations*) serialize to a sink
/// - _trt__GetAudioOutputConfigurations* soap_dup__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations* dst, _trt__GetAudioOutputConfigurations *src) returns deep copy of _trt__GetAudioOutputConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurations(_trt__GetAudioOutputConfigurations*) deep deletes _trt__GetAudioOutputConfigurations data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurations(NULL, _trt__GetAudioOutputConfigurations *dst, _trt__GetAudioOutputConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
/// struct _trt__GetAudioOutputConfigurationsResponse operations:
/// - soap_default__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationsResponse* soap_dup__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse* dst, _trt__GetAudioOutputConfigurationsResponse *src) returns deep copy of _trt__GetAudioOutputConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationsResponse(_trt__GetAudioOutputConfigurationsResponse*) deep deletes _trt__GetAudioOutputConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationsResponse(NULL, _trt__GetAudioOutputConfigurationsResponse *dst, _trt__GetAudioOutputConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
///
/// struct _trt__GetAudioDecoderConfigurations operations:
/// - soap_default__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations*) reset members to default
/// - int soap_read__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurations* soap_dup__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations* dst, _trt__GetAudioDecoderConfigurations *src) returns deep copy of _trt__GetAudioDecoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurations(_trt__GetAudioDecoderConfigurations*) deep deletes _trt__GetAudioDecoderConfigurations data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurations(NULL, _trt__GetAudioDecoderConfigurations *dst, _trt__GetAudioDecoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
/// struct _trt__GetAudioDecoderConfigurationsResponse operations:
/// - soap_default__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationsResponse* soap_dup__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse* dst, _trt__GetAudioDecoderConfigurationsResponse *src) returns deep copy of _trt__GetAudioDecoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationsResponse(_trt__GetAudioDecoderConfigurationsResponse*) deep deletes _trt__GetAudioDecoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationsResponse(NULL, _trt__GetAudioDecoderConfigurationsResponse *dst, _trt__GetAudioDecoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
///
/// struct _trt__GetVideoSourceConfiguration operations:
/// - soap_default__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration*) reset members to default
/// - int soap_read__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration*) serialize to a sink
/// - _trt__GetVideoSourceConfiguration* soap_dup__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration* dst, _trt__GetVideoSourceConfiguration *src) returns deep copy of _trt__GetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfiguration(_trt__GetVideoSourceConfiguration*) deep deletes _trt__GetVideoSourceConfiguration data members, use only on dst after soap_dup__trt__GetVideoSourceConfiguration(NULL, _trt__GetVideoSourceConfiguration *dst, _trt__GetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
/// struct _trt__GetVideoSourceConfigurationResponse operations:
/// - soap_default__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationResponse* soap_dup__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse* dst, _trt__GetVideoSourceConfigurationResponse *src) returns deep copy of _trt__GetVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationResponse(_trt__GetVideoSourceConfigurationResponse*) deep deletes _trt__GetVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationResponse(NULL, _trt__GetVideoSourceConfigurationResponse *dst, _trt__GetVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
///
/// struct _trt__GetVideoEncoderConfiguration operations:
/// - soap_default__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration*) reset members to default
/// - int soap_read__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration*) serialize to a sink
/// - _trt__GetVideoEncoderConfiguration* soap_dup__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration* dst, _trt__GetVideoEncoderConfiguration *src) returns deep copy of _trt__GetVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfiguration(_trt__GetVideoEncoderConfiguration*) deep deletes _trt__GetVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__GetVideoEncoderConfiguration(NULL, _trt__GetVideoEncoderConfiguration *dst, _trt__GetVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
///
/// struct _trt__GetVideoEncoderConfigurationResponse operations:
/// - soap_default__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationResponse* soap_dup__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse* dst, _trt__GetVideoEncoderConfigurationResponse *src) returns deep copy of _trt__GetVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationResponse(_trt__GetVideoEncoderConfigurationResponse*) deep deletes _trt__GetVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationResponse(NULL, _trt__GetVideoEncoderConfigurationResponse *dst, _trt__GetVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
///
/// struct _trt__GetAudioSourceConfiguration operations:
/// - soap_default__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration*) reset members to default
/// - int soap_read__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration*) serialize to a sink
/// - _trt__GetAudioSourceConfiguration* soap_dup__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration* dst, _trt__GetAudioSourceConfiguration *src) returns deep copy of _trt__GetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfiguration(_trt__GetAudioSourceConfiguration*) deep deletes _trt__GetAudioSourceConfiguration data members, use only on dst after soap_dup__trt__GetAudioSourceConfiguration(NULL, _trt__GetAudioSourceConfiguration *dst, _trt__GetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
/// struct _trt__GetAudioSourceConfigurationResponse operations:
/// - soap_default__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationResponse* soap_dup__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse* dst, _trt__GetAudioSourceConfigurationResponse *src) returns deep copy of _trt__GetAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationResponse(_trt__GetAudioSourceConfigurationResponse*) deep deletes _trt__GetAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationResponse(NULL, _trt__GetAudioSourceConfigurationResponse *dst, _trt__GetAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
///
/// struct _trt__GetAudioEncoderConfiguration operations:
/// - soap_default__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration*) reset members to default
/// - int soap_read__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration*) serialize to a sink
/// - _trt__GetAudioEncoderConfiguration* soap_dup__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration* dst, _trt__GetAudioEncoderConfiguration *src) returns deep copy of _trt__GetAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfiguration(_trt__GetAudioEncoderConfiguration*) deep deletes _trt__GetAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__GetAudioEncoderConfiguration(NULL, _trt__GetAudioEncoderConfiguration *dst, _trt__GetAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
///
/// struct _trt__GetAudioEncoderConfigurationResponse operations:
/// - soap_default__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationResponse* soap_dup__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse* dst, _trt__GetAudioEncoderConfigurationResponse *src) returns deep copy of _trt__GetAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationResponse(_trt__GetAudioEncoderConfigurationResponse*) deep deletes _trt__GetAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationResponse(NULL, _trt__GetAudioEncoderConfigurationResponse *dst, _trt__GetAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio encoder configuration
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
///
/// struct _trt__GetVideoAnalyticsConfiguration operations:
/// - soap_default__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration*) reset members to default
/// - int soap_read__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfiguration* soap_dup__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration* dst, _trt__GetVideoAnalyticsConfiguration *src) returns deep copy of _trt__GetVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfiguration(_trt__GetVideoAnalyticsConfiguration*) deep deletes _trt__GetVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfiguration(NULL, _trt__GetVideoAnalyticsConfiguration *dst, _trt__GetVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
///
/// struct _trt__GetVideoAnalyticsConfigurationResponse operations:
/// - soap_default__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__GetVideoAnalyticsConfigurationResponse* soap_dup__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse* dst, _trt__GetVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__GetVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoAnalyticsConfigurationResponse(_trt__GetVideoAnalyticsConfigurationResponse*) deep deletes _trt__GetVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__GetVideoAnalyticsConfigurationResponse(NULL, _trt__GetVideoAnalyticsConfigurationResponse *dst, _trt__GetVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoAnalyticsConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
///
/// struct _trt__GetMetadataConfiguration operations:
/// - soap_default__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration*) reset members to default
/// - int soap_read__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration*) serialize to a sink
/// - _trt__GetMetadataConfiguration* soap_dup__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration* dst, _trt__GetMetadataConfiguration *src) returns deep copy of _trt__GetMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfiguration(_trt__GetMetadataConfiguration*) deep deletes _trt__GetMetadataConfiguration data members, use only on dst after soap_dup__trt__GetMetadataConfiguration(NULL, _trt__GetMetadataConfiguration *dst, _trt__GetMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested metadata configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
///
/// struct _trt__GetMetadataConfigurationResponse operations:
/// - soap_default__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse*) serialize to a sink
/// - _trt__GetMetadataConfigurationResponse* soap_dup__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse* dst, _trt__GetMetadataConfigurationResponse *src) returns deep copy of _trt__GetMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationResponse(_trt__GetMetadataConfigurationResponse*) deep deletes _trt__GetMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__GetMetadataConfigurationResponse(NULL, _trt__GetMetadataConfigurationResponse *dst, _trt__GetMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested metadata configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
///
/// struct _trt__GetAudioOutputConfiguration operations:
/// - soap_default__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration*) reset members to default
/// - int soap_read__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration*) serialize to a sink
/// - _trt__GetAudioOutputConfiguration* soap_dup__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration* dst, _trt__GetAudioOutputConfiguration *src) returns deep copy of _trt__GetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfiguration(_trt__GetAudioOutputConfiguration*) deep deletes _trt__GetAudioOutputConfiguration data members, use only on dst after soap_dup__trt__GetAudioOutputConfiguration(NULL, _trt__GetAudioOutputConfiguration *dst, _trt__GetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio output configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
/// struct _trt__GetAudioOutputConfigurationResponse operations:
/// - soap_default__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationResponse* soap_dup__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse* dst, _trt__GetAudioOutputConfigurationResponse *src) returns deep copy of _trt__GetAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationResponse(_trt__GetAudioOutputConfigurationResponse*) deep deletes _trt__GetAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationResponse(NULL, _trt__GetAudioOutputConfigurationResponse *dst, _trt__GetAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio output configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
///
/// struct _trt__GetAudioDecoderConfiguration operations:
/// - soap_default__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration*) reset members to default
/// - int soap_read__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration*) serialize to a sink
/// - _trt__GetAudioDecoderConfiguration* soap_dup__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration* dst, _trt__GetAudioDecoderConfiguration *src) returns deep copy of _trt__GetAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfiguration(_trt__GetAudioDecoderConfiguration*) deep deletes _trt__GetAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__GetAudioDecoderConfiguration(NULL, _trt__GetAudioDecoderConfiguration *dst, _trt__GetAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio decoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
///
/// struct _trt__GetAudioDecoderConfigurationResponse operations:
/// - soap_default__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationResponse* soap_dup__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse* dst, _trt__GetAudioDecoderConfigurationResponse *src) returns deep copy of _trt__GetAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationResponse(_trt__GetAudioDecoderConfigurationResponse*) deep deletes _trt__GetAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationResponse(NULL, _trt__GetAudioDecoderConfigurationResponse *dst, _trt__GetAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested audio decoder configuration
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
///
/// struct _trt__GetCompatibleVideoEncoderConfigurations operations:
/// - soap_default__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations*) serialize to a sink
/// - _trt__GetCompatibleVideoEncoderConfigurations* soap_dup__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations* dst, _trt__GetCompatibleVideoEncoderConfigurations *src) returns deep copy of _trt__GetCompatibleVideoEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoEncoderConfigurations(_trt__GetCompatibleVideoEncoderConfigurations*) deep deletes _trt__GetCompatibleVideoEncoderConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleVideoEncoderConfigurations(NULL, _trt__GetCompatibleVideoEncoderConfigurations *dst, _trt__GetCompatibleVideoEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoEncoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleVideoEncoderConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* soap_dup__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse* dst, _trt__GetCompatibleVideoEncoderConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleVideoEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoEncoderConfigurationsResponse(_trt__GetCompatibleVideoEncoderConfigurationsResponse*) deep deletes _trt__GetCompatibleVideoEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleVideoEncoderConfigurationsResponse(NULL, _trt__GetCompatibleVideoEncoderConfigurationsResponse *dst, _trt__GetCompatibleVideoEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoderConfiguration* of size 0..unbounded.
    struct tt__VideoEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
///
/// struct _trt__GetCompatibleVideoSourceConfigurations operations:
/// - soap_default__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations*) serialize to a sink
/// - _trt__GetCompatibleVideoSourceConfigurations* soap_dup__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations* dst, _trt__GetCompatibleVideoSourceConfigurations *src) returns deep copy of _trt__GetCompatibleVideoSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoSourceConfigurations(_trt__GetCompatibleVideoSourceConfigurations*) deep deletes _trt__GetCompatibleVideoSourceConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleVideoSourceConfigurations(NULL, _trt__GetCompatibleVideoSourceConfigurations *dst, _trt__GetCompatibleVideoSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoSourceConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleVideoSourceConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* soap_dup__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse* dst, _trt__GetCompatibleVideoSourceConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleVideoSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoSourceConfigurationsResponse(_trt__GetCompatibleVideoSourceConfigurationsResponse*) deep deletes _trt__GetCompatibleVideoSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleVideoSourceConfigurationsResponse(NULL, _trt__GetCompatibleVideoSourceConfigurationsResponse *dst, _trt__GetCompatibleVideoSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
///
/// struct _trt__GetCompatibleAudioEncoderConfigurations operations:
/// - soap_default__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioEncoderConfigurations* soap_dup__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations* dst, _trt__GetCompatibleAudioEncoderConfigurations *src) returns deep copy of _trt__GetCompatibleAudioEncoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioEncoderConfigurations(_trt__GetCompatibleAudioEncoderConfigurations*) deep deletes _trt__GetCompatibleAudioEncoderConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioEncoderConfigurations(NULL, _trt__GetCompatibleAudioEncoderConfigurations *dst, _trt__GetCompatibleAudioEncoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioEncoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleAudioEncoderConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* soap_dup__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse* dst, _trt__GetCompatibleAudioEncoderConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioEncoderConfigurationsResponse(_trt__GetCompatibleAudioEncoderConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioEncoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioEncoderConfigurationsResponse(NULL, _trt__GetCompatibleAudioEncoderConfigurationsResponse *dst, _trt__GetCompatibleAudioEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoderConfiguration* of size 0..unbounded.
    struct tt__AudioEncoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
///
/// struct _trt__GetCompatibleAudioSourceConfigurations operations:
/// - soap_default__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioSourceConfigurations* soap_dup__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations* dst, _trt__GetCompatibleAudioSourceConfigurations *src) returns deep copy of _trt__GetCompatibleAudioSourceConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioSourceConfigurations(_trt__GetCompatibleAudioSourceConfigurations*) deep deletes _trt__GetCompatibleAudioSourceConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioSourceConfigurations(NULL, _trt__GetCompatibleAudioSourceConfigurations *dst, _trt__GetCompatibleAudioSourceConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioSourceConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleAudioSourceConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* soap_dup__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse* dst, _trt__GetCompatibleAudioSourceConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioSourceConfigurationsResponse(_trt__GetCompatibleAudioSourceConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioSourceConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioSourceConfigurationsResponse(NULL, _trt__GetCompatibleAudioSourceConfigurationsResponse *dst, _trt__GetCompatibleAudioSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
///
/// struct _trt__GetCompatibleVideoAnalyticsConfigurations operations:
/// - soap_default__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) serialize to a sink
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* soap_dup__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations* dst, _trt__GetCompatibleVideoAnalyticsConfigurations *src) returns deep copy of _trt__GetCompatibleVideoAnalyticsConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoAnalyticsConfigurations(_trt__GetCompatibleVideoAnalyticsConfigurations*) deep deletes _trt__GetCompatibleVideoAnalyticsConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleVideoAnalyticsConfigurations(NULL, _trt__GetCompatibleVideoAnalyticsConfigurations *dst, _trt__GetCompatibleVideoAnalyticsConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoAnalyticsConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* soap_dup__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* dst, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleVideoAnalyticsConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(_trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) deep deletes _trt__GetCompatibleVideoAnalyticsConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(NULL, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse *dst, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of video analytics configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
///
/// struct _trt__GetCompatibleMetadataConfigurations operations:
/// - soap_default__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations*) serialize to a sink
/// - _trt__GetCompatibleMetadataConfigurations* soap_dup__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations* dst, _trt__GetCompatibleMetadataConfigurations *src) returns deep copy of _trt__GetCompatibleMetadataConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleMetadataConfigurations(_trt__GetCompatibleMetadataConfigurations*) deep deletes _trt__GetCompatibleMetadataConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleMetadataConfigurations(NULL, _trt__GetCompatibleMetadataConfigurations *dst, _trt__GetCompatibleMetadataConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleMetadataConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleMetadataConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleMetadataConfigurationsResponse* soap_dup__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse* dst, _trt__GetCompatibleMetadataConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleMetadataConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleMetadataConfigurationsResponse(_trt__GetCompatibleMetadataConfigurationsResponse*) deep deletes _trt__GetCompatibleMetadataConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleMetadataConfigurationsResponse(NULL, _trt__GetCompatibleMetadataConfigurationsResponse *dst, _trt__GetCompatibleMetadataConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of metadata configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
///
/// struct _trt__GetCompatibleAudioOutputConfigurations operations:
/// - soap_default__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioOutputConfigurations* soap_dup__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations* dst, _trt__GetCompatibleAudioOutputConfigurations *src) returns deep copy of _trt__GetCompatibleAudioOutputConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioOutputConfigurations(_trt__GetCompatibleAudioOutputConfigurations*) deep deletes _trt__GetCompatibleAudioOutputConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioOutputConfigurations(NULL, _trt__GetCompatibleAudioOutputConfigurations *dst, _trt__GetCompatibleAudioOutputConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioOutputConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleAudioOutputConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* soap_dup__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse* dst, _trt__GetCompatibleAudioOutputConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioOutputConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioOutputConfigurationsResponse(_trt__GetCompatibleAudioOutputConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioOutputConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioOutputConfigurationsResponse(NULL, _trt__GetCompatibleAudioOutputConfigurationsResponse *dst, _trt__GetCompatibleAudioOutputConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio output configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
///
/// struct _trt__GetCompatibleAudioDecoderConfigurations operations:
/// - soap_default__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations*) serialize to a sink
/// - _trt__GetCompatibleAudioDecoderConfigurations* soap_dup__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations* dst, _trt__GetCompatibleAudioDecoderConfigurations *src) returns deep copy of _trt__GetCompatibleAudioDecoderConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioDecoderConfigurations(_trt__GetCompatibleAudioDecoderConfigurations*) deep deletes _trt__GetCompatibleAudioDecoderConfigurations data members, use only on dst after soap_dup__trt__GetCompatibleAudioDecoderConfigurations(NULL, _trt__GetCompatibleAudioDecoderConfigurations *dst, _trt__GetCompatibleAudioDecoderConfigurations *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioDecoderConfigurations
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
///
/// struct _trt__GetCompatibleAudioDecoderConfigurationsResponse operations:
/// - soap_default__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) reset members to default
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) serialize to a sink
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* soap_dup__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse* dst, _trt__GetCompatibleAudioDecoderConfigurationsResponse *src) returns deep copy of _trt__GetCompatibleAudioDecoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetCompatibleAudioDecoderConfigurationsResponse(_trt__GetCompatibleAudioDecoderConfigurationsResponse*) deep deletes _trt__GetCompatibleAudioDecoderConfigurationsResponse data members, use only on dst after soap_dup__trt__GetCompatibleAudioDecoderConfigurationsResponse(NULL, _trt__GetCompatibleAudioDecoderConfigurationsResponse *dst, _trt__GetCompatibleAudioDecoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetCompatibleAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
/// struct _trt__SetVideoEncoderConfiguration operations:
/// - soap_default__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration*) reset members to default
/// - int soap_read__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration*) serialize to a sink
/// - _trt__SetVideoEncoderConfiguration* soap_dup__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration* dst, _trt__SetVideoEncoderConfiguration *src) returns deep copy of _trt__SetVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoEncoderConfiguration(_trt__SetVideoEncoderConfiguration*) deep deletes _trt__SetVideoEncoderConfiguration data members, use only on dst after soap_dup__trt__SetVideoEncoderConfiguration(NULL, _trt__SetVideoEncoderConfiguration *dst, _trt__SetVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
///
/// struct _trt__SetVideoEncoderConfigurationResponse operations:
/// - soap_default__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse*) serialize to a sink
/// - _trt__SetVideoEncoderConfigurationResponse* soap_dup__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse* dst, _trt__SetVideoEncoderConfigurationResponse *src) returns deep copy of _trt__SetVideoEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoEncoderConfigurationResponse(_trt__SetVideoEncoderConfigurationResponse*) deep deletes _trt__SetVideoEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__SetVideoEncoderConfigurationResponse(NULL, _trt__SetVideoEncoderConfigurationResponse *dst, _trt__SetVideoEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
/// struct _trt__SetVideoSourceConfiguration operations:
/// - soap_default__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration*) reset members to default
/// - int soap_read__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration*) serialize to a sink
/// - _trt__SetVideoSourceConfiguration* soap_dup__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration* dst, _trt__SetVideoSourceConfiguration *src) returns deep copy of _trt__SetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceConfiguration(_trt__SetVideoSourceConfiguration*) deep deletes _trt__SetVideoSourceConfiguration data members, use only on dst after soap_dup__trt__SetVideoSourceConfiguration(NULL, _trt__SetVideoSourceConfiguration *dst, _trt__SetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
/// struct _trt__SetVideoSourceConfigurationResponse operations:
/// - soap_default__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse*) serialize to a sink
/// - _trt__SetVideoSourceConfigurationResponse* soap_dup__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse* dst, _trt__SetVideoSourceConfigurationResponse *src) returns deep copy of _trt__SetVideoSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceConfigurationResponse(_trt__SetVideoSourceConfigurationResponse*) deep deletes _trt__SetVideoSourceConfigurationResponse data members, use only on dst after soap_dup__trt__SetVideoSourceConfigurationResponse(NULL, _trt__SetVideoSourceConfigurationResponse *dst, _trt__SetVideoSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
/// struct _trt__SetAudioEncoderConfiguration operations:
/// - soap_default__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration*) reset members to default
/// - int soap_read__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration*) serialize to a sink
/// - _trt__SetAudioEncoderConfiguration* soap_dup__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration* dst, _trt__SetAudioEncoderConfiguration *src) returns deep copy of _trt__SetAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioEncoderConfiguration(_trt__SetAudioEncoderConfiguration*) deep deletes _trt__SetAudioEncoderConfiguration data members, use only on dst after soap_dup__trt__SetAudioEncoderConfiguration(NULL, _trt__SetAudioEncoderConfiguration *dst, _trt__SetAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
///
/// struct _trt__SetAudioEncoderConfigurationResponse operations:
/// - soap_default__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioEncoderConfigurationResponse* soap_dup__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse* dst, _trt__SetAudioEncoderConfigurationResponse *src) returns deep copy of _trt__SetAudioEncoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioEncoderConfigurationResponse(_trt__SetAudioEncoderConfigurationResponse*) deep deletes _trt__SetAudioEncoderConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioEncoderConfigurationResponse(NULL, _trt__SetAudioEncoderConfigurationResponse *dst, _trt__SetAudioEncoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioEncoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
/// struct _trt__SetAudioSourceConfiguration operations:
/// - soap_default__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration*) reset members to default
/// - int soap_read__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration*) serialize to a sink
/// - _trt__SetAudioSourceConfiguration* soap_dup__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration* dst, _trt__SetAudioSourceConfiguration *src) returns deep copy of _trt__SetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioSourceConfiguration(_trt__SetAudioSourceConfiguration*) deep deletes _trt__SetAudioSourceConfiguration data members, use only on dst after soap_dup__trt__SetAudioSourceConfiguration(NULL, _trt__SetAudioSourceConfiguration *dst, _trt__SetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
/// struct _trt__SetAudioSourceConfigurationResponse operations:
/// - soap_default__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioSourceConfigurationResponse* soap_dup__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse* dst, _trt__SetAudioSourceConfigurationResponse *src) returns deep copy of _trt__SetAudioSourceConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioSourceConfigurationResponse(_trt__SetAudioSourceConfigurationResponse*) deep deletes _trt__SetAudioSourceConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioSourceConfigurationResponse(NULL, _trt__SetAudioSourceConfigurationResponse *dst, _trt__SetAudioSourceConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioSourceConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
///
/// struct _trt__SetVideoAnalyticsConfiguration operations:
/// - soap_default__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration*) reset members to default
/// - int soap_read__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration*) serialize to a sink
/// - _trt__SetVideoAnalyticsConfiguration* soap_dup__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration* dst, _trt__SetVideoAnalyticsConfiguration *src) returns deep copy of _trt__SetVideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoAnalyticsConfiguration(_trt__SetVideoAnalyticsConfiguration*) deep deletes _trt__SetVideoAnalyticsConfiguration data members, use only on dst after soap_dup__trt__SetVideoAnalyticsConfiguration(NULL, _trt__SetVideoAnalyticsConfiguration *dst, _trt__SetVideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetVideoAnalyticsConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video analytics configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
///
/// struct _trt__SetVideoAnalyticsConfigurationResponse operations:
/// - soap_default__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse*) serialize to a sink
/// - _trt__SetVideoAnalyticsConfigurationResponse* soap_dup__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse* dst, _trt__SetVideoAnalyticsConfigurationResponse *src) returns deep copy of _trt__SetVideoAnalyticsConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoAnalyticsConfigurationResponse(_trt__SetVideoAnalyticsConfigurationResponse*) deep deletes _trt__SetVideoAnalyticsConfigurationResponse data members, use only on dst after soap_dup__trt__SetVideoAnalyticsConfigurationResponse(NULL, _trt__SetVideoAnalyticsConfigurationResponse *dst, _trt__SetVideoAnalyticsConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoAnalyticsConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
///
/// struct _trt__SetMetadataConfiguration operations:
/// - soap_default__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration*) reset members to default
/// - int soap_read__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration*) deserialize from a source
/// - int soap_write__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration*) serialize to a sink
/// - _trt__SetMetadataConfiguration* soap_dup__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration* dst, _trt__SetMetadataConfiguration *src) returns deep copy of _trt__SetMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetMetadataConfiguration(_trt__SetMetadataConfiguration*) deep deletes _trt__SetMetadataConfiguration data members, use only on dst after soap_dup__trt__SetMetadataConfiguration(NULL, _trt__SetMetadataConfiguration *dst, _trt__SetMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
///
/// struct _trt__SetMetadataConfigurationResponse operations:
/// - soap_default__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse*) serialize to a sink
/// - _trt__SetMetadataConfigurationResponse* soap_dup__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse* dst, _trt__SetMetadataConfigurationResponse *src) returns deep copy of _trt__SetMetadataConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetMetadataConfigurationResponse(_trt__SetMetadataConfigurationResponse*) deep deletes _trt__SetMetadataConfigurationResponse data members, use only on dst after soap_dup__trt__SetMetadataConfigurationResponse(NULL, _trt__SetMetadataConfigurationResponse *dst, _trt__SetMetadataConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetMetadataConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
/// struct _trt__SetAudioOutputConfiguration operations:
/// - soap_default__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration*) reset members to default
/// - int soap_read__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration*) serialize to a sink
/// - _trt__SetAudioOutputConfiguration* soap_dup__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration* dst, _trt__SetAudioOutputConfiguration *src) returns deep copy of _trt__SetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioOutputConfiguration(_trt__SetAudioOutputConfiguration*) deep deletes _trt__SetAudioOutputConfiguration data members, use only on dst after soap_dup__trt__SetAudioOutputConfiguration(NULL, _trt__SetAudioOutputConfiguration *dst, _trt__SetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
/// struct _trt__SetAudioOutputConfigurationResponse operations:
/// - soap_default__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioOutputConfigurationResponse* soap_dup__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse* dst, _trt__SetAudioOutputConfigurationResponse *src) returns deep copy of _trt__SetAudioOutputConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioOutputConfigurationResponse(_trt__SetAudioOutputConfigurationResponse*) deep deletes _trt__SetAudioOutputConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioOutputConfigurationResponse(NULL, _trt__SetAudioOutputConfigurationResponse *dst, _trt__SetAudioOutputConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioOutputConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
/// struct _trt__SetAudioDecoderConfiguration operations:
/// - soap_default__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration*) reset members to default
/// - int soap_read__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration*) serialize to a sink
/// - _trt__SetAudioDecoderConfiguration* soap_dup__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration* dst, _trt__SetAudioDecoderConfiguration *src) returns deep copy of _trt__SetAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioDecoderConfiguration(_trt__SetAudioDecoderConfiguration*) deep deletes _trt__SetAudioDecoderConfiguration data members, use only on dst after soap_dup__trt__SetAudioDecoderConfiguration(NULL, _trt__SetAudioDecoderConfiguration *dst, _trt__SetAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _trt__SetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    enum xsd__boolean                    ForcePersistence               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
///
/// struct _trt__SetAudioDecoderConfigurationResponse operations:
/// - soap_default__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse*) reset members to default
/// - int soap_read__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse*) deserialize from a source
/// - int soap_write__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse*) serialize to a sink
/// - _trt__SetAudioDecoderConfigurationResponse* soap_dup__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse* dst, _trt__SetAudioDecoderConfigurationResponse *src) returns deep copy of _trt__SetAudioDecoderConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetAudioDecoderConfigurationResponse(_trt__SetAudioDecoderConfigurationResponse*) deep deletes _trt__SetAudioDecoderConfigurationResponse data members, use only on dst after soap_dup__trt__SetAudioDecoderConfigurationResponse(NULL, _trt__SetAudioDecoderConfigurationResponse *dst, _trt__SetAudioDecoderConfigurationResponse *src) (use soapcpp2 -Ed)
struct _trt__SetAudioDecoderConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
/// struct _trt__GetVideoSourceConfigurationOptions operations:
/// - soap_default__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions*) reset members to default
/// - int soap_read__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationOptions* soap_dup__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions* dst, _trt__GetVideoSourceConfigurationOptions *src) returns deep copy of _trt__GetVideoSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationOptions(_trt__GetVideoSourceConfigurationOptions*) deep deletes _trt__GetVideoSourceConfigurationOptions data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationOptions(NULL, _trt__GetVideoSourceConfigurationOptions *dst, _trt__GetVideoSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
/// struct _trt__GetVideoSourceConfigurationOptionsResponse operations:
/// - soap_default__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) reset members to default
/// - int soap_read__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetVideoSourceConfigurationOptionsResponse* soap_dup__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse* dst, _trt__GetVideoSourceConfigurationOptionsResponse *src) returns deep copy of _trt__GetVideoSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceConfigurationOptionsResponse(_trt__GetVideoSourceConfigurationOptionsResponse*) deep deletes _trt__GetVideoSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetVideoSourceConfigurationOptionsResponse(NULL, _trt__GetVideoSourceConfigurationOptionsResponse *dst, _trt__GetVideoSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    struct tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
///
/// struct _trt__GetVideoEncoderConfigurationOptions operations:
/// - soap_default__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions*) reset members to default
/// - int soap_read__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationOptions* soap_dup__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions* dst, _trt__GetVideoEncoderConfigurationOptions *src) returns deep copy of _trt__GetVideoEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationOptions(_trt__GetVideoEncoderConfigurationOptions*) deep deletes _trt__GetVideoEncoderConfigurationOptions data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationOptions(NULL, _trt__GetVideoEncoderConfigurationOptions *dst, _trt__GetVideoEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
/// struct _trt__GetVideoEncoderConfigurationOptionsResponse operations:
/// - soap_default__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) reset members to default
/// - int soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* soap_dup__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse* dst, _trt__GetVideoEncoderConfigurationOptionsResponse *src) returns deep copy of _trt__GetVideoEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoEncoderConfigurationOptionsResponse(_trt__GetVideoEncoderConfigurationOptionsResponse*) deep deletes _trt__GetVideoEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetVideoEncoderConfigurationOptionsResponse(NULL, _trt__GetVideoEncoderConfigurationOptionsResponse *dst, _trt__GetVideoEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoEncoderConfigurationOptionsResponse
{
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    struct tt__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
/// struct _trt__GetAudioSourceConfigurationOptions operations:
/// - soap_default__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions*) reset members to default
/// - int soap_read__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationOptions* soap_dup__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions* dst, _trt__GetAudioSourceConfigurationOptions *src) returns deep copy of _trt__GetAudioSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationOptions(_trt__GetAudioSourceConfigurationOptions*) deep deletes _trt__GetAudioSourceConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationOptions(NULL, _trt__GetAudioSourceConfigurationOptions *dst, _trt__GetAudioSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
/// struct _trt__GetAudioSourceConfigurationOptionsResponse operations:
/// - soap_default__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) reset members to default
/// - int soap_read__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioSourceConfigurationOptionsResponse* soap_dup__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse* dst, _trt__GetAudioSourceConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioSourceConfigurationOptionsResponse(_trt__GetAudioSourceConfigurationOptionsResponse*) deep deletes _trt__GetAudioSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioSourceConfigurationOptionsResponse(NULL, _trt__GetAudioSourceConfigurationOptionsResponse *dst, _trt__GetAudioSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    struct tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
///
/// struct _trt__GetAudioEncoderConfigurationOptions operations:
/// - soap_default__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions*) reset members to default
/// - int soap_read__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationOptions* soap_dup__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions* dst, _trt__GetAudioEncoderConfigurationOptions *src) returns deep copy of _trt__GetAudioEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationOptions(_trt__GetAudioEncoderConfigurationOptions*) deep deletes _trt__GetAudioEncoderConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationOptions(NULL, _trt__GetAudioEncoderConfigurationOptions *dst, _trt__GetAudioEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
/// struct _trt__GetAudioEncoderConfigurationOptionsResponse operations:
/// - soap_default__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) reset members to default
/// - int soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* soap_dup__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse* dst, _trt__GetAudioEncoderConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioEncoderConfigurationOptionsResponse(_trt__GetAudioEncoderConfigurationOptionsResponse*) deep deletes _trt__GetAudioEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioEncoderConfigurationOptionsResponse(NULL, _trt__GetAudioEncoderConfigurationOptionsResponse *dst, _trt__GetAudioEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioEncoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    struct tt__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
///
/// struct _trt__GetMetadataConfigurationOptions operations:
/// - soap_default__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions*) reset members to default
/// - int soap_read__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions*) serialize to a sink
/// - _trt__GetMetadataConfigurationOptions* soap_dup__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions* dst, _trt__GetMetadataConfigurationOptions *src) returns deep copy of _trt__GetMetadataConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationOptions(_trt__GetMetadataConfigurationOptions*) deep deletes _trt__GetMetadataConfigurationOptions data members, use only on dst after soap_dup__trt__GetMetadataConfigurationOptions(NULL, _trt__GetMetadataConfigurationOptions *dst, _trt__GetMetadataConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
/// struct _trt__GetMetadataConfigurationOptionsResponse operations:
/// - soap_default__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) reset members to default
/// - int soap_read__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_dup__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse* dst, _trt__GetMetadataConfigurationOptionsResponse *src) returns deep copy of _trt__GetMetadataConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetMetadataConfigurationOptionsResponse(_trt__GetMetadataConfigurationOptionsResponse*) deep deletes _trt__GetMetadataConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetMetadataConfigurationOptionsResponse(NULL, _trt__GetMetadataConfigurationOptionsResponse *dst, _trt__GetMetadataConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetMetadataConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    struct tt__MetadataConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
/// struct _trt__GetAudioOutputConfigurationOptions operations:
/// - soap_default__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) reset members to default
/// - int soap_read__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationOptions* soap_dup__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions* dst, _trt__GetAudioOutputConfigurationOptions *src) returns deep copy of _trt__GetAudioOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationOptions(_trt__GetAudioOutputConfigurationOptions*) deep deletes _trt__GetAudioOutputConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationOptions(NULL, _trt__GetAudioOutputConfigurationOptions *dst, _trt__GetAudioOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// struct _trt__GetAudioOutputConfigurationOptionsResponse operations:
/// - soap_default__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) reset members to default
/// - int soap_read__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_dup__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse* dst, _trt__GetAudioOutputConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioOutputConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioOutputConfigurationOptionsResponse(_trt__GetAudioOutputConfigurationOptionsResponse*) deep deletes _trt__GetAudioOutputConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioOutputConfigurationOptionsResponse(NULL, _trt__GetAudioOutputConfigurationOptionsResponse *dst, _trt__GetAudioOutputConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioOutputConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    struct tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
///
/// struct _trt__GetAudioDecoderConfigurationOptions operations:
/// - soap_default__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) reset members to default
/// - int soap_read__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationOptions* soap_dup__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions* dst, _trt__GetAudioDecoderConfigurationOptions *src) returns deep copy of _trt__GetAudioDecoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationOptions(_trt__GetAudioDecoderConfigurationOptions*) deep deletes _trt__GetAudioDecoderConfigurationOptions data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationOptions(NULL, _trt__GetAudioDecoderConfigurationOptions *dst, _trt__GetAudioDecoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
/// struct _trt__GetAudioDecoderConfigurationOptionsResponse operations:
/// - soap_default__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) reset members to default
/// - int soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) serialize to a sink
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_dup__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse* dst, _trt__GetAudioDecoderConfigurationOptionsResponse *src) returns deep copy of _trt__GetAudioDecoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetAudioDecoderConfigurationOptionsResponse(_trt__GetAudioDecoderConfigurationOptionsResponse*) deep deletes _trt__GetAudioDecoderConfigurationOptionsResponse data members, use only on dst after soap_dup__trt__GetAudioDecoderConfigurationOptionsResponse(NULL, _trt__GetAudioDecoderConfigurationOptionsResponse *dst, _trt__GetAudioDecoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetAudioDecoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    struct tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
///
/// struct _trt__GetGuaranteedNumberOfVideoEncoderInstances operations:
/// - soap_default__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) reset members to default
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) deserialize from a source
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) serialize to a sink
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances* dst, _trt__GetGuaranteedNumberOfVideoEncoderInstances *src) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstances src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetGuaranteedNumberOfVideoEncoderInstances(_trt__GetGuaranteedNumberOfVideoEncoderInstances*) deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstances data members, use only on dst after soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstances(NULL, _trt__GetGuaranteedNumberOfVideoEncoderInstances *dst, _trt__GetGuaranteedNumberOfVideoEncoderInstances *src) (use soapcpp2 -Ed)
struct _trt__GetGuaranteedNumberOfVideoEncoderInstances
{
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
///
/// struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse operations:
/// - soap_default__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) reset members to default
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deserialize from a source
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) serialize to a sink
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* dst, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse *src) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(_trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse data members, use only on dst after soap_dup__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(NULL, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse *dst, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// </BLOCKQUOTE></PRE>
/// Element "TotalNumber" of XSD type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
///
/// struct _trt__GetStreamUri operations:
/// - soap_default__trt__GetStreamUri(soap*, _trt__GetStreamUri*) reset members to default
/// - int soap_read__trt__GetStreamUri(soap*, _trt__GetStreamUri*) deserialize from a source
/// - int soap_write__trt__GetStreamUri(soap*, _trt__GetStreamUri*) serialize to a sink
/// - _trt__GetStreamUri* soap_dup__trt__GetStreamUri(soap*, _trt__GetStreamUri* dst, _trt__GetStreamUri *src) returns deep copy of _trt__GetStreamUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetStreamUri(_trt__GetStreamUri*) deep deletes _trt__GetStreamUri data members, use only on dst after soap_dup__trt__GetStreamUri(NULL, _trt__GetStreamUri *dst, _trt__GetStreamUri *src) (use soapcpp2 -Ed)
struct _trt__GetStreamUri
{
/// <PRE><BLOCKQUOTE>
///   Stream Setup that should be used with the uri
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
///
/// struct _trt__GetStreamUriResponse operations:
/// - soap_default__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) reset members to default
/// - int soap_read__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) deserialize from a source
/// - int soap_write__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) serialize to a sink
/// - _trt__GetStreamUriResponse* soap_dup__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse* dst, _trt__GetStreamUriResponse *src) returns deep copy of _trt__GetStreamUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetStreamUriResponse(_trt__GetStreamUriResponse*) deep deletes _trt__GetStreamUriResponse data members, use only on dst after soap_dup__trt__GetStreamUriResponse(NULL, _trt__GetStreamUriResponse *dst, _trt__GetStreamUriResponse *src) (use soapcpp2 -Ed)
struct _trt__GetStreamUriResponse
{

/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type "http://www.onvif.org/ver10/schema":MediaUri.
    struct tt__MediaUri*                 MediaUri                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
///
/// struct _trt__StartMulticastStreaming operations:
/// - soap_default__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) reset members to default
/// - int soap_read__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) deserialize from a source
/// - int soap_write__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) serialize to a sink
/// - _trt__StartMulticastStreaming* soap_dup__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming* dst, _trt__StartMulticastStreaming *src) returns deep copy of _trt__StartMulticastStreaming src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StartMulticastStreaming(_trt__StartMulticastStreaming*) deep deletes _trt__StartMulticastStreaming data members, use only on dst after soap_dup__trt__StartMulticastStreaming(NULL, _trt__StartMulticastStreaming *dst, _trt__StartMulticastStreaming *src) (use soapcpp2 -Ed)
struct _trt__StartMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
///
/// struct _trt__StartMulticastStreamingResponse operations:
/// - soap_default__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) reset members to default
/// - int soap_read__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) deserialize from a source
/// - int soap_write__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) serialize to a sink
/// - _trt__StartMulticastStreamingResponse* soap_dup__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse* dst, _trt__StartMulticastStreamingResponse *src) returns deep copy of _trt__StartMulticastStreamingResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StartMulticastStreamingResponse(_trt__StartMulticastStreamingResponse*) deep deletes _trt__StartMulticastStreamingResponse data members, use only on dst after soap_dup__trt__StartMulticastStreamingResponse(NULL, _trt__StartMulticastStreamingResponse *dst, _trt__StartMulticastStreamingResponse *src) (use soapcpp2 -Ed)
struct _trt__StartMulticastStreamingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
///
/// struct _trt__StopMulticastStreaming operations:
/// - soap_default__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) reset members to default
/// - int soap_read__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) deserialize from a source
/// - int soap_write__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) serialize to a sink
/// - _trt__StopMulticastStreaming* soap_dup__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming* dst, _trt__StopMulticastStreaming *src) returns deep copy of _trt__StopMulticastStreaming src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StopMulticastStreaming(_trt__StopMulticastStreaming*) deep deletes _trt__StopMulticastStreaming data members, use only on dst after soap_dup__trt__StopMulticastStreaming(NULL, _trt__StopMulticastStreaming *dst, _trt__StopMulticastStreaming *src) (use soapcpp2 -Ed)
struct _trt__StopMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
///
/// struct _trt__StopMulticastStreamingResponse operations:
/// - soap_default__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) reset members to default
/// - int soap_read__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) deserialize from a source
/// - int soap_write__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) serialize to a sink
/// - _trt__StopMulticastStreamingResponse* soap_dup__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse* dst, _trt__StopMulticastStreamingResponse *src) returns deep copy of _trt__StopMulticastStreamingResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__StopMulticastStreamingResponse(_trt__StopMulticastStreamingResponse*) deep deletes _trt__StopMulticastStreamingResponse data members, use only on dst after soap_dup__trt__StopMulticastStreamingResponse(NULL, _trt__StopMulticastStreamingResponse *dst, _trt__StopMulticastStreamingResponse *src) (use soapcpp2 -Ed)
struct _trt__StopMulticastStreamingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
///
/// struct _trt__SetSynchronizationPoint operations:
/// - soap_default__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) reset members to default
/// - int soap_read__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) deserialize from a source
/// - int soap_write__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) serialize to a sink
/// - _trt__SetSynchronizationPoint* soap_dup__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint* dst, _trt__SetSynchronizationPoint *src) returns deep copy of _trt__SetSynchronizationPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetSynchronizationPoint(_trt__SetSynchronizationPoint*) deep deletes _trt__SetSynchronizationPoint data members, use only on dst after soap_dup__trt__SetSynchronizationPoint(NULL, _trt__SetSynchronizationPoint *dst, _trt__SetSynchronizationPoint *src) (use soapcpp2 -Ed)
struct _trt__SetSynchronizationPoint
{
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// struct _trt__SetSynchronizationPointResponse operations:
/// - soap_default__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) reset members to default
/// - int soap_read__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) deserialize from a source
/// - int soap_write__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) serialize to a sink
/// - _trt__SetSynchronizationPointResponse* soap_dup__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse* dst, _trt__SetSynchronizationPointResponse *src) returns deep copy of _trt__SetSynchronizationPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetSynchronizationPointResponse(_trt__SetSynchronizationPointResponse*) deep deletes _trt__SetSynchronizationPointResponse data members, use only on dst after soap_dup__trt__SetSynchronizationPointResponse(NULL, _trt__SetSynchronizationPointResponse *dst, _trt__SetSynchronizationPointResponse *src) (use soapcpp2 -Ed)
struct _trt__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
/// struct _trt__GetSnapshotUri operations:
/// - soap_default__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) reset members to default
/// - int soap_read__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) deserialize from a source
/// - int soap_write__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) serialize to a sink
/// - _trt__GetSnapshotUri* soap_dup__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri* dst, _trt__GetSnapshotUri *src) returns deep copy of _trt__GetSnapshotUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetSnapshotUri(_trt__GetSnapshotUri*) deep deletes _trt__GetSnapshotUri data members, use only on dst after soap_dup__trt__GetSnapshotUri(NULL, _trt__GetSnapshotUri *dst, _trt__GetSnapshotUri *src) (use soapcpp2 -Ed)
struct _trt__GetSnapshotUri
{
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// struct _trt__GetSnapshotUriResponse operations:
/// - soap_default__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) reset members to default
/// - int soap_read__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) deserialize from a source
/// - int soap_write__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) serialize to a sink
/// - _trt__GetSnapshotUriResponse* soap_dup__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse* dst, _trt__GetSnapshotUriResponse *src) returns deep copy of _trt__GetSnapshotUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetSnapshotUriResponse(_trt__GetSnapshotUriResponse*) deep deletes _trt__GetSnapshotUriResponse data members, use only on dst after soap_dup__trt__GetSnapshotUriResponse(NULL, _trt__GetSnapshotUriResponse *dst, _trt__GetSnapshotUriResponse *src) (use soapcpp2 -Ed)
struct _trt__GetSnapshotUriResponse
{

/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type "http://www.onvif.org/ver10/schema":MediaUri.
    struct tt__MediaUri*                 MediaUri                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes is a complexType.
///
/// struct _trt__GetVideoSourceModes operations:
/// - soap_default__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) reset members to default
/// - int soap_read__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) serialize to a sink
/// - _trt__GetVideoSourceModes* soap_dup__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes* dst, _trt__GetVideoSourceModes *src) returns deep copy of _trt__GetVideoSourceModes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceModes(_trt__GetVideoSourceModes*) deep deletes _trt__GetVideoSourceModes data members, use only on dst after soap_dup__trt__GetVideoSourceModes(NULL, _trt__GetVideoSourceModes *dst, _trt__GetVideoSourceModes *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceModes
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
/// struct _trt__GetVideoSourceModesResponse operations:
/// - soap_default__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) reset members to default
/// - int soap_read__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) deserialize from a source
/// - int soap_write__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) serialize to a sink
/// - _trt__GetVideoSourceModesResponse* soap_dup__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse* dst, _trt__GetVideoSourceModesResponse *src) returns deep copy of _trt__GetVideoSourceModesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetVideoSourceModesResponse(_trt__GetVideoSourceModesResponse*) deep deletes _trt__GetVideoSourceModesResponse data members, use only on dst after soap_dup__trt__GetVideoSourceModesResponse(NULL, _trt__GetVideoSourceModesResponse *dst, _trt__GetVideoSourceModesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetVideoSourceModesResponse
{
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct trt__VideoSourceMode* is 1..unbounded.
   $int                                  __sizeVideoSourceModes         1;
/// Array struct trt__VideoSourceMode* of size 1..unbounded.
    struct trt__VideoSourceMode*         VideoSourceModes               1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode is a complexType.
///
/// struct _trt__SetVideoSourceMode operations:
/// - soap_default__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) reset members to default
/// - int soap_read__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) serialize to a sink
/// - _trt__SetVideoSourceMode* soap_dup__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode* dst, _trt__SetVideoSourceMode *src) returns deep copy of _trt__SetVideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceMode(_trt__SetVideoSourceMode*) deep deletes _trt__SetVideoSourceMode data members, use only on dst after soap_dup__trt__SetVideoSourceMode(NULL, _trt__SetVideoSourceMode *dst, _trt__SetVideoSourceMode *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceModeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
/// struct _trt__SetVideoSourceModeResponse operations:
/// - soap_default__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) reset members to default
/// - int soap_read__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) deserialize from a source
/// - int soap_write__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) serialize to a sink
/// - _trt__SetVideoSourceModeResponse* soap_dup__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse* dst, _trt__SetVideoSourceModeResponse *src) returns deep copy of _trt__SetVideoSourceModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetVideoSourceModeResponse(_trt__SetVideoSourceModeResponse*) deep deletes _trt__SetVideoSourceModeResponse data members, use only on dst after soap_dup__trt__SetVideoSourceModeResponse(NULL, _trt__SetVideoSourceModeResponse *dst, _trt__SetVideoSourceModeResponse *src) (use soapcpp2 -Ed)
struct _trt__SetVideoSourceModeResponse
{
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
/// Element "Reboot" of XSD type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDs is a complexType.
///
/// struct _trt__GetOSDs operations:
/// - soap_default__trt__GetOSDs(soap*, _trt__GetOSDs*) reset members to default
/// - int soap_read__trt__GetOSDs(soap*, _trt__GetOSDs*) deserialize from a source
/// - int soap_write__trt__GetOSDs(soap*, _trt__GetOSDs*) serialize to a sink
/// - _trt__GetOSDs* soap_dup__trt__GetOSDs(soap*, _trt__GetOSDs* dst, _trt__GetOSDs *src) returns deep copy of _trt__GetOSDs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDs(_trt__GetOSDs*) deep deletes _trt__GetOSDs data members, use only on dst after soap_dup__trt__GetOSDs(NULL, _trt__GetOSDs *dst, _trt__GetOSDs *src) (use soapcpp2 -Ed)
struct _trt__GetOSDs
{
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse is a complexType.
///
/// struct _trt__GetOSDsResponse operations:
/// - soap_default__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) reset members to default
/// - int soap_read__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) deserialize from a source
/// - int soap_write__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) serialize to a sink
/// - _trt__GetOSDsResponse* soap_dup__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse* dst, _trt__GetOSDsResponse *src) returns deep copy of _trt__GetOSDsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDsResponse(_trt__GetOSDsResponse*) deep deletes _trt__GetOSDsResponse data members, use only on dst after soap_dup__trt__GetOSDsResponse(NULL, _trt__GetOSDsResponse *dst, _trt__GetOSDsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetOSDsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of requested OSDs.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__OSDConfiguration* is 0..unbounded.
   $int                                  __sizeOSDs                     0;
/// Array struct tt__OSDConfiguration* of size 0..unbounded.
    struct tt__OSDConfiguration*         OSDs                           0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSD is a complexType.
///
/// struct _trt__GetOSD operations:
/// - soap_default__trt__GetOSD(soap*, _trt__GetOSD*) reset members to default
/// - int soap_read__trt__GetOSD(soap*, _trt__GetOSD*) deserialize from a source
/// - int soap_write__trt__GetOSD(soap*, _trt__GetOSD*) serialize to a sink
/// - _trt__GetOSD* soap_dup__trt__GetOSD(soap*, _trt__GetOSD* dst, _trt__GetOSD *src) returns deep copy of _trt__GetOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSD(_trt__GetOSD*) deep deletes _trt__GetOSD data members, use only on dst after soap_dup__trt__GetOSD(NULL, _trt__GetOSD *dst, _trt__GetOSD *src) (use soapcpp2 -Ed)
struct _trt__GetOSD
{
/// <PRE><BLOCKQUOTE>
///   The GetOSD command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse is a complexType.
///
/// struct _trt__GetOSDResponse operations:
/// - soap_default__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) reset members to default
/// - int soap_read__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) deserialize from a source
/// - int soap_write__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) serialize to a sink
/// - _trt__GetOSDResponse* soap_dup__trt__GetOSDResponse(soap*, _trt__GetOSDResponse* dst, _trt__GetOSDResponse *src) returns deep copy of _trt__GetOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDResponse(_trt__GetOSDResponse*) deep deletes _trt__GetOSDResponse data members, use only on dst after soap_dup__trt__GetOSDResponse(NULL, _trt__GetOSDResponse *dst, _trt__GetOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__GetOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested OSD configuration.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSD is a complexType.
///
/// struct _trt__SetOSD operations:
/// - soap_default__trt__SetOSD(soap*, _trt__SetOSD*) reset members to default
/// - int soap_read__trt__SetOSD(soap*, _trt__SetOSD*) deserialize from a source
/// - int soap_write__trt__SetOSD(soap*, _trt__SetOSD*) serialize to a sink
/// - _trt__SetOSD* soap_dup__trt__SetOSD(soap*, _trt__SetOSD* dst, _trt__SetOSD *src) returns deep copy of _trt__SetOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetOSD(_trt__SetOSD*) deep deletes _trt__SetOSD data members, use only on dst after soap_dup__trt__SetOSD(NULL, _trt__SetOSD *dst, _trt__SetOSD *src) (use soapcpp2 -Ed)
struct _trt__SetOSD
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse is a complexType.
///
/// struct _trt__SetOSDResponse operations:
/// - soap_default__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) reset members to default
/// - int soap_read__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) deserialize from a source
/// - int soap_write__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) serialize to a sink
/// - _trt__SetOSDResponse* soap_dup__trt__SetOSDResponse(soap*, _trt__SetOSDResponse* dst, _trt__SetOSDResponse *src) returns deep copy of _trt__SetOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__SetOSDResponse(_trt__SetOSDResponse*) deep deletes _trt__SetOSDResponse data members, use only on dst after soap_dup__trt__SetOSDResponse(NULL, _trt__SetOSDResponse *dst, _trt__SetOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__SetOSDResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions is a complexType.
///
/// struct _trt__GetOSDOptions operations:
/// - soap_default__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) reset members to default
/// - int soap_read__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) deserialize from a source
/// - int soap_write__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) serialize to a sink
/// - _trt__GetOSDOptions* soap_dup__trt__GetOSDOptions(soap*, _trt__GetOSDOptions* dst, _trt__GetOSDOptions *src) returns deep copy of _trt__GetOSDOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDOptions(_trt__GetOSDOptions*) deep deletes _trt__GetOSDOptions data members, use only on dst after soap_dup__trt__GetOSDOptions(NULL, _trt__GetOSDOptions *dst, _trt__GetOSDOptions *src) (use soapcpp2 -Ed)
struct _trt__GetOSDOptions
{
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse is a complexType.
///
/// struct _trt__GetOSDOptionsResponse operations:
/// - soap_default__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) reset members to default
/// - int soap_read__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) deserialize from a source
/// - int soap_write__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) serialize to a sink
/// - _trt__GetOSDOptionsResponse* soap_dup__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse* dst, _trt__GetOSDOptionsResponse *src) returns deep copy of _trt__GetOSDOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetOSDOptionsResponse(_trt__GetOSDOptionsResponse*) deep deletes _trt__GetOSDOptionsResponse data members, use only on dst after soap_dup__trt__GetOSDOptionsResponse(NULL, _trt__GetOSDOptionsResponse *dst, _trt__GetOSDOptionsResponse *src) (use soapcpp2 -Ed)
struct _trt__GetOSDOptionsResponse
{

/// </BLOCKQUOTE></PRE>
/// Element "OSDOptions" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    struct tt__OSDConfigurationOptions*  OSDOptions                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSD is a complexType.
///
/// struct _trt__CreateOSD operations:
/// - soap_default__trt__CreateOSD(soap*, _trt__CreateOSD*) reset members to default
/// - int soap_read__trt__CreateOSD(soap*, _trt__CreateOSD*) deserialize from a source
/// - int soap_write__trt__CreateOSD(soap*, _trt__CreateOSD*) serialize to a sink
/// - _trt__CreateOSD* soap_dup__trt__CreateOSD(soap*, _trt__CreateOSD* dst, _trt__CreateOSD *src) returns deep copy of _trt__CreateOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateOSD(_trt__CreateOSD*) deep deletes _trt__CreateOSD data members, use only on dst after soap_dup__trt__CreateOSD(NULL, _trt__CreateOSD *dst, _trt__CreateOSD *src) (use soapcpp2 -Ed)
struct _trt__CreateOSD
{
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse is a complexType.
///
/// struct _trt__CreateOSDResponse operations:
/// - soap_default__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) reset members to default
/// - int soap_read__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) deserialize from a source
/// - int soap_write__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) serialize to a sink
/// - _trt__CreateOSDResponse* soap_dup__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse* dst, _trt__CreateOSDResponse *src) returns deep copy of _trt__CreateOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateOSDResponse(_trt__CreateOSDResponse*) deep deletes _trt__CreateOSDResponse data members, use only on dst after soap_dup__trt__CreateOSDResponse(NULL, _trt__CreateOSDResponse *dst, _trt__CreateOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__CreateOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSD is a complexType.
///
/// struct _trt__DeleteOSD operations:
/// - soap_default__trt__DeleteOSD(soap*, _trt__DeleteOSD*) reset members to default
/// - int soap_read__trt__DeleteOSD(soap*, _trt__DeleteOSD*) deserialize from a source
/// - int soap_write__trt__DeleteOSD(soap*, _trt__DeleteOSD*) serialize to a sink
/// - _trt__DeleteOSD* soap_dup__trt__DeleteOSD(soap*, _trt__DeleteOSD* dst, _trt__DeleteOSD *src) returns deep copy of _trt__DeleteOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteOSD(_trt__DeleteOSD*) deep deletes _trt__DeleteOSD data members, use only on dst after soap_dup__trt__DeleteOSD(NULL, _trt__DeleteOSD *dst, _trt__DeleteOSD *src) (use soapcpp2 -Ed)
struct _trt__DeleteOSD
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse is a complexType.
///
/// struct _trt__DeleteOSDResponse operations:
/// - soap_default__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) reset members to default
/// - int soap_read__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) deserialize from a source
/// - int soap_write__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) serialize to a sink
/// - _trt__DeleteOSDResponse* soap_dup__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse* dst, _trt__DeleteOSDResponse *src) returns deep copy of _trt__DeleteOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteOSDResponse(_trt__DeleteOSDResponse*) deep deletes _trt__DeleteOSDResponse data members, use only on dst after soap_dup__trt__DeleteOSDResponse(NULL, _trt__DeleteOSDResponse *dst, _trt__DeleteOSDResponse *src) (use soapcpp2 -Ed)
struct _trt__DeleteOSDResponse
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
/// struct tt__DeviceEntity operations:
/// - soap_default_tt__DeviceEntity(soap*, tt__DeviceEntity*) reset members to default
/// - int soap_read_tt__DeviceEntity(soap*, tt__DeviceEntity*) deserialize from a source
/// - int soap_write_tt__DeviceEntity(soap*, tt__DeviceEntity*) serialize to a sink
/// - tt__DeviceEntity* soap_dup_tt__DeviceEntity(soap*, tt__DeviceEntity* dst, tt__DeviceEntity *src) returns deep copy of tt__DeviceEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceEntity(tt__DeviceEntity*) deep deletes tt__DeviceEntity data members, use only on dst after soap_dup_tt__DeviceEntity(NULL, tt__DeviceEntity *dst, tt__DeviceEntity *src) (use soapcpp2 -Ed)
struct tt__DeviceEntity
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
/// struct tt__IntRectangle operations:
/// - soap_default_tt__IntRectangle(soap*, tt__IntRectangle*) reset members to default
/// - int soap_read_tt__IntRectangle(soap*, tt__IntRectangle*) deserialize from a source
/// - int soap_write_tt__IntRectangle(soap*, tt__IntRectangle*) serialize to a sink
/// - tt__IntRectangle* soap_dup_tt__IntRectangle(soap*, tt__IntRectangle* dst, tt__IntRectangle *src) returns deep copy of tt__IntRectangle src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRectangle(tt__IntRectangle*) deep deletes tt__IntRectangle data members, use only on dst after soap_dup_tt__IntRectangle(NULL, tt__IntRectangle *dst, tt__IntRectangle *src) (use soapcpp2 -Ed)
struct tt__IntRectangle
{
/// Attribute "x" of XSD type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute "width" of XSD type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute "height" of XSD type xs:int.
   @int                                  height                         1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
/// struct tt__IntRectangleRange operations:
/// - soap_default_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) reset members to default
/// - int soap_read_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) deserialize from a source
/// - int soap_write_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) serialize to a sink
/// - tt__IntRectangleRange* soap_dup_tt__IntRectangleRange(soap*, tt__IntRectangleRange* dst, tt__IntRectangleRange *src) returns deep copy of tt__IntRectangleRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRectangleRange(tt__IntRectangleRange*) deep deletes tt__IntRectangleRange data members, use only on dst after soap_dup_tt__IntRectangleRange(NULL, tt__IntRectangleRange *dst, tt__IntRectangleRange *src) (use soapcpp2 -Ed)
struct tt__IntRectangleRange
{
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
/// Element "WidthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
/// Element "HeightRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 HeightRange                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
/// struct tt__IntRange operations:
/// - soap_default_tt__IntRange(soap*, tt__IntRange*) reset members to default
/// - int soap_read_tt__IntRange(soap*, tt__IntRange*) deserialize from a source
/// - int soap_write_tt__IntRange(soap*, tt__IntRange*) serialize to a sink
/// - tt__IntRange* soap_dup_tt__IntRange(soap*, tt__IntRange* dst, tt__IntRange *src) returns deep copy of tt__IntRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRange(tt__IntRange*) deep deletes tt__IntRange data members, use only on dst after soap_dup_tt__IntRange(NULL, tt__IntRange *dst, tt__IntRange *src) (use soapcpp2 -Ed)
struct tt__IntRange
{
/// Element "Min" of XSD type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
/// struct tt__FloatRange operations:
/// - soap_default_tt__FloatRange(soap*, tt__FloatRange*) reset members to default
/// - int soap_read_tt__FloatRange(soap*, tt__FloatRange*) deserialize from a source
/// - int soap_write_tt__FloatRange(soap*, tt__FloatRange*) serialize to a sink
/// - tt__FloatRange* soap_dup_tt__FloatRange(soap*, tt__FloatRange* dst, tt__FloatRange *src) returns deep copy of tt__FloatRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FloatRange(tt__FloatRange*) deep deletes tt__FloatRange data members, use only on dst after soap_dup_tt__FloatRange(NULL, tt__FloatRange *dst, tt__FloatRange *src) (use soapcpp2 -Ed)
struct tt__FloatRange
{
/// Element "Min" of XSD type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:float.
    float                                Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
/// struct tt__DurationRange operations:
/// - soap_default_tt__DurationRange(soap*, tt__DurationRange*) reset members to default
/// - int soap_read_tt__DurationRange(soap*, tt__DurationRange*) deserialize from a source
/// - int soap_write_tt__DurationRange(soap*, tt__DurationRange*) serialize to a sink
/// - tt__DurationRange* soap_dup_tt__DurationRange(soap*, tt__DurationRange* dst, tt__DurationRange *src) returns deep copy of tt__DurationRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DurationRange(tt__DurationRange*) deep deletes tt__DurationRange data members, use only on dst after soap_dup_tt__DurationRange(NULL, tt__DurationRange *dst, tt__DurationRange *src) (use soapcpp2 -Ed)
struct tt__DurationRange
{
/// Element "Min" of XSD type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
/// struct tt__IntList operations:
/// - soap_default_tt__IntList(soap*, tt__IntList*) reset members to default
/// - int soap_read_tt__IntList(soap*, tt__IntList*) deserialize from a source
/// - int soap_write_tt__IntList(soap*, tt__IntList*) serialize to a sink
/// - tt__IntList* soap_dup_tt__IntList(soap*, tt__IntList* dst, tt__IntList *src) returns deep copy of tt__IntList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntList(tt__IntList*) deep deletes tt__IntList data members, use only on dst after soap_dup_tt__IntList(NULL, tt__IntList *dst, tt__IntList *src) (use soapcpp2 -Ed)
struct tt__IntList
{
/// Size of array of int* is 0..unbounded.
   $int                                  __sizeItems                    0;
/// Array int* of size 0..unbounded.
    int*                                 Items                          0;
};

/// @brief "http://www.onvif.org/ver10/schema":FloatList is a complexType.
///
/// struct tt__FloatList operations:
/// - soap_default_tt__FloatList(soap*, tt__FloatList*) reset members to default
/// - int soap_read_tt__FloatList(soap*, tt__FloatList*) deserialize from a source
/// - int soap_write_tt__FloatList(soap*, tt__FloatList*) serialize to a sink
/// - tt__FloatList* soap_dup_tt__FloatList(soap*, tt__FloatList* dst, tt__FloatList *src) returns deep copy of tt__FloatList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FloatList(tt__FloatList*) deep deletes tt__FloatList data members, use only on dst after soap_dup_tt__FloatList(NULL, tt__FloatList *dst, tt__FloatList *src) (use soapcpp2 -Ed)
struct tt__FloatList
{
/// Size of array of float* is 0..unbounded.
   $int                                  __sizeItems                    0;
/// Array float* of size 0..unbounded.
    float*                               Items                          0;
};

/// @brief "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
///
/// struct tt__AnyHolder operations:
/// - soap_default_tt__AnyHolder(soap*, tt__AnyHolder*) reset members to default
/// - int soap_read_tt__AnyHolder(soap*, tt__AnyHolder*) deserialize from a source
/// - int soap_write_tt__AnyHolder(soap*, tt__AnyHolder*) serialize to a sink
/// - tt__AnyHolder* soap_dup_tt__AnyHolder(soap*, tt__AnyHolder* dst, tt__AnyHolder *src) returns deep copy of tt__AnyHolder src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnyHolder(tt__AnyHolder*) deep deletes tt__AnyHolder data members, use only on dst after soap_dup_tt__AnyHolder(NULL, tt__AnyHolder *dst, tt__AnyHolder *src) (use soapcpp2 -Ed)
struct tt__AnyHolder
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
/// struct tt__VideoSourceExtension operations:
/// - soap_default_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) reset members to default
/// - int soap_read_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) deserialize from a source
/// - int soap_write_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) serialize to a sink
/// - tt__VideoSourceExtension* soap_dup_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension* dst, tt__VideoSourceExtension *src) returns deep copy of tt__VideoSourceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceExtension(tt__VideoSourceExtension*) deep deletes tt__VideoSourceExtension data members, use only on dst after soap_dup_tt__VideoSourceExtension(NULL, tt__VideoSourceExtension *dst, tt__VideoSourceExtension *src) (use soapcpp2 -Ed)
struct tt__VideoSourceExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    struct tt__VideoSourceExtension2*    Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
/// struct tt__VideoSourceExtension2 operations:
/// - soap_default_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) reset members to default
/// - int soap_read_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) deserialize from a source
/// - int soap_write_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) serialize to a sink
/// - tt__VideoSourceExtension2* soap_dup_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2* dst, tt__VideoSourceExtension2 *src) returns deep copy of tt__VideoSourceExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceExtension2(tt__VideoSourceExtension2*) deep deletes tt__VideoSourceExtension2 data members, use only on dst after soap_dup_tt__VideoSourceExtension2(NULL, tt__VideoSourceExtension2 *dst, tt__VideoSourceExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoSourceExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
/// struct tt__Profile operations:
/// - soap_default_tt__Profile(soap*, tt__Profile*) reset members to default
/// - int soap_read_tt__Profile(soap*, tt__Profile*) deserialize from a source
/// - int soap_write_tt__Profile(soap*, tt__Profile*) serialize to a sink
/// - tt__Profile* soap_dup_tt__Profile(soap*, tt__Profile* dst, tt__Profile *src) returns deep copy of tt__Profile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Profile(tt__Profile*) deep deletes tt__Profile data members, use only on dst after soap_dup_tt__Profile(NULL, tt__Profile *dst, tt__Profile *src) (use soapcpp2 -Ed)
struct tt__Profile
{
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
/// Element "VideoEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
/// Element "PTZConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataConfiguration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension.
    struct tt__ProfileExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "fixed" of XSD type xs:boolean.
   @enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
/// struct tt__ProfileExtension operations:
/// - soap_default_tt__ProfileExtension(soap*, tt__ProfileExtension*) reset members to default
/// - int soap_read_tt__ProfileExtension(soap*, tt__ProfileExtension*) deserialize from a source
/// - int soap_write_tt__ProfileExtension(soap*, tt__ProfileExtension*) serialize to a sink
/// - tt__ProfileExtension* soap_dup_tt__ProfileExtension(soap*, tt__ProfileExtension* dst, tt__ProfileExtension *src) returns deep copy of tt__ProfileExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileExtension(tt__ProfileExtension*) deep deletes tt__ProfileExtension data members, use only on dst after soap_dup_tt__ProfileExtension(NULL, tt__ProfileExtension *dst, tt__ProfileExtension *src) (use soapcpp2 -Ed)
struct tt__ProfileExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    struct tt__ProfileExtension2*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
/// struct tt__ProfileExtension2 operations:
/// - soap_default_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) reset members to default
/// - int soap_read_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) deserialize from a source
/// - int soap_write_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) serialize to a sink
/// - tt__ProfileExtension2* soap_dup_tt__ProfileExtension2(soap*, tt__ProfileExtension2* dst, tt__ProfileExtension2 *src) returns deep copy of tt__ProfileExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileExtension2(tt__ProfileExtension2*) deep deletes tt__ProfileExtension2 data members, use only on dst after soap_dup_tt__ProfileExtension2(NULL, tt__ProfileExtension2 *dst, tt__ProfileExtension2 *src) (use soapcpp2 -Ed)
struct tt__ProfileExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
/// struct tt__ConfigurationEntity operations:
/// - soap_default_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) reset members to default
/// - int soap_read_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) deserialize from a source
/// - int soap_write_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) serialize to a sink
/// - tt__ConfigurationEntity* soap_dup_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity* dst, tt__ConfigurationEntity *src) returns deep copy of tt__ConfigurationEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ConfigurationEntity(tt__ConfigurationEntity*) deep deletes tt__ConfigurationEntity data members, use only on dst after soap_dup_tt__ConfigurationEntity(NULL, tt__ConfigurationEntity *dst, tt__ConfigurationEntity *src) (use soapcpp2 -Ed)
struct tt__ConfigurationEntity
{
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
/// struct tt__VideoSourceConfigurationExtension operations:
/// - soap_default_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) reset members to default
/// - int soap_read_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) serialize to a sink
/// - tt__VideoSourceConfigurationExtension* soap_dup_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension* dst, tt__VideoSourceConfigurationExtension *src) returns deep copy of tt__VideoSourceConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationExtension(tt__VideoSourceConfigurationExtension*) deep deletes tt__VideoSourceConfigurationExtension data members, use only on dst after soap_dup_tt__VideoSourceConfigurationExtension(NULL, tt__VideoSourceConfigurationExtension *dst, tt__VideoSourceConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationExtension
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":Rotate.
    struct tt__Rotate*                   Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    struct tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
/// struct tt__VideoSourceConfigurationExtension2 operations:
/// - soap_default_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) reset members to default
/// - int soap_read_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) serialize to a sink
/// - tt__VideoSourceConfigurationExtension2* soap_dup_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2* dst, tt__VideoSourceConfigurationExtension2 *src) returns deep copy of tt__VideoSourceConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationExtension2(tt__VideoSourceConfigurationExtension2*) deep deletes tt__VideoSourceConfigurationExtension2 data members, use only on dst after soap_dup_tt__VideoSourceConfigurationExtension2(NULL, tt__VideoSourceConfigurationExtension2 *dst, tt__VideoSourceConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationExtension2
{
/// Size of array of struct tt__LensDescription* is 0..unbounded.
   $int                                  __sizeLensDescription          0;
/// Array struct tt__LensDescription* of size 0..unbounded.
    struct tt__LensDescription*          LensDescription                0;
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
/// struct tt__Rotate operations:
/// - soap_default_tt__Rotate(soap*, tt__Rotate*) reset members to default
/// - int soap_read_tt__Rotate(soap*, tt__Rotate*) deserialize from a source
/// - int soap_write_tt__Rotate(soap*, tt__Rotate*) serialize to a sink
/// - tt__Rotate* soap_dup_tt__Rotate(soap*, tt__Rotate* dst, tt__Rotate *src) returns deep copy of tt__Rotate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Rotate(tt__Rotate*) deep deletes tt__Rotate data members, use only on dst after soap_dup_tt__Rotate(NULL, tt__Rotate *dst, tt__Rotate *src) (use soapcpp2 -Ed)
struct tt__Rotate
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
/// Element "Degree" of XSD type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateExtension.
    struct tt__RotateExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
/// struct tt__RotateExtension operations:
/// - soap_default_tt__RotateExtension(soap*, tt__RotateExtension*) reset members to default
/// - int soap_read_tt__RotateExtension(soap*, tt__RotateExtension*) deserialize from a source
/// - int soap_write_tt__RotateExtension(soap*, tt__RotateExtension*) serialize to a sink
/// - tt__RotateExtension* soap_dup_tt__RotateExtension(soap*, tt__RotateExtension* dst, tt__RotateExtension *src) returns deep copy of tt__RotateExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RotateExtension(tt__RotateExtension*) deep deletes tt__RotateExtension data members, use only on dst after soap_dup_tt__RotateExtension(NULL, tt__RotateExtension *dst, tt__RotateExtension *src) (use soapcpp2 -Ed)
struct tt__RotateExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":LensProjection is a complexType.
///
/// struct tt__LensProjection operations:
/// - soap_default_tt__LensProjection(soap*, tt__LensProjection*) reset members to default
/// - int soap_read_tt__LensProjection(soap*, tt__LensProjection*) deserialize from a source
/// - int soap_write_tt__LensProjection(soap*, tt__LensProjection*) serialize to a sink
/// - tt__LensProjection* soap_dup_tt__LensProjection(soap*, tt__LensProjection* dst, tt__LensProjection *src) returns deep copy of tt__LensProjection src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LensProjection(tt__LensProjection*) deep deletes tt__LensProjection data members, use only on dst after soap_dup_tt__LensProjection(NULL, tt__LensProjection *dst, tt__LensProjection *src) (use soapcpp2 -Ed)
struct tt__LensProjection
{
/// <PRE><BLOCKQUOTE>
///   Angle of incidence.
/// </BLOCKQUOTE></PRE>
/// Element "Angle" of XSD type xs:float.
    float                                Angle                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mapping radius as a consequence of the emergent angle.
/// </BLOCKQUOTE></PRE>
/// Element "Radius" of XSD type xs:float.
    float                                Radius                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional ray absorption at the given angle due to vignetting. A value of one means no absorption.
/// </BLOCKQUOTE></PRE>
/// Element "Transmittance" of XSD type xs:float.
    float*                               Transmittance                  0;	///< Optional element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LensOffset is a complexType.
///
/// struct tt__LensOffset operations:
/// - soap_default_tt__LensOffset(soap*, tt__LensOffset*) reset members to default
/// - int soap_read_tt__LensOffset(soap*, tt__LensOffset*) deserialize from a source
/// - int soap_write_tt__LensOffset(soap*, tt__LensOffset*) serialize to a sink
/// - tt__LensOffset* soap_dup_tt__LensOffset(soap*, tt__LensOffset* dst, tt__LensOffset *src) returns deep copy of tt__LensOffset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LensOffset(tt__LensOffset*) deep deletes tt__LensOffset data members, use only on dst after soap_dup_tt__LensOffset(NULL, tt__LensOffset *dst, tt__LensOffset *src) (use soapcpp2 -Ed)
struct tt__LensOffset
{
/// <PRE><BLOCKQUOTE>
///   Optional horizontal offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
/// Attribute "x" of XSD type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional vertical offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
/// Attribute "y" of XSD type xs:float.
   @float*                               y                              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LensDescription is a complexType.
///
/// struct tt__LensDescription operations:
/// - soap_default_tt__LensDescription(soap*, tt__LensDescription*) reset members to default
/// - int soap_read_tt__LensDescription(soap*, tt__LensDescription*) deserialize from a source
/// - int soap_write_tt__LensDescription(soap*, tt__LensDescription*) serialize to a sink
/// - tt__LensDescription* soap_dup_tt__LensDescription(soap*, tt__LensDescription* dst, tt__LensDescription *src) returns deep copy of tt__LensDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LensDescription(tt__LensDescription*) deep deletes tt__LensDescription data members, use only on dst after soap_dup_tt__LensDescription(NULL, tt__LensDescription *dst, tt__LensDescription *src) (use soapcpp2 -Ed)
struct tt__LensDescription
{
/// Element "Offset" of XSD type "http://www.onvif.org/ver10/schema":LensOffset.
    struct tt__LensOffset*               Offset                         1;	///< Required element.
/// Size of array of struct tt__LensProjection* is 1..unbounded.
   $int                                  __sizeProjection               1;
/// Array struct tt__LensProjection* of size 1..unbounded.
    struct tt__LensProjection*           Projection                     1;
/// Element "XFactor" of XSD type xs:float.
    float                                XFactor                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional focal length of the optical system.
/// </BLOCKQUOTE></PRE>
/// Attribute "FocalLength" of XSD type xs:float.
   @float*                               FocalLength                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
///
/// struct tt__VideoSourceConfigurationOptions operations:
/// - soap_default_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions*) reset members to default
/// - int soap_read_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions*) serialize to a sink
/// - tt__VideoSourceConfigurationOptions* soap_dup_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions* dst, tt__VideoSourceConfigurationOptions *src) returns deep copy of tt__VideoSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationOptions(tt__VideoSourceConfigurationOptions*) deep deletes tt__VideoSourceConfigurationOptions data members, use only on dst after soap_dup_tt__VideoSourceConfigurationOptions(NULL, tt__VideoSourceConfigurationOptions *dst, tt__VideoSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range for the capturing area.
/// </BLOCKQUOTE></PRE>
/// Element "BoundsRange" of XSD type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    struct tt__IntRectangleRange*        BoundsRange                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of physical inputs.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeVideoSourceTokensAvailable 1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  VideoSourceTokensAvailable     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    struct tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
///
/// struct tt__VideoSourceConfigurationOptionsExtension operations:
/// - soap_default_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension*) reset members to default
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension*) serialize to a sink
/// - tt__VideoSourceConfigurationOptionsExtension* soap_dup_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension* dst, tt__VideoSourceConfigurationOptionsExtension *src) returns deep copy of tt__VideoSourceConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationOptionsExtension(tt__VideoSourceConfigurationOptionsExtension*) deep deletes tt__VideoSourceConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__VideoSourceConfigurationOptionsExtension(NULL, tt__VideoSourceConfigurationOptionsExtension *dst, tt__VideoSourceConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationOptionsExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":RotateOptions.
    struct tt__RotateOptions*            Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    struct tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
///
/// struct tt__VideoSourceConfigurationOptionsExtension2 operations:
/// - soap_default_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2*) reset members to default
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2*) serialize to a sink
/// - tt__VideoSourceConfigurationOptionsExtension2* soap_dup_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2* dst, tt__VideoSourceConfigurationOptionsExtension2 *src) returns deep copy of tt__VideoSourceConfigurationOptionsExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfigurationOptionsExtension2(tt__VideoSourceConfigurationOptionsExtension2*) deep deletes tt__VideoSourceConfigurationOptionsExtension2 data members, use only on dst after soap_dup_tt__VideoSourceConfigurationOptionsExtension2(NULL, tt__VideoSourceConfigurationOptionsExtension2 *dst, tt__VideoSourceConfigurationOptionsExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfigurationOptionsExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
///
/// struct tt__RotateOptions operations:
/// - soap_default_tt__RotateOptions(soap*, tt__RotateOptions*) reset members to default
/// - int soap_read_tt__RotateOptions(soap*, tt__RotateOptions*) deserialize from a source
/// - int soap_write_tt__RotateOptions(soap*, tt__RotateOptions*) serialize to a sink
/// - tt__RotateOptions* soap_dup_tt__RotateOptions(soap*, tt__RotateOptions* dst, tt__RotateOptions *src) returns deep copy of tt__RotateOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RotateOptions(tt__RotateOptions*) deep deletes tt__RotateOptions data members, use only on dst after soap_dup_tt__RotateOptions(NULL, tt__RotateOptions *dst, tt__RotateOptions *src) (use soapcpp2 -Ed)
struct tt__RotateOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Rotate mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__RotateMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__RotateMode* of size 1..unbounded.
    enum tt__RotateMode*                 Mode                           1;
/// <PRE><BLOCKQUOTE>
///   List of supported degree value for rotation.
/// </BLOCKQUOTE></PRE>
/// Element "DegreeList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  DegreeList                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    struct tt__RotateOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
///
/// struct tt__RotateOptionsExtension operations:
/// - soap_default_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension*) reset members to default
/// - int soap_read_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension*) deserialize from a source
/// - int soap_write_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension*) serialize to a sink
/// - tt__RotateOptionsExtension* soap_dup_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension* dst, tt__RotateOptionsExtension *src) returns deep copy of tt__RotateOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RotateOptionsExtension(tt__RotateOptionsExtension*) deep deletes tt__RotateOptionsExtension data members, use only on dst after soap_dup_tt__RotateOptionsExtension(NULL, tt__RotateOptionsExtension *dst, tt__RotateOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__RotateOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
/// struct tt__VideoResolution operations:
/// - soap_default_tt__VideoResolution(soap*, tt__VideoResolution*) reset members to default
/// - int soap_read_tt__VideoResolution(soap*, tt__VideoResolution*) deserialize from a source
/// - int soap_write_tt__VideoResolution(soap*, tt__VideoResolution*) serialize to a sink
/// - tt__VideoResolution* soap_dup_tt__VideoResolution(soap*, tt__VideoResolution* dst, tt__VideoResolution *src) returns deep copy of tt__VideoResolution src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoResolution(tt__VideoResolution*) deep deletes tt__VideoResolution data members, use only on dst after soap_dup_tt__VideoResolution(NULL, tt__VideoResolution *dst, tt__VideoResolution *src) (use soapcpp2 -Ed)
struct tt__VideoResolution
{
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
/// struct tt__VideoRateControl operations:
/// - soap_default_tt__VideoRateControl(soap*, tt__VideoRateControl*) reset members to default
/// - int soap_read_tt__VideoRateControl(soap*, tt__VideoRateControl*) deserialize from a source
/// - int soap_write_tt__VideoRateControl(soap*, tt__VideoRateControl*) serialize to a sink
/// - tt__VideoRateControl* soap_dup_tt__VideoRateControl(soap*, tt__VideoRateControl* dst, tt__VideoRateControl *src) returns deep copy of tt__VideoRateControl src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoRateControl(tt__VideoRateControl*) deep deletes tt__VideoRateControl data members, use only on dst after soap_dup_tt__VideoRateControl(NULL, tt__VideoRateControl *dst, tt__VideoRateControl *src) (use soapcpp2 -Ed)
struct tt__VideoRateControl
{
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateLimit" of XSD type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
/// Element "EncodingInterval" of XSD type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
/// Element "BitrateLimit" of XSD type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
/// struct tt__Mpeg4Configuration operations:
/// - soap_default_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration*) reset members to default
/// - int soap_read_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration*) deserialize from a source
/// - int soap_write_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration*) serialize to a sink
/// - tt__Mpeg4Configuration* soap_dup_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration* dst, tt__Mpeg4Configuration *src) returns deep copy of tt__Mpeg4Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Configuration(tt__Mpeg4Configuration*) deep deletes tt__Mpeg4Configuration data members, use only on dst after soap_dup_tt__Mpeg4Configuration(NULL, tt__Mpeg4Configuration *dst, tt__Mpeg4Configuration *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Configuration
{
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4Profile" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
/// struct tt__H264Configuration operations:
/// - soap_default_tt__H264Configuration(soap*, tt__H264Configuration*) reset members to default
/// - int soap_read_tt__H264Configuration(soap*, tt__H264Configuration*) deserialize from a source
/// - int soap_write_tt__H264Configuration(soap*, tt__H264Configuration*) serialize to a sink
/// - tt__H264Configuration* soap_dup_tt__H264Configuration(soap*, tt__H264Configuration* dst, tt__H264Configuration *src) returns deep copy of tt__H264Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Configuration(tt__H264Configuration*) deep deletes tt__H264Configuration data members, use only on dst after soap_dup_tt__H264Configuration(NULL, tt__H264Configuration *dst, tt__H264Configuration *src) (use soapcpp2 -Ed)
struct tt__H264Configuration
{
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
/// Element "H264Profile" of XSD type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
/// struct tt__VideoEncoderConfigurationOptions operations:
/// - soap_default_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions*) reset members to default
/// - int soap_read_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions*) serialize to a sink
/// - tt__VideoEncoderConfigurationOptions* soap_dup_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions* dst, tt__VideoEncoderConfigurationOptions *src) returns deep copy of tt__VideoEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderConfigurationOptions(tt__VideoEncoderConfigurationOptions*) deep deletes tt__VideoEncoderConfigurationOptions data members, use only on dst after soap_dup_tt__VideoEncoderConfigurationOptions(NULL, tt__VideoEncoderConfigurationOptions *dst, tt__VideoEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
/// Element "QualityRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
    struct tt__JpegOptions*              JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    struct tt__Mpeg4Options*             MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options.
    struct tt__H264Options*              H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    struct tt__VideoEncoderOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
/// struct tt__VideoEncoderOptionsExtension operations:
/// - soap_default_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension*) reset members to default
/// - int soap_read_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension*) deserialize from a source
/// - int soap_write_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension*) serialize to a sink
/// - tt__VideoEncoderOptionsExtension* soap_dup_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension* dst, tt__VideoEncoderOptionsExtension *src) returns deep copy of tt__VideoEncoderOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderOptionsExtension(tt__VideoEncoderOptionsExtension*) deep deletes tt__VideoEncoderOptionsExtension data members, use only on dst after soap_dup_tt__VideoEncoderOptionsExtension(NULL, tt__VideoEncoderOptionsExtension *dst, tt__VideoEncoderOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderOptionsExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions2.
    struct tt__JpegOptions2*             JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    struct tt__Mpeg4Options2*            MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options2.
    struct tt__H264Options2*             H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    struct tt__VideoEncoderOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
/// struct tt__VideoEncoderOptionsExtension2 operations:
/// - soap_default_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2*) reset members to default
/// - int soap_read_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2*) deserialize from a source
/// - int soap_write_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2*) serialize to a sink
/// - tt__VideoEncoderOptionsExtension2* soap_dup_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2* dst, tt__VideoEncoderOptionsExtension2 *src) returns deep copy of tt__VideoEncoderOptionsExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderOptionsExtension2(tt__VideoEncoderOptionsExtension2*) deep deletes tt__VideoEncoderOptionsExtension2 data members, use only on dst after soap_dup_tt__VideoEncoderOptionsExtension2(NULL, tt__VideoEncoderOptionsExtension2 *dst, tt__VideoEncoderOptionsExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderOptionsExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
/// struct tt__JpegOptions operations:
/// - soap_default_tt__JpegOptions(soap*, tt__JpegOptions*) reset members to default
/// - int soap_read_tt__JpegOptions(soap*, tt__JpegOptions*) deserialize from a source
/// - int soap_write_tt__JpegOptions(soap*, tt__JpegOptions*) serialize to a sink
/// - tt__JpegOptions* soap_dup_tt__JpegOptions(soap*, tt__JpegOptions* dst, tt__JpegOptions *src) returns deep copy of tt__JpegOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegOptions(tt__JpegOptions*) deep deletes tt__JpegOptions data members, use only on dst after soap_dup_tt__JpegOptions(NULL, tt__JpegOptions *dst, tt__JpegOptions *src) (use soapcpp2 -Ed)
struct tt__JpegOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
/// struct tt__Mpeg4Options operations:
/// - soap_default_tt__Mpeg4Options(soap*, tt__Mpeg4Options*) reset members to default
/// - int soap_read_tt__Mpeg4Options(soap*, tt__Mpeg4Options*) deserialize from a source
/// - int soap_write_tt__Mpeg4Options(soap*, tt__Mpeg4Options*) serialize to a sink
/// - tt__Mpeg4Options* soap_dup_tt__Mpeg4Options(soap*, tt__Mpeg4Options* dst, tt__Mpeg4Options *src) returns deep copy of tt__Mpeg4Options src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Options(tt__Mpeg4Options*) deep deletes tt__Mpeg4Options data members, use only on dst after soap_dup_tt__Mpeg4Options(NULL, tt__Mpeg4Options *dst, tt__Mpeg4Options *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
/// struct tt__H264Options operations:
/// - soap_default_tt__H264Options(soap*, tt__H264Options*) reset members to default
/// - int soap_read_tt__H264Options(soap*, tt__H264Options*) deserialize from a source
/// - int soap_write_tt__H264Options(soap*, tt__H264Options*) serialize to a sink
/// - tt__H264Options* soap_dup_tt__H264Options(soap*, tt__H264Options* dst, tt__H264Options *src) returns deep copy of tt__H264Options src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Options(tt__H264Options*) deep deletes tt__H264Options data members, use only on dst after soap_dup_tt__H264Options(NULL, tt__H264Options *dst, tt__H264Options *src) (use soapcpp2 -Ed)
struct tt__H264Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution2 is a complexType.
///
/// struct tt__VideoResolution2 operations:
/// - soap_default_tt__VideoResolution2(soap*, tt__VideoResolution2*) reset members to default
/// - int soap_read_tt__VideoResolution2(soap*, tt__VideoResolution2*) deserialize from a source
/// - int soap_write_tt__VideoResolution2(soap*, tt__VideoResolution2*) serialize to a sink
/// - tt__VideoResolution2* soap_dup_tt__VideoResolution2(soap*, tt__VideoResolution2* dst, tt__VideoResolution2 *src) returns deep copy of tt__VideoResolution2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoResolution2(tt__VideoResolution2*) deep deletes tt__VideoResolution2 data members, use only on dst after soap_dup_tt__VideoResolution2(NULL, tt__VideoResolution2 *dst, tt__VideoResolution2 *src) (use soapcpp2 -Ed)
struct tt__VideoResolution2
{
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl2 is a complexType.
///
/// struct tt__VideoRateControl2 operations:
/// - soap_default_tt__VideoRateControl2(soap*, tt__VideoRateControl2*) reset members to default
/// - int soap_read_tt__VideoRateControl2(soap*, tt__VideoRateControl2*) deserialize from a source
/// - int soap_write_tt__VideoRateControl2(soap*, tt__VideoRateControl2*) serialize to a sink
/// - tt__VideoRateControl2* soap_dup_tt__VideoRateControl2(soap*, tt__VideoRateControl2* dst, tt__VideoRateControl2 *src) returns deep copy of tt__VideoRateControl2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoRateControl2(tt__VideoRateControl2*) deep deletes tt__VideoRateControl2 data members, use only on dst after soap_dup_tt__VideoRateControl2(NULL, tt__VideoRateControl2 *dst, tt__VideoRateControl2 *src) (use soapcpp2 -Ed)
struct tt__VideoRateControl2
{
/// <PRE><BLOCKQUOTE>
///   Desired frame rate in fps. The actual rate may be lower due to e.g. performance limitations.
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateLimit" of XSD type xs:float.
    float                                FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
/// Element "BitrateLimit" of XSD type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Enforce constant bitrate.
/// </BLOCKQUOTE></PRE>
/// Attribute "ConstantBitRate" of XSD type xs:boolean.
   @enum xsd__boolean*                   ConstantBitRate                0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is a complexType.
///
/// struct tt__VideoEncoder2ConfigurationOptions operations:
/// - soap_default_tt__VideoEncoder2ConfigurationOptions(soap*, tt__VideoEncoder2ConfigurationOptions*) reset members to default
/// - int soap_read_tt__VideoEncoder2ConfigurationOptions(soap*, tt__VideoEncoder2ConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoEncoder2ConfigurationOptions(soap*, tt__VideoEncoder2ConfigurationOptions*) serialize to a sink
/// - tt__VideoEncoder2ConfigurationOptions* soap_dup_tt__VideoEncoder2ConfigurationOptions(soap*, tt__VideoEncoder2ConfigurationOptions* dst, tt__VideoEncoder2ConfigurationOptions *src) returns deep copy of tt__VideoEncoder2ConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoder2ConfigurationOptions(tt__VideoEncoder2ConfigurationOptions*) deep deletes tt__VideoEncoder2ConfigurationOptions data members, use only on dst after soap_dup_tt__VideoEncoder2ConfigurationOptions(NULL, tt__VideoEncoder2ConfigurationOptions *dst, tt__VideoEncoder2ConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoEncoder2ConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Mime name of the supported Video format. For name definitions see tt:VideoEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
/// Element "QualityRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution2* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution2* of size 1..unbounded.
    struct tt__VideoResolution2*         ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Lower and Upper bounds for the supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Attribute "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntAttrList.
   @tt__IntAttrList                      GovLengthRange                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported target frame rates in fps (frames per second). The list shall be sorted with highest values first.
/// </BLOCKQUOTE></PRE>
/// Attribute "FrameRatesSupported" of XSD type "http://www.onvif.org/ver10/schema":FloatAttrList.
   @tt__FloatAttrList                    FrameRatesSupported            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported encoder profiles as defined in tt::VideoEncodingProfiles.
/// </BLOCKQUOTE></PRE>
/// Attribute "ProfilesSupported" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   ProfilesSupported              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Signal whether enforcing constant bitrate is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "ConstantBitRateSupported" of XSD type xs:boolean.
   @enum xsd__boolean*                   ConstantBitRateSupported       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed number of encoder instances using this encoding for the associated VideoSourceConfiguration.
/// </BLOCKQUOTE></PRE>
/// Attribute "GuaranteedInstances" of XSD type xs:int.
   @int*                                 GuaranteedInstances            0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
///
/// struct tt__AudioSourceConfigurationOptions operations:
/// - soap_default_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions*) reset members to default
/// - int soap_read_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions*) serialize to a sink
/// - tt__AudioSourceConfigurationOptions* soap_dup_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions* dst, tt__AudioSourceConfigurationOptions *src) returns deep copy of tt__AudioSourceConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSourceConfigurationOptions(tt__AudioSourceConfigurationOptions*) deep deletes tt__AudioSourceConfigurationOptions data members, use only on dst after soap_dup_tt__AudioSourceConfigurationOptions(NULL, tt__AudioSourceConfigurationOptions *dst, tt__AudioSourceConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the audio source the configuration can be used for.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeInputTokensAvailable     1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputTokensAvailable           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    struct tt__AudioSourceOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
///
/// struct tt__AudioSourceOptionsExtension operations:
/// - soap_default_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension*) reset members to default
/// - int soap_read_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension*) deserialize from a source
/// - int soap_write_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension*) serialize to a sink
/// - tt__AudioSourceOptionsExtension* soap_dup_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension* dst, tt__AudioSourceOptionsExtension *src) returns deep copy of tt__AudioSourceOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSourceOptionsExtension(tt__AudioSourceOptionsExtension*) deep deletes tt__AudioSourceOptionsExtension data members, use only on dst after soap_dup_tt__AudioSourceOptionsExtension(NULL, tt__AudioSourceOptionsExtension *dst, tt__AudioSourceOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__AudioSourceOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
///
/// struct tt__AudioEncoderConfigurationOptions operations:
/// - soap_default_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions*) reset members to default
/// - int soap_read_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions*) serialize to a sink
/// - tt__AudioEncoderConfigurationOptions* soap_dup_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions* dst, tt__AudioEncoderConfigurationOptions *src) returns deep copy of tt__AudioEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoderConfigurationOptions(tt__AudioEncoderConfigurationOptions*) deep deletes tt__AudioEncoderConfigurationOptions data members, use only on dst after soap_dup_tt__AudioEncoderConfigurationOptions(NULL, tt__AudioEncoderConfigurationOptions *dst, tt__AudioEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   list of supported AudioEncoderConfigurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoderConfigurationOption* is 0..unbounded.
   $int                                  __sizeOptions                  0;
/// Array struct tt__AudioEncoderConfigurationOption* of size 0..unbounded.
    struct tt__AudioEncoderConfigurationOption*  Options                        0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
///
/// struct tt__AudioEncoderConfigurationOption operations:
/// - soap_default_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption*) reset members to default
/// - int soap_read_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption*) deserialize from a source
/// - int soap_write_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption*) serialize to a sink
/// - tt__AudioEncoderConfigurationOption* soap_dup_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption* dst, tt__AudioEncoderConfigurationOption *src) returns deep copy of tt__AudioEncoderConfigurationOption src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoderConfigurationOption(tt__AudioEncoderConfigurationOption*) deep deletes tt__AudioEncoderConfigurationOption data members, use only on dst after soap_dup_tt__AudioEncoderConfigurationOption(NULL, tt__AudioEncoderConfigurationOption *dst, tt__AudioEncoderConfigurationOption *src) (use soapcpp2 -Ed)
struct tt__AudioEncoderConfigurationOption
{
/// <PRE><BLOCKQUOTE>
///   The enoding used for audio data (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "BitrateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateList                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is a complexType.
///
/// struct tt__AudioEncoder2ConfigurationOptions operations:
/// - soap_default_tt__AudioEncoder2ConfigurationOptions(soap*, tt__AudioEncoder2ConfigurationOptions*) reset members to default
/// - int soap_read_tt__AudioEncoder2ConfigurationOptions(soap*, tt__AudioEncoder2ConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioEncoder2ConfigurationOptions(soap*, tt__AudioEncoder2ConfigurationOptions*) serialize to a sink
/// - tt__AudioEncoder2ConfigurationOptions* soap_dup_tt__AudioEncoder2ConfigurationOptions(soap*, tt__AudioEncoder2ConfigurationOptions* dst, tt__AudioEncoder2ConfigurationOptions *src) returns deep copy of tt__AudioEncoder2ConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoder2ConfigurationOptions(tt__AudioEncoder2ConfigurationOptions*) deep deletes tt__AudioEncoder2ConfigurationOptions data members, use only on dst after soap_dup_tt__AudioEncoder2ConfigurationOptions(NULL, tt__AudioEncoder2ConfigurationOptions *dst, tt__AudioEncoder2ConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioEncoder2ConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Mime name of the supported audio format. For definitions see tt:AudioEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "BitrateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateList                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
///
/// struct tt__MetadataConfigurationExtension operations:
/// - soap_default_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension*) reset members to default
/// - int soap_read_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension*) serialize to a sink
/// - tt__MetadataConfigurationExtension* soap_dup_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension* dst, tt__MetadataConfigurationExtension *src) returns deep copy of tt__MetadataConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationExtension(tt__MetadataConfigurationExtension*) deep deletes tt__MetadataConfigurationExtension data members, use only on dst after soap_dup_tt__MetadataConfigurationExtension(NULL, tt__MetadataConfigurationExtension *dst, tt__MetadataConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
///
/// struct tt__PTZFilter operations:
/// - soap_default_tt__PTZFilter(soap*, tt__PTZFilter*) reset members to default
/// - int soap_read_tt__PTZFilter(soap*, tt__PTZFilter*) deserialize from a source
/// - int soap_write_tt__PTZFilter(soap*, tt__PTZFilter*) serialize to a sink
/// - tt__PTZFilter* soap_dup_tt__PTZFilter(soap*, tt__PTZFilter* dst, tt__PTZFilter *src) returns deep copy of tt__PTZFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZFilter(tt__PTZFilter*) deep deletes tt__PTZFilter data members, use only on dst after soap_dup_tt__PTZFilter(NULL, tt__PTZFilter *dst, tt__PTZFilter *src) (use soapcpp2 -Ed)
struct tt__PTZFilter
{
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ position
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:boolean.
    enum xsd__boolean                    Position                       1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Subcription handling in the same way as base notification subscription.
/// </BLOCKQUOTE></PRE>
/// struct tt__EventSubscription operations:
/// - soap_default_tt__EventSubscription(soap*, tt__EventSubscription*) reset members to default
/// - int soap_read_tt__EventSubscription(soap*, tt__EventSubscription*) deserialize from a source
/// - int soap_write_tt__EventSubscription(soap*, tt__EventSubscription*) serialize to a sink
/// - tt__EventSubscription* soap_dup_tt__EventSubscription(soap*, tt__EventSubscription* dst, tt__EventSubscription *src) returns deep copy of tt__EventSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventSubscription(tt__EventSubscription*) deep deletes tt__EventSubscription data members, use only on dst after soap_dup_tt__EventSubscription(NULL, tt__EventSubscription *dst, tt__EventSubscription *src) (use soapcpp2 -Ed)
struct tt__EventSubscription
{
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// struct _tt__EventSubscription_SubscriptionPolicy operations:
/// - soap_default__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy*) reset members to default
/// - int soap_read__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy*) serialize to a sink
/// - _tt__EventSubscription_SubscriptionPolicy* soap_dup__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy* dst, _tt__EventSubscription_SubscriptionPolicy *src) returns deep copy of _tt__EventSubscription_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__EventSubscription_SubscriptionPolicy(_tt__EventSubscription_SubscriptionPolicy*) deep deletes _tt__EventSubscription_SubscriptionPolicy data members, use only on dst after soap_dup__tt__EventSubscription_SubscriptionPolicy(NULL, _tt__EventSubscription_SubscriptionPolicy *dst, _tt__EventSubscription_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _tt__EventSubscription_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
///
/// struct tt__MetadataConfigurationOptions operations:
/// - soap_default_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions*) reset members to default
/// - int soap_read_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions*) serialize to a sink
/// - tt__MetadataConfigurationOptions* soap_dup_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions* dst, tt__MetadataConfigurationOptions *src) returns deep copy of tt__MetadataConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationOptions(tt__MetadataConfigurationOptions*) deep deletes tt__MetadataConfigurationOptions data members, use only on dst after soap_dup_tt__MetadataConfigurationOptions(NULL, tt__MetadataConfigurationOptions *dst, tt__MetadataConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationOptions
{
/// Element "PTZStatusFilterOptions" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    struct tt__PTZStatusFilterOptions*   PTZStatusFilterOptions         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension.
    struct tt__MetadataConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is a complexType.
///
/// struct tt__MetadataConfigurationOptionsExtension operations:
/// - soap_default_tt__MetadataConfigurationOptionsExtension(soap*, tt__MetadataConfigurationOptionsExtension*) reset members to default
/// - int soap_read_tt__MetadataConfigurationOptionsExtension(soap*, tt__MetadataConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationOptionsExtension(soap*, tt__MetadataConfigurationOptionsExtension*) serialize to a sink
/// - tt__MetadataConfigurationOptionsExtension* soap_dup_tt__MetadataConfigurationOptionsExtension(soap*, tt__MetadataConfigurationOptionsExtension* dst, tt__MetadataConfigurationOptionsExtension *src) returns deep copy of tt__MetadataConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationOptionsExtension(tt__MetadataConfigurationOptionsExtension*) deep deletes tt__MetadataConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__MetadataConfigurationOptionsExtension(NULL, tt__MetadataConfigurationOptionsExtension *dst, tt__MetadataConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationOptionsExtension
{
/// <PRE><BLOCKQUOTE>
///   List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeCompressionType          0;
/// Array char** of size 0..unbounded.
    char**                               CompressionType                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2.
    struct tt__MetadataConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is a complexType.
///
/// struct tt__MetadataConfigurationOptionsExtension2 operations:
/// - soap_default_tt__MetadataConfigurationOptionsExtension2(soap*, tt__MetadataConfigurationOptionsExtension2*) reset members to default
/// - int soap_read_tt__MetadataConfigurationOptionsExtension2(soap*, tt__MetadataConfigurationOptionsExtension2*) deserialize from a source
/// - int soap_write_tt__MetadataConfigurationOptionsExtension2(soap*, tt__MetadataConfigurationOptionsExtension2*) serialize to a sink
/// - tt__MetadataConfigurationOptionsExtension2* soap_dup_tt__MetadataConfigurationOptionsExtension2(soap*, tt__MetadataConfigurationOptionsExtension2* dst, tt__MetadataConfigurationOptionsExtension2 *src) returns deep copy of tt__MetadataConfigurationOptionsExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfigurationOptionsExtension2(tt__MetadataConfigurationOptionsExtension2*) deep deletes tt__MetadataConfigurationOptionsExtension2 data members, use only on dst after soap_dup_tt__MetadataConfigurationOptionsExtension2(NULL, tt__MetadataConfigurationOptionsExtension2 *dst, tt__MetadataConfigurationOptionsExtension2 *src) (use soapcpp2 -Ed)
struct tt__MetadataConfigurationOptionsExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
///
/// struct tt__PTZStatusFilterOptions operations:
/// - soap_default_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions*) reset members to default
/// - int soap_read_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions*) deserialize from a source
/// - int soap_write_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions*) serialize to a sink
/// - tt__PTZStatusFilterOptions* soap_dup_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions* dst, tt__PTZStatusFilterOptions *src) returns deep copy of tt__PTZStatusFilterOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStatusFilterOptions(tt__PTZStatusFilterOptions*) deep deletes tt__PTZStatusFilterOptions data members, use only on dst after soap_dup_tt__PTZStatusFilterOptions(NULL, tt__PTZStatusFilterOptions *dst, tt__PTZStatusFilterOptions *src) (use soapcpp2 -Ed)
struct tt__PTZStatusFilterOptions
{
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream pan or tilt status information.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltStatusSupported" of XSD type xs:boolean.
    enum xsd__boolean                    PanTiltStatusSupported         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom status inforamtion.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomStatusSupported" of XSD type xs:boolean.
    enum xsd__boolean                    ZoomStatusSupported            1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the pan or tilt position.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSupported" of XSD type xs:boolean.
    enum xsd__boolean*                   PanTiltPositionSupported       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom position information.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSupported" of XSD type xs:boolean.
    enum xsd__boolean*                   ZoomPositionSupported          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    struct tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
///
/// struct tt__PTZStatusFilterOptionsExtension operations:
/// - soap_default_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension*) reset members to default
/// - int soap_read_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension*) serialize to a sink
/// - tt__PTZStatusFilterOptionsExtension* soap_dup_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension* dst, tt__PTZStatusFilterOptionsExtension *src) returns deep copy of tt__PTZStatusFilterOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStatusFilterOptionsExtension(tt__PTZStatusFilterOptionsExtension*) deep deletes tt__PTZStatusFilterOptionsExtension data members, use only on dst after soap_dup_tt__PTZStatusFilterOptionsExtension(NULL, tt__PTZStatusFilterOptionsExtension *dst, tt__PTZStatusFilterOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTZStatusFilterOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
///
/// struct tt__VideoOutputExtension operations:
/// - soap_default_tt__VideoOutputExtension(soap*, tt__VideoOutputExtension*) reset members to default
/// - int soap_read_tt__VideoOutputExtension(soap*, tt__VideoOutputExtension*) deserialize from a source
/// - int soap_write_tt__VideoOutputExtension(soap*, tt__VideoOutputExtension*) serialize to a sink
/// - tt__VideoOutputExtension* soap_dup_tt__VideoOutputExtension(soap*, tt__VideoOutputExtension* dst, tt__VideoOutputExtension *src) returns deep copy of tt__VideoOutputExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutputExtension(tt__VideoOutputExtension*) deep deletes tt__VideoOutputExtension data members, use only on dst after soap_dup_tt__VideoOutputExtension(NULL, tt__VideoOutputExtension *dst, tt__VideoOutputExtension *src) (use soapcpp2 -Ed)
struct tt__VideoOutputExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
///
/// struct tt__VideoOutputConfigurationOptions operations:
/// - soap_default_tt__VideoOutputConfigurationOptions(soap*, tt__VideoOutputConfigurationOptions*) reset members to default
/// - int soap_read_tt__VideoOutputConfigurationOptions(soap*, tt__VideoOutputConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoOutputConfigurationOptions(soap*, tt__VideoOutputConfigurationOptions*) serialize to a sink
/// - tt__VideoOutputConfigurationOptions* soap_dup_tt__VideoOutputConfigurationOptions(soap*, tt__VideoOutputConfigurationOptions* dst, tt__VideoOutputConfigurationOptions *src) returns deep copy of tt__VideoOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutputConfigurationOptions(tt__VideoOutputConfigurationOptions*) deep deletes tt__VideoOutputConfigurationOptions data members, use only on dst after soap_dup_tt__VideoOutputConfigurationOptions(NULL, tt__VideoOutputConfigurationOptions *dst, tt__VideoOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoOutputConfigurationOptions
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
///
/// struct tt__VideoDecoderConfigurationOptions operations:
/// - soap_default_tt__VideoDecoderConfigurationOptions(soap*, tt__VideoDecoderConfigurationOptions*) reset members to default
/// - int soap_read_tt__VideoDecoderConfigurationOptions(soap*, tt__VideoDecoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoDecoderConfigurationOptions(soap*, tt__VideoDecoderConfigurationOptions*) serialize to a sink
/// - tt__VideoDecoderConfigurationOptions* soap_dup_tt__VideoDecoderConfigurationOptions(soap*, tt__VideoDecoderConfigurationOptions* dst, tt__VideoDecoderConfigurationOptions *src) returns deep copy of tt__VideoDecoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoDecoderConfigurationOptions(tt__VideoDecoderConfigurationOptions*) deep deletes tt__VideoDecoderConfigurationOptions data members, use only on dst after soap_dup_tt__VideoDecoderConfigurationOptions(NULL, tt__VideoDecoderConfigurationOptions *dst, tt__VideoDecoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "JpegDecOptions" of XSD type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    struct tt__JpegDecOptions*           JpegDecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "H264DecOptions" of XSD type "http://www.onvif.org/ver10/schema":H264DecOptions.
    struct tt__H264DecOptions*           H264DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4DecOptions" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    struct tt__Mpeg4DecOptions*          Mpeg4DecOptions                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    struct tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
///
/// struct tt__H264DecOptions operations:
/// - soap_default_tt__H264DecOptions(soap*, tt__H264DecOptions*) reset members to default
/// - int soap_read_tt__H264DecOptions(soap*, tt__H264DecOptions*) deserialize from a source
/// - int soap_write_tt__H264DecOptions(soap*, tt__H264DecOptions*) serialize to a sink
/// - tt__H264DecOptions* soap_dup_tt__H264DecOptions(soap*, tt__H264DecOptions* dst, tt__H264DecOptions *src) returns deep copy of tt__H264DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264DecOptions(tt__H264DecOptions*) deep deletes tt__H264DecOptions data members, use only on dst after soap_dup_tt__H264DecOptions(NULL, tt__H264DecOptions *dst, tt__H264DecOptions *src) (use soapcpp2 -Ed)
struct tt__H264DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported H264 Profiles (either baseline, main, extended or high)
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeSupportedH264Profiles    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                SupportedH264Profiles          1;
/// <PRE><BLOCKQUOTE>
///   Supported H.264 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
///
/// struct tt__JpegDecOptions operations:
/// - soap_default_tt__JpegDecOptions(soap*, tt__JpegDecOptions*) reset members to default
/// - int soap_read_tt__JpegDecOptions(soap*, tt__JpegDecOptions*) deserialize from a source
/// - int soap_write_tt__JpegDecOptions(soap*, tt__JpegDecOptions*) serialize to a sink
/// - tt__JpegDecOptions* soap_dup_tt__JpegDecOptions(soap*, tt__JpegDecOptions* dst, tt__JpegDecOptions *src) returns deep copy of tt__JpegDecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegDecOptions(tt__JpegDecOptions*) deep deletes tt__JpegDecOptions data members, use only on dst after soap_dup_tt__JpegDecOptions(NULL, tt__JpegDecOptions *dst, tt__JpegDecOptions *src) (use soapcpp2 -Ed)
struct tt__JpegDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Jpeg Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
///
/// struct tt__Mpeg4DecOptions operations:
/// - soap_default_tt__Mpeg4DecOptions(soap*, tt__Mpeg4DecOptions*) reset members to default
/// - int soap_read_tt__Mpeg4DecOptions(soap*, tt__Mpeg4DecOptions*) deserialize from a source
/// - int soap_write_tt__Mpeg4DecOptions(soap*, tt__Mpeg4DecOptions*) serialize to a sink
/// - tt__Mpeg4DecOptions* soap_dup_tt__Mpeg4DecOptions(soap*, tt__Mpeg4DecOptions* dst, tt__Mpeg4DecOptions *src) returns deep copy of tt__Mpeg4DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4DecOptions(tt__Mpeg4DecOptions*) deep deletes tt__Mpeg4DecOptions data members, use only on dst after soap_dup_tt__Mpeg4DecOptions(NULL, tt__Mpeg4DecOptions *dst, tt__Mpeg4DecOptions *src) (use soapcpp2 -Ed)
struct tt__Mpeg4DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Profiles (either SP or ASP)
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeSupportedMpeg4Profiles   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               SupportedMpeg4Profiles         1;
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
///
/// struct tt__VideoDecoderConfigurationOptionsExtension operations:
/// - soap_default_tt__VideoDecoderConfigurationOptionsExtension(soap*, tt__VideoDecoderConfigurationOptionsExtension*) reset members to default
/// - int soap_read_tt__VideoDecoderConfigurationOptionsExtension(soap*, tt__VideoDecoderConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__VideoDecoderConfigurationOptionsExtension(soap*, tt__VideoDecoderConfigurationOptionsExtension*) serialize to a sink
/// - tt__VideoDecoderConfigurationOptionsExtension* soap_dup_tt__VideoDecoderConfigurationOptionsExtension(soap*, tt__VideoDecoderConfigurationOptionsExtension* dst, tt__VideoDecoderConfigurationOptionsExtension *src) returns deep copy of tt__VideoDecoderConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoDecoderConfigurationOptionsExtension(tt__VideoDecoderConfigurationOptionsExtension*) deep deletes tt__VideoDecoderConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__VideoDecoderConfigurationOptionsExtension(NULL, tt__VideoDecoderConfigurationOptionsExtension *dst, tt__VideoDecoderConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__VideoDecoderConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
///
/// struct tt__AudioOutputConfigurationOptions operations:
/// - soap_default_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions*) reset members to default
/// - int soap_read_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions*) serialize to a sink
/// - tt__AudioOutputConfigurationOptions* soap_dup_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions* dst, tt__AudioOutputConfigurationOptions *src) returns deep copy of tt__AudioOutputConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioOutputConfigurationOptions(tt__AudioOutputConfigurationOptions*) deep deletes tt__AudioOutputConfigurationOptions data members, use only on dst after soap_dup_tt__AudioOutputConfigurationOptions(NULL, tt__AudioOutputConfigurationOptions *dst, tt__AudioOutputConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the physical Audio outputs (typically one).
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeOutputTokensAvailable    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  OutputTokensAvailable          1;
/// <PRE><BLOCKQUOTE>
///   An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeSendPrimacyOptions       0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         SendPrimacyOptions             0;
/// <PRE><BLOCKQUOTE>
///   Minimum and maximum level range supported for this Output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevelRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 OutputLevelRange               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
///
/// struct tt__AudioDecoderConfigurationOptions operations:
/// - soap_default_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions*) reset members to default
/// - int soap_read_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions*) serialize to a sink
/// - tt__AudioDecoderConfigurationOptions* soap_dup_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions* dst, tt__AudioDecoderConfigurationOptions *src) returns deep copy of tt__AudioDecoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioDecoderConfigurationOptions(tt__AudioDecoderConfigurationOptions*) deep deletes tt__AudioDecoderConfigurationOptions data members, use only on dst after soap_dup_tt__AudioDecoderConfigurationOptions(NULL, tt__AudioDecoderConfigurationOptions *dst, tt__AudioDecoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__AudioDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode AAC encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "AACDecOptions" of XSD type "http://www.onvif.org/ver10/schema":AACDecOptions.
    struct tt__AACDecOptions*            AACDecOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G711 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G711DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G711DecOptions.
    struct tt__G711DecOptions*           G711DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G726 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G726DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G726DecOptions.
    struct tt__G726DecOptions*           G726DecOptions                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    struct tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
///
/// struct tt__G711DecOptions operations:
/// - soap_default_tt__G711DecOptions(soap*, tt__G711DecOptions*) reset members to default
/// - int soap_read_tt__G711DecOptions(soap*, tt__G711DecOptions*) deserialize from a source
/// - int soap_write_tt__G711DecOptions(soap*, tt__G711DecOptions*) serialize to a sink
/// - tt__G711DecOptions* soap_dup_tt__G711DecOptions(soap*, tt__G711DecOptions* dst, tt__G711DecOptions *src) returns deep copy of tt__G711DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__G711DecOptions(tt__G711DecOptions*) deep deletes tt__G711DecOptions data members, use only on dst after soap_dup_tt__G711DecOptions(NULL, tt__G711DecOptions *dst, tt__G711DecOptions *src) (use soapcpp2 -Ed)
struct tt__G711DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
///
/// struct tt__AACDecOptions operations:
/// - soap_default_tt__AACDecOptions(soap*, tt__AACDecOptions*) reset members to default
/// - int soap_read_tt__AACDecOptions(soap*, tt__AACDecOptions*) deserialize from a source
/// - int soap_write_tt__AACDecOptions(soap*, tt__AACDecOptions*) serialize to a sink
/// - tt__AACDecOptions* soap_dup_tt__AACDecOptions(soap*, tt__AACDecOptions* dst, tt__AACDecOptions *src) returns deep copy of tt__AACDecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AACDecOptions(tt__AACDecOptions*) deep deletes tt__AACDecOptions data members, use only on dst after soap_dup_tt__AACDecOptions(NULL, tt__AACDecOptions *dst, tt__AACDecOptions *src) (use soapcpp2 -Ed)
struct tt__AACDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
///
/// struct tt__G726DecOptions operations:
/// - soap_default_tt__G726DecOptions(soap*, tt__G726DecOptions*) reset members to default
/// - int soap_read_tt__G726DecOptions(soap*, tt__G726DecOptions*) deserialize from a source
/// - int soap_write_tt__G726DecOptions(soap*, tt__G726DecOptions*) serialize to a sink
/// - tt__G726DecOptions* soap_dup_tt__G726DecOptions(soap*, tt__G726DecOptions* dst, tt__G726DecOptions *src) returns deep copy of tt__G726DecOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__G726DecOptions(tt__G726DecOptions*) deep deletes tt__G726DecOptions data members, use only on dst after soap_dup_tt__G726DecOptions(NULL, tt__G726DecOptions *dst, tt__G726DecOptions *src) (use soapcpp2 -Ed)
struct tt__G726DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
///
/// struct tt__AudioDecoderConfigurationOptionsExtension operations:
/// - soap_default_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension*) reset members to default
/// - int soap_read_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension*) serialize to a sink
/// - tt__AudioDecoderConfigurationOptionsExtension* soap_dup_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension* dst, tt__AudioDecoderConfigurationOptionsExtension *src) returns deep copy of tt__AudioDecoderConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioDecoderConfigurationOptionsExtension(tt__AudioDecoderConfigurationOptionsExtension*) deep deletes tt__AudioDecoderConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__AudioDecoderConfigurationOptionsExtension(NULL, tt__AudioDecoderConfigurationOptionsExtension *dst, tt__AudioDecoderConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__AudioDecoderConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
/// struct tt__MulticastConfiguration operations:
/// - soap_default_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration*) reset members to default
/// - int soap_read_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration*) deserialize from a source
/// - int soap_write_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration*) serialize to a sink
/// - tt__MulticastConfiguration* soap_dup_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration* dst, tt__MulticastConfiguration *src) returns deep copy of tt__MulticastConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MulticastConfiguration(tt__MulticastConfiguration*) deep deletes tt__MulticastConfiguration data members, use only on dst after soap_dup_tt__MulticastConfiguration(NULL, tt__MulticastConfiguration *dst, tt__MulticastConfiguration *src) (use soapcpp2 -Ed)
struct tt__MulticastConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPAddress.
    struct tt__IPAddress*                Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
/// Element "Port" of XSD type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
///
/// struct tt__StreamSetup operations:
/// - soap_default_tt__StreamSetup(soap*, tt__StreamSetup*) reset members to default
/// - int soap_read_tt__StreamSetup(soap*, tt__StreamSetup*) deserialize from a source
/// - int soap_write_tt__StreamSetup(soap*, tt__StreamSetup*) serialize to a sink
/// - tt__StreamSetup* soap_dup_tt__StreamSetup(soap*, tt__StreamSetup* dst, tt__StreamSetup *src) returns deep copy of tt__StreamSetup src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__StreamSetup(tt__StreamSetup*) deep deletes tt__StreamSetup data members, use only on dst after soap_dup_tt__StreamSetup(NULL, tt__StreamSetup *dst, tt__StreamSetup *src) (use soapcpp2 -Ed)
struct tt__StreamSetup
{
/// <PRE><BLOCKQUOTE>
///   Defines if a multicast or unicast stream is requested
/// </BLOCKQUOTE></PRE>
/// Element "Stream" of XSD type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element "Transport" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Transport                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Transport is a complexType.
///
/// struct tt__Transport operations:
/// - soap_default_tt__Transport(soap*, tt__Transport*) reset members to default
/// - int soap_read_tt__Transport(soap*, tt__Transport*) deserialize from a source
/// - int soap_write_tt__Transport(soap*, tt__Transport*) serialize to a sink
/// - tt__Transport* soap_dup_tt__Transport(soap*, tt__Transport* dst, tt__Transport *src) returns deep copy of tt__Transport src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Transport(tt__Transport*) deep deletes tt__Transport data members, use only on dst after soap_dup_tt__Transport(NULL, tt__Transport *dst, tt__Transport *src) (use soapcpp2 -Ed)
struct tt__Transport
{
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// </BLOCKQUOTE></PRE>
/// Element "Protocol" of XSD type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to describe further tunnel options. This element is normally not needed
/// </BLOCKQUOTE></PRE>
/// Element "Tunnel" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Tunnel                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
/// struct tt__MediaUri operations:
/// - soap_default_tt__MediaUri(soap*, tt__MediaUri*) reset members to default
/// - int soap_read_tt__MediaUri(soap*, tt__MediaUri*) deserialize from a source
/// - int soap_write_tt__MediaUri(soap*, tt__MediaUri*) serialize to a sink
/// - tt__MediaUri* soap_dup_tt__MediaUri(soap*, tt__MediaUri* dst, tt__MediaUri *src) returns deep copy of tt__MediaUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaUri(tt__MediaUri*) deep deletes tt__MediaUri data members, use only on dst after soap_dup_tt__MediaUri(NULL, tt__MediaUri *dst, tt__MediaUri *src) (use soapcpp2 -Ed)
struct tt__MediaUri
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterConnect" of XSD type xs:boolean.
    enum xsd__boolean                    InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterReboot" of XSD type xs:boolean.
    enum xsd__boolean                    InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
/// Element "Timeout" of XSD type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
/// struct tt__Scope operations:
/// - soap_default_tt__Scope(soap*, tt__Scope*) reset members to default
/// - int soap_read_tt__Scope(soap*, tt__Scope*) deserialize from a source
/// - int soap_write_tt__Scope(soap*, tt__Scope*) serialize to a sink
/// - tt__Scope* soap_dup_tt__Scope(soap*, tt__Scope* dst, tt__Scope *src) returns deep copy of tt__Scope src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Scope(tt__Scope*) deep deletes tt__Scope data members, use only on dst after soap_dup_tt__Scope(NULL, tt__Scope *dst, tt__Scope *src) (use soapcpp2 -Ed)
struct tt__Scope
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeDef" of XSD type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeItem" of XSD type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
/// struct tt__NetworkInterfaceExtension operations:
/// - soap_default_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) reset members to default
/// - int soap_read_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) serialize to a sink
/// - tt__NetworkInterfaceExtension* soap_dup_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension* dst, tt__NetworkInterfaceExtension *src) returns deep copy of tt__NetworkInterfaceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceExtension(tt__NetworkInterfaceExtension*) deep deletes tt__NetworkInterfaceExtension data members, use only on dst after soap_dup_tt__NetworkInterfaceExtension(NULL, tt__NetworkInterfaceExtension *dst, tt__NetworkInterfaceExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
   $int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
   $int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    struct tt__NetworkInterfaceExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
/// struct tt__Dot3Configuration operations:
/// - soap_default_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) reset members to default
/// - int soap_read_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) deserialize from a source
/// - int soap_write_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) serialize to a sink
/// - tt__Dot3Configuration* soap_dup_tt__Dot3Configuration(soap*, tt__Dot3Configuration* dst, tt__Dot3Configuration *src) returns deep copy of tt__Dot3Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot3Configuration(tt__Dot3Configuration*) deep deletes tt__Dot3Configuration data members, use only on dst after soap_dup_tt__Dot3Configuration(NULL, tt__Dot3Configuration *dst, tt__Dot3Configuration *src) (use soapcpp2 -Ed)
struct tt__Dot3Configuration
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
/// struct tt__NetworkInterfaceExtension2 operations:
/// - soap_default_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) reset members to default
/// - int soap_read_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) serialize to a sink
/// - tt__NetworkInterfaceExtension2* soap_dup_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2* dst, tt__NetworkInterfaceExtension2 *src) returns deep copy of tt__NetworkInterfaceExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceExtension2(tt__NetworkInterfaceExtension2*) deep deletes tt__NetworkInterfaceExtension2 data members, use only on dst after soap_dup_tt__NetworkInterfaceExtension2(NULL, tt__NetworkInterfaceExtension2 *dst, tt__NetworkInterfaceExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
/// struct tt__NetworkInterfaceLink operations:
/// - soap_default_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) reset members to default
/// - int soap_read_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) serialize to a sink
/// - tt__NetworkInterfaceLink* soap_dup_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink* dst, tt__NetworkInterfaceLink *src) returns deep copy of tt__NetworkInterfaceLink src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceLink(tt__NetworkInterfaceLink*) deep deletes tt__NetworkInterfaceLink data members, use only on dst after soap_dup_tt__NetworkInterfaceLink(NULL, tt__NetworkInterfaceLink *dst, tt__NetworkInterfaceLink *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceLink
{
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
/// Element "AdminSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
/// Element "OperSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
/// struct tt__NetworkInterfaceConnectionSetting operations:
/// - soap_default_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) reset members to default
/// - int soap_read_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) serialize to a sink
/// - tt__NetworkInterfaceConnectionSetting* soap_dup_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting* dst, tt__NetworkInterfaceConnectionSetting *src) returns deep copy of tt__NetworkInterfaceConnectionSetting src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceConnectionSetting(tt__NetworkInterfaceConnectionSetting*) deep deletes tt__NetworkInterfaceConnectionSetting data members, use only on dst after soap_dup_tt__NetworkInterfaceConnectionSetting(NULL, tt__NetworkInterfaceConnectionSetting *dst, tt__NetworkInterfaceConnectionSetting *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceConnectionSetting
{
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
/// Element "AutoNegotiation" of XSD type xs:boolean.
    enum xsd__boolean                    AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
/// Element "Duplex" of XSD type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
/// struct tt__NetworkInterfaceInfo operations:
/// - soap_default_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) reset members to default
/// - int soap_read_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) serialize to a sink
/// - tt__NetworkInterfaceInfo* soap_dup_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo* dst, tt__NetworkInterfaceInfo *src) returns deep copy of tt__NetworkInterfaceInfo src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceInfo(tt__NetworkInterfaceInfo*) deep deletes tt__NetworkInterfaceInfo data members, use only on dst after soap_dup_tt__NetworkInterfaceInfo(NULL, tt__NetworkInterfaceInfo *dst, tt__NetworkInterfaceInfo *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceInfo
{
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:string.
    char*                                Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
/// Element "HwAddress" of XSD type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
/// struct tt__IPv6NetworkInterface operations:
/// - soap_default_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) reset members to default
/// - int soap_read_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) deserialize from a source
/// - int soap_write_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) serialize to a sink
/// - tt__IPv6NetworkInterface* soap_dup_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface* dst, tt__IPv6NetworkInterface *src) returns deep copy of tt__IPv6NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6NetworkInterface(tt__IPv6NetworkInterface*) deep deletes tt__IPv6NetworkInterface data members, use only on dst after soap_dup_tt__IPv6NetworkInterface(NULL, tt__IPv6NetworkInterface *dst, tt__IPv6NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__IPv6NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    struct tt__IPv6Configuration*        Config                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
/// struct tt__IPv4NetworkInterface operations:
/// - soap_default_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) reset members to default
/// - int soap_read_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) deserialize from a source
/// - int soap_write_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) serialize to a sink
/// - tt__IPv4NetworkInterface* soap_dup_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface* dst, tt__IPv4NetworkInterface *src) returns deep copy of tt__IPv4NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4NetworkInterface(tt__IPv4NetworkInterface*) deep deletes tt__IPv4NetworkInterface data members, use only on dst after soap_dup_tt__IPv4NetworkInterface(NULL, tt__IPv4NetworkInterface *dst, tt__IPv4NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__IPv4NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    struct tt__IPv4Configuration*        Config                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
/// struct tt__IPv4Configuration operations:
/// - soap_default_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) reset members to default
/// - int soap_read_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) deserialize from a source
/// - int soap_write_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) serialize to a sink
/// - tt__IPv4Configuration* soap_dup_tt__IPv4Configuration(soap*, tt__IPv4Configuration* dst, tt__IPv4Configuration *src) returns deep copy of tt__IPv4Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4Configuration(tt__IPv4Configuration*) deep deletes tt__IPv4Configuration data members, use only on dst after soap_dup_tt__IPv4Configuration(NULL, tt__IPv4Configuration *dst, tt__IPv4Configuration *src) (use soapcpp2 -Ed)
struct tt__IPv4Configuration
{
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
/// Element "LinkLocal" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    enum xsd__boolean                    DHCP                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
/// struct tt__IPv6Configuration operations:
/// - soap_default_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) reset members to default
/// - int soap_read_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) deserialize from a source
/// - int soap_write_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) serialize to a sink
/// - tt__IPv6Configuration* soap_dup_tt__IPv6Configuration(soap*, tt__IPv6Configuration* dst, tt__IPv6Configuration *src) returns deep copy of tt__IPv6Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6Configuration(tt__IPv6Configuration*) deep deletes tt__IPv6Configuration data members, use only on dst after soap_dup_tt__IPv6Configuration(NULL, tt__IPv6Configuration *dst, tt__IPv6Configuration *src) (use soapcpp2 -Ed)
struct tt__IPv6Configuration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeLinkLocal                0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      LinkLocal                      0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeFromDHCP                 0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromDHCP                       0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeFromRA                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromRA                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    struct tt__IPv6ConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
/// struct tt__IPv6ConfigurationExtension operations:
/// - soap_default_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) reset members to default
/// - int soap_read_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) serialize to a sink
/// - tt__IPv6ConfigurationExtension* soap_dup_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension* dst, tt__IPv6ConfigurationExtension *src) returns deep copy of tt__IPv6ConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6ConfigurationExtension(tt__IPv6ConfigurationExtension*) deep deletes tt__IPv6ConfigurationExtension data members, use only on dst after soap_dup_tt__IPv6ConfigurationExtension(NULL, tt__IPv6ConfigurationExtension *dst, tt__IPv6ConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__IPv6ConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
/// struct tt__NetworkProtocol operations:
/// - soap_default_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) reset members to default
/// - int soap_read_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) deserialize from a source
/// - int soap_write_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) serialize to a sink
/// - tt__NetworkProtocol* soap_dup_tt__NetworkProtocol(soap*, tt__NetworkProtocol* dst, tt__NetworkProtocol *src) returns deep copy of tt__NetworkProtocol src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkProtocol(tt__NetworkProtocol*) deep deletes tt__NetworkProtocol data members, use only on dst after soap_dup_tt__NetworkProtocol(NULL, tt__NetworkProtocol *dst, tt__NetworkProtocol *src) (use soapcpp2 -Ed)
struct tt__NetworkProtocol
{
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
/// Size of array of int* is 1..unbounded.
   $int                                  __sizePort                     1;
/// Array int* of size 1..unbounded.
    int*                                 Port                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    struct tt__NetworkProtocolExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
/// struct tt__NetworkProtocolExtension operations:
/// - soap_default_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) reset members to default
/// - int soap_read_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) deserialize from a source
/// - int soap_write_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) serialize to a sink
/// - tt__NetworkProtocolExtension* soap_dup_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension* dst, tt__NetworkProtocolExtension *src) returns deep copy of tt__NetworkProtocolExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkProtocolExtension(tt__NetworkProtocolExtension*) deep deletes tt__NetworkProtocolExtension data members, use only on dst after soap_dup_tt__NetworkProtocolExtension(NULL, tt__NetworkProtocolExtension *dst, tt__NetworkProtocolExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkProtocolExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
/// struct tt__NetworkHost operations:
/// - soap_default_tt__NetworkHost(soap*, tt__NetworkHost*) reset members to default
/// - int soap_read_tt__NetworkHost(soap*, tt__NetworkHost*) deserialize from a source
/// - int soap_write_tt__NetworkHost(soap*, tt__NetworkHost*) serialize to a sink
/// - tt__NetworkHost* soap_dup_tt__NetworkHost(soap*, tt__NetworkHost* dst, tt__NetworkHost *src) returns deep copy of tt__NetworkHost src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkHost(tt__NetworkHost*) deep deletes tt__NetworkHost data members, use only on dst after soap_dup_tt__NetworkHost(NULL, tt__NetworkHost *dst, tt__NetworkHost *src) (use soapcpp2 -Ed)
struct tt__NetworkHost
{
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "DNSname" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          DNSname                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    struct tt__NetworkHostExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
/// struct tt__NetworkHostExtension operations:
/// - soap_default_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) reset members to default
/// - int soap_read_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) deserialize from a source
/// - int soap_write_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) serialize to a sink
/// - tt__NetworkHostExtension* soap_dup_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension* dst, tt__NetworkHostExtension *src) returns deep copy of tt__NetworkHostExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkHostExtension(tt__NetworkHostExtension*) deep deletes tt__NetworkHostExtension data members, use only on dst after soap_dup_tt__NetworkHostExtension(NULL, tt__NetworkHostExtension *dst, tt__NetworkHostExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkHostExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
/// struct tt__IPAddress operations:
/// - soap_default_tt__IPAddress(soap*, tt__IPAddress*) reset members to default
/// - int soap_read_tt__IPAddress(soap*, tt__IPAddress*) deserialize from a source
/// - int soap_write_tt__IPAddress(soap*, tt__IPAddress*) serialize to a sink
/// - tt__IPAddress* soap_dup_tt__IPAddress(soap*, tt__IPAddress* dst, tt__IPAddress *src) returns deep copy of tt__IPAddress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddress(tt__IPAddress*) deep deletes tt__IPAddress data members, use only on dst after soap_dup_tt__IPAddress(NULL, tt__IPAddress *dst, tt__IPAddress *src) (use soapcpp2 -Ed)
struct tt__IPAddress
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
/// struct tt__PrefixedIPv4Address operations:
/// - soap_default_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) reset members to default
/// - int soap_read_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) deserialize from a source
/// - int soap_write_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) serialize to a sink
/// - tt__PrefixedIPv4Address* soap_dup_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address* dst, tt__PrefixedIPv4Address *src) returns deep copy of tt__PrefixedIPv4Address src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PrefixedIPv4Address(tt__PrefixedIPv4Address*) deep deletes tt__PrefixedIPv4Address data members, use only on dst after soap_dup_tt__PrefixedIPv4Address(NULL, tt__PrefixedIPv4Address *dst, tt__PrefixedIPv4Address *src) (use soapcpp2 -Ed)
struct tt__PrefixedIPv4Address
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
/// struct tt__PrefixedIPv6Address operations:
/// - soap_default_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) reset members to default
/// - int soap_read_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) deserialize from a source
/// - int soap_write_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) serialize to a sink
/// - tt__PrefixedIPv6Address* soap_dup_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address* dst, tt__PrefixedIPv6Address *src) returns deep copy of tt__PrefixedIPv6Address src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PrefixedIPv6Address(tt__PrefixedIPv6Address*) deep deletes tt__PrefixedIPv6Address data members, use only on dst after soap_dup_tt__PrefixedIPv6Address(NULL, tt__PrefixedIPv6Address *dst, tt__PrefixedIPv6Address *src) (use soapcpp2 -Ed)
struct tt__PrefixedIPv6Address
{
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
/// struct tt__HostnameInformation operations:
/// - soap_default_tt__HostnameInformation(soap*, tt__HostnameInformation*) reset members to default
/// - int soap_read_tt__HostnameInformation(soap*, tt__HostnameInformation*) deserialize from a source
/// - int soap_write_tt__HostnameInformation(soap*, tt__HostnameInformation*) serialize to a sink
/// - tt__HostnameInformation* soap_dup_tt__HostnameInformation(soap*, tt__HostnameInformation* dst, tt__HostnameInformation *src) returns deep copy of tt__HostnameInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__HostnameInformation(tt__HostnameInformation*) deep deletes tt__HostnameInformation data members, use only on dst after soap_dup_tt__HostnameInformation(NULL, tt__HostnameInformation *dst, tt__HostnameInformation *src) (use soapcpp2 -Ed)
struct tt__HostnameInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:token.
    xsd__token                           Name                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    struct tt__HostnameInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
/// struct tt__HostnameInformationExtension operations:
/// - soap_default_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) reset members to default
/// - int soap_read_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) deserialize from a source
/// - int soap_write_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) serialize to a sink
/// - tt__HostnameInformationExtension* soap_dup_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension* dst, tt__HostnameInformationExtension *src) returns deep copy of tt__HostnameInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__HostnameInformationExtension(tt__HostnameInformationExtension*) deep deletes tt__HostnameInformationExtension data members, use only on dst after soap_dup_tt__HostnameInformationExtension(NULL, tt__HostnameInformationExtension *dst, tt__HostnameInformationExtension *src) (use soapcpp2 -Ed)
struct tt__HostnameInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
/// struct tt__DNSInformation operations:
/// - soap_default_tt__DNSInformation(soap*, tt__DNSInformation*) reset members to default
/// - int soap_read_tt__DNSInformation(soap*, tt__DNSInformation*) deserialize from a source
/// - int soap_write_tt__DNSInformation(soap*, tt__DNSInformation*) serialize to a sink
/// - tt__DNSInformation* soap_dup_tt__DNSInformation(soap*, tt__DNSInformation* dst, tt__DNSInformation *src) returns deep copy of tt__DNSInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DNSInformation(tt__DNSInformation*) deep deletes tt__DNSInformation data members, use only on dst after soap_dup_tt__DNSInformation(NULL, tt__DNSInformation *dst, tt__DNSInformation *src) (use soapcpp2 -Ed)
struct tt__DNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSFromDHCP              0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    struct tt__DNSInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
/// struct tt__DNSInformationExtension operations:
/// - soap_default_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) reset members to default
/// - int soap_read_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) deserialize from a source
/// - int soap_write_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) serialize to a sink
/// - tt__DNSInformationExtension* soap_dup_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension* dst, tt__DNSInformationExtension *src) returns deep copy of tt__DNSInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DNSInformationExtension(tt__DNSInformationExtension*) deep deletes tt__DNSInformationExtension data members, use only on dst after soap_dup_tt__DNSInformationExtension(NULL, tt__DNSInformationExtension *dst, tt__DNSInformationExtension *src) (use soapcpp2 -Ed)
struct tt__DNSInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
/// struct tt__NTPInformation operations:
/// - soap_default_tt__NTPInformation(soap*, tt__NTPInformation*) reset members to default
/// - int soap_read_tt__NTPInformation(soap*, tt__NTPInformation*) deserialize from a source
/// - int soap_write_tt__NTPInformation(soap*, tt__NTPInformation*) serialize to a sink
/// - tt__NTPInformation* soap_dup_tt__NTPInformation(soap*, tt__NTPInformation* dst, tt__NTPInformation *src) returns deep copy of tt__NTPInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NTPInformation(tt__NTPInformation*) deep deletes tt__NTPInformation data members, use only on dst after soap_dup_tt__NTPInformation(NULL, tt__NTPInformation *dst, tt__NTPInformation *src) (use soapcpp2 -Ed)
struct tt__NTPInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPFromDHCP              0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    struct tt__NTPInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
/// struct tt__NTPInformationExtension operations:
/// - soap_default_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) reset members to default
/// - int soap_read_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) deserialize from a source
/// - int soap_write_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) serialize to a sink
/// - tt__NTPInformationExtension* soap_dup_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension* dst, tt__NTPInformationExtension *src) returns deep copy of tt__NTPInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NTPInformationExtension(tt__NTPInformationExtension*) deep deletes tt__NTPInformationExtension data members, use only on dst after soap_dup_tt__NTPInformationExtension(NULL, tt__NTPInformationExtension *dst, tt__NTPInformationExtension *src) (use soapcpp2 -Ed)
struct tt__NTPInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
/// struct tt__DynamicDNSInformation operations:
/// - soap_default_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) reset members to default
/// - int soap_read_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) deserialize from a source
/// - int soap_write_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) serialize to a sink
/// - tt__DynamicDNSInformation* soap_dup_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation* dst, tt__DynamicDNSInformation *src) returns deep copy of tt__DynamicDNSInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DynamicDNSInformation(tt__DynamicDNSInformation*) deep deletes tt__DynamicDNSInformation data members, use only on dst after soap_dup_tt__DynamicDNSInformation(NULL, tt__DynamicDNSInformation *dst, tt__DynamicDNSInformation *src) (use soapcpp2 -Ed)
struct tt__DynamicDNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    struct tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
/// struct tt__DynamicDNSInformationExtension operations:
/// - soap_default_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) reset members to default
/// - int soap_read_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) deserialize from a source
/// - int soap_write_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) serialize to a sink
/// - tt__DynamicDNSInformationExtension* soap_dup_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension* dst, tt__DynamicDNSInformationExtension *src) returns deep copy of tt__DynamicDNSInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DynamicDNSInformationExtension(tt__DynamicDNSInformationExtension*) deep deletes tt__DynamicDNSInformationExtension data members, use only on dst after soap_dup_tt__DynamicDNSInformationExtension(NULL, tt__DynamicDNSInformationExtension *dst, tt__DynamicDNSInformationExtension *src) (use soapcpp2 -Ed)
struct tt__DynamicDNSInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
/// struct tt__NetworkInterfaceSetConfiguration operations:
/// - soap_default_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) reset members to default
/// - int soap_read_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__NetworkInterfaceSetConfiguration* soap_dup_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration* dst, tt__NetworkInterfaceSetConfiguration *src) returns deep copy of tt__NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfiguration(tt__NetworkInterfaceSetConfiguration*) deep deletes tt__NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfiguration(NULL, tt__NetworkInterfaceSetConfiguration *dst, tt__NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    struct tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    struct tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    struct tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
/// struct tt__NetworkInterfaceSetConfigurationExtension operations:
/// - soap_default_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) reset members to default
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) serialize to a sink
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_dup_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension* dst, tt__NetworkInterfaceSetConfigurationExtension *src) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfigurationExtension(tt__NetworkInterfaceSetConfigurationExtension*) deep deletes tt__NetworkInterfaceSetConfigurationExtension data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfigurationExtension(NULL, tt__NetworkInterfaceSetConfigurationExtension *dst, tt__NetworkInterfaceSetConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
   $int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
   $int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    struct tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
/// struct tt__IPv6NetworkInterfaceSetConfiguration operations:
/// - soap_default_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) reset members to default
/// - int soap_read_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_dup_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration* dst, tt__IPv6NetworkInterfaceSetConfiguration *src) returns deep copy of tt__IPv6NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6NetworkInterfaceSetConfiguration(tt__IPv6NetworkInterfaceSetConfiguration*) deep deletes tt__IPv6NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__IPv6NetworkInterfaceSetConfiguration(NULL, tt__IPv6NetworkInterfaceSetConfiguration *dst, tt__IPv6NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__IPv6NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
/// struct tt__IPv4NetworkInterfaceSetConfiguration operations:
/// - soap_default_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) reset members to default
/// - int soap_read_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_dup_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration* dst, tt__IPv4NetworkInterfaceSetConfiguration *src) returns deep copy of tt__IPv4NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4NetworkInterfaceSetConfiguration(tt__IPv4NetworkInterfaceSetConfiguration*) deep deletes tt__IPv4NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__IPv4NetworkInterfaceSetConfiguration(NULL, tt__IPv4NetworkInterfaceSetConfiguration *dst, tt__IPv4NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__IPv4NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    enum xsd__boolean*                   DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
/// struct tt__NetworkGateway operations:
/// - soap_default_tt__NetworkGateway(soap*, tt__NetworkGateway*) reset members to default
/// - int soap_read_tt__NetworkGateway(soap*, tt__NetworkGateway*) deserialize from a source
/// - int soap_write_tt__NetworkGateway(soap*, tt__NetworkGateway*) serialize to a sink
/// - tt__NetworkGateway* soap_dup_tt__NetworkGateway(soap*, tt__NetworkGateway* dst, tt__NetworkGateway *src) returns deep copy of tt__NetworkGateway src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkGateway(tt__NetworkGateway*) deep deletes tt__NetworkGateway data members, use only on dst after soap_dup_tt__NetworkGateway(NULL, tt__NetworkGateway *dst, tt__NetworkGateway *src) (use soapcpp2 -Ed)
struct tt__NetworkGateway
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
/// struct tt__NetworkZeroConfiguration operations:
/// - soap_default_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) reset members to default
/// - int soap_read_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) serialize to a sink
/// - tt__NetworkZeroConfiguration* soap_dup_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration* dst, tt__NetworkZeroConfiguration *src) returns deep copy of tt__NetworkZeroConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfiguration(tt__NetworkZeroConfiguration*) deep deletes tt__NetworkZeroConfiguration data members, use only on dst after soap_dup_tt__NetworkZeroConfiguration(NULL, tt__NetworkZeroConfiguration *dst, tt__NetworkZeroConfiguration *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeAddresses                0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     Addresses                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    struct tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
/// struct tt__NetworkZeroConfigurationExtension operations:
/// - soap_default_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) reset members to default
/// - int soap_read_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) serialize to a sink
/// - tt__NetworkZeroConfigurationExtension* soap_dup_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension* dst, tt__NetworkZeroConfigurationExtension *src) returns deep copy of tt__NetworkZeroConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfigurationExtension(tt__NetworkZeroConfigurationExtension*) deep deletes tt__NetworkZeroConfigurationExtension data members, use only on dst after soap_dup_tt__NetworkZeroConfigurationExtension(NULL, tt__NetworkZeroConfigurationExtension *dst, tt__NetworkZeroConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkZeroConfiguration* is 0..unbounded.
   $int                                  __sizeAdditional               0;
/// Array struct tt__NetworkZeroConfiguration* of size 0..unbounded.
    struct tt__NetworkZeroConfiguration*  Additional                     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    struct tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
/// struct tt__NetworkZeroConfigurationExtension2 operations:
/// - soap_default_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) reset members to default
/// - int soap_read_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) serialize to a sink
/// - tt__NetworkZeroConfigurationExtension2* soap_dup_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2* dst, tt__NetworkZeroConfigurationExtension2 *src) returns deep copy of tt__NetworkZeroConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfigurationExtension2(tt__NetworkZeroConfigurationExtension2*) deep deletes tt__NetworkZeroConfigurationExtension2 data members, use only on dst after soap_dup_tt__NetworkZeroConfigurationExtension2(NULL, tt__NetworkZeroConfigurationExtension2 *dst, tt__NetworkZeroConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
/// struct tt__IPAddressFilter operations:
/// - soap_default_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) reset members to default
/// - int soap_read_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) deserialize from a source
/// - int soap_write_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) serialize to a sink
/// - tt__IPAddressFilter* soap_dup_tt__IPAddressFilter(soap*, tt__IPAddressFilter* dst, tt__IPAddressFilter *src) returns deep copy of tt__IPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddressFilter(tt__IPAddressFilter*) deep deletes tt__IPAddressFilter data members, use only on dst after soap_dup_tt__IPAddressFilter(NULL, tt__IPAddressFilter *dst, tt__IPAddressFilter *src) (use soapcpp2 -Ed)
struct tt__IPAddressFilter
{
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      IPv4Address                    0;
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      IPv6Address                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    struct tt__IPAddressFilterExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
/// struct tt__IPAddressFilterExtension operations:
/// - soap_default_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) reset members to default
/// - int soap_read_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) deserialize from a source
/// - int soap_write_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) serialize to a sink
/// - tt__IPAddressFilterExtension* soap_dup_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension* dst, tt__IPAddressFilterExtension *src) returns deep copy of tt__IPAddressFilterExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddressFilterExtension(tt__IPAddressFilterExtension*) deep deletes tt__IPAddressFilterExtension data members, use only on dst after soap_dup_tt__IPAddressFilterExtension(NULL, tt__IPAddressFilterExtension *dst, tt__IPAddressFilterExtension *src) (use soapcpp2 -Ed)
struct tt__IPAddressFilterExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
/// struct tt__Dot11Configuration operations:
/// - soap_default_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) reset members to default
/// - int soap_read_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) deserialize from a source
/// - int soap_write_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) serialize to a sink
/// - tt__Dot11Configuration* soap_dup_tt__Dot11Configuration(soap*, tt__Dot11Configuration* dst, tt__Dot11Configuration *src) returns deep copy of tt__Dot11Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Configuration(tt__Dot11Configuration*) deep deletes tt__Dot11Configuration data members, use only on dst after soap_dup_tt__Dot11Configuration(NULL, tt__Dot11Configuration *dst, tt__Dot11Configuration *src) (use soapcpp2 -Ed)
struct tt__Dot11Configuration
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    struct tt__Dot11SecurityConfiguration*  Security                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
/// struct tt__Dot11SecurityConfiguration operations:
/// - soap_default_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) reset members to default
/// - int soap_read_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) deserialize from a source
/// - int soap_write_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) serialize to a sink
/// - tt__Dot11SecurityConfiguration* soap_dup_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration* dst, tt__Dot11SecurityConfiguration *src) returns deep copy of tt__Dot11SecurityConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11SecurityConfiguration(tt__Dot11SecurityConfiguration*) deep deletes tt__Dot11SecurityConfiguration data members, use only on dst after soap_dup_tt__Dot11SecurityConfiguration(NULL, tt__Dot11SecurityConfiguration *dst, tt__Dot11SecurityConfiguration *src) (use soapcpp2 -Ed)
struct tt__Dot11SecurityConfiguration
{
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    struct tt__Dot11PSKSet*              PSK                            0;	///< Optional element.
/// Element "Dot1X" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1X                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    struct tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
/// struct tt__Dot11SecurityConfigurationExtension operations:
/// - soap_default_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) reset members to default
/// - int soap_read_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) serialize to a sink
/// - tt__Dot11SecurityConfigurationExtension* soap_dup_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension* dst, tt__Dot11SecurityConfigurationExtension *src) returns deep copy of tt__Dot11SecurityConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11SecurityConfigurationExtension(tt__Dot11SecurityConfigurationExtension*) deep deletes tt__Dot11SecurityConfigurationExtension data members, use only on dst after soap_dup_tt__Dot11SecurityConfigurationExtension(NULL, tt__Dot11SecurityConfigurationExtension *dst, tt__Dot11SecurityConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11SecurityConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
/// struct tt__Dot11PSKSet operations:
/// - soap_default_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) reset members to default
/// - int soap_read_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) deserialize from a source
/// - int soap_write_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) serialize to a sink
/// - tt__Dot11PSKSet* soap_dup_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet* dst, tt__Dot11PSKSet *src) returns deep copy of tt__Dot11PSKSet src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11PSKSet(tt__Dot11PSKSet*) deep deletes tt__Dot11PSKSet data members, use only on dst after soap_dup_tt__Dot11PSKSet(NULL, tt__Dot11PSKSet *dst, tt__Dot11PSKSet *src) (use soapcpp2 -Ed)
struct tt__Dot11PSKSet
{
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK                         Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
/// Element "Passphrase" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase               Passphrase                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    struct tt__Dot11PSKSetExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
/// struct tt__Dot11PSKSetExtension operations:
/// - soap_default_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) reset members to default
/// - int soap_read_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) deserialize from a source
/// - int soap_write_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) serialize to a sink
/// - tt__Dot11PSKSetExtension* soap_dup_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension* dst, tt__Dot11PSKSetExtension *src) returns deep copy of tt__Dot11PSKSetExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11PSKSetExtension(tt__Dot11PSKSetExtension*) deep deletes tt__Dot11PSKSetExtension data members, use only on dst after soap_dup_tt__Dot11PSKSetExtension(NULL, tt__Dot11PSKSetExtension *dst, tt__Dot11PSKSetExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11PSKSetExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
/// struct tt__NetworkInterfaceSetConfigurationExtension2 operations:
/// - soap_default_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) reset members to default
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) serialize to a sink
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_dup_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2* dst, tt__NetworkInterfaceSetConfigurationExtension2 *src) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfigurationExtension2(tt__NetworkInterfaceSetConfigurationExtension2*) deep deletes tt__NetworkInterfaceSetConfigurationExtension2 data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfigurationExtension2(NULL, tt__NetworkInterfaceSetConfigurationExtension2 *dst, tt__NetworkInterfaceSetConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
/// struct tt__Dot11Capabilities operations:
/// - soap_default_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) reset members to default
/// - int soap_read_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) deserialize from a source
/// - int soap_write_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) serialize to a sink
/// - tt__Dot11Capabilities* soap_dup_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities* dst, tt__Dot11Capabilities *src) returns deep copy of tt__Dot11Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Capabilities(tt__Dot11Capabilities*) deep deletes tt__Dot11Capabilities data members, use only on dst after soap_dup_tt__Dot11Capabilities(NULL, tt__Dot11Capabilities *dst, tt__Dot11Capabilities *src) (use soapcpp2 -Ed)
struct tt__Dot11Capabilities
{
/// Element "TKIP" of XSD type xs:boolean.
    enum xsd__boolean                    TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of XSD type xs:boolean.
    enum xsd__boolean                    ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of XSD type xs:boolean.
    enum xsd__boolean                    MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of XSD type xs:boolean.
    enum xsd__boolean                    AdHocStationMode               1;	///< Required element.
/// Element "WEP" of XSD type xs:boolean.
    enum xsd__boolean                    WEP                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
/// struct tt__Dot11Status operations:
/// - soap_default_tt__Dot11Status(soap*, tt__Dot11Status*) reset members to default
/// - int soap_read_tt__Dot11Status(soap*, tt__Dot11Status*) deserialize from a source
/// - int soap_write_tt__Dot11Status(soap*, tt__Dot11Status*) serialize to a sink
/// - tt__Dot11Status* soap_dup_tt__Dot11Status(soap*, tt__Dot11Status* dst, tt__Dot11Status *src) returns deep copy of tt__Dot11Status src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Status(tt__Dot11Status*) deep deletes tt__Dot11Status data members, use only on dst after soap_dup_tt__Dot11Status(NULL, tt__Dot11Status *dst, tt__Dot11Status *src) (use soapcpp2 -Ed)
struct tt__Dot11Status
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// Element "PairCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
/// struct tt__Dot11AvailableNetworks operations:
/// - soap_default_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) reset members to default
/// - int soap_read_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) deserialize from a source
/// - int soap_write_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) serialize to a sink
/// - tt__Dot11AvailableNetworks* soap_dup_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks* dst, tt__Dot11AvailableNetworks *src) returns deep copy of tt__Dot11AvailableNetworks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11AvailableNetworks(tt__Dot11AvailableNetworks*) deep deletes tt__Dot11AvailableNetworks data members, use only on dst after soap_dup_tt__Dot11AvailableNetworks(NULL, tt__Dot11AvailableNetworks *dst, tt__Dot11AvailableNetworks *src) (use soapcpp2 -Ed)
struct tt__Dot11AvailableNetworks
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Dot11AuthAndMangementSuite* is 0..unbounded.
   $int                                  __sizeAuthAndMangementSuite    0;
/// Array enum tt__Dot11AuthAndMangementSuite* of size 0..unbounded.
    enum tt__Dot11AuthAndMangementSuite*  AuthAndMangementSuite          0;
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
   $int                                  __sizePairCipher               0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                PairCipher                     0;
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
   $int                                  __sizeGroupCipher              0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                GroupCipher                    0;
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    struct tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
/// struct tt__Dot11AvailableNetworksExtension operations:
/// - soap_default_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) reset members to default
/// - int soap_read_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) deserialize from a source
/// - int soap_write_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) serialize to a sink
/// - tt__Dot11AvailableNetworksExtension* soap_dup_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension* dst, tt__Dot11AvailableNetworksExtension *src) returns deep copy of tt__Dot11AvailableNetworksExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11AvailableNetworksExtension(tt__Dot11AvailableNetworksExtension*) deep deletes tt__Dot11AvailableNetworksExtension data members, use only on dst after soap_dup_tt__Dot11AvailableNetworksExtension(NULL, tt__Dot11AvailableNetworksExtension *dst, tt__Dot11AvailableNetworksExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11AvailableNetworksExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
/// struct tt__Capabilities operations:
/// - soap_default_tt__Capabilities(soap*, tt__Capabilities*) reset members to default
/// - int soap_read_tt__Capabilities(soap*, tt__Capabilities*) deserialize from a source
/// - int soap_write_tt__Capabilities(soap*, tt__Capabilities*) serialize to a sink
/// - tt__Capabilities* soap_dup_tt__Capabilities(soap*, tt__Capabilities* dst, tt__Capabilities *src) returns deep copy of tt__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Capabilities(tt__Capabilities*) deep deletes tt__Capabilities data members, use only on dst after soap_dup_tt__Capabilities(NULL, tt__Capabilities *dst, tt__Capabilities *src) (use soapcpp2 -Ed)
struct tt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    struct tt__AnalyticsCapabilities*    Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Device" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    struct tt__DeviceCapabilities*       Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventCapabilities.
    struct tt__EventCapabilities*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    struct tt__ImagingCapabilities*      Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Media" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    struct tt__MediaCapabilities*        Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    struct tt__PTZCapabilities*          PTZ                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    struct tt__CapabilitiesExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
/// struct tt__CapabilitiesExtension operations:
/// - soap_default_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) reset members to default
/// - int soap_read_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) serialize to a sink
/// - tt__CapabilitiesExtension* soap_dup_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension* dst, tt__CapabilitiesExtension *src) returns deep copy of tt__CapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CapabilitiesExtension(tt__CapabilitiesExtension*) deep deletes tt__CapabilitiesExtension data members, use only on dst after soap_dup_tt__CapabilitiesExtension(NULL, tt__CapabilitiesExtension *dst, tt__CapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__CapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "DeviceIO" of XSD type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    struct tt__DeviceIOCapabilities*     DeviceIO                       0;	///< Optional element.
/// Element "Display" of XSD type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    struct tt__DisplayCapabilities*      Display                        0;	///< Optional element.
/// Element "Recording" of XSD type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    struct tt__RecordingCapabilities*    Recording                      0;	///< Optional element.
/// Element "Search" of XSD type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    struct tt__SearchCapabilities*       Search                         0;	///< Optional element.
/// Element "Replay" of XSD type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    struct tt__ReplayCapabilities*       Replay                         0;	///< Optional element.
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    struct tt__ReceiverCapabilities*     Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    struct tt__AnalyticsDeviceCapabilities*  AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    struct tt__CapabilitiesExtension2*   Extensions                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
/// struct tt__CapabilitiesExtension2 operations:
/// - soap_default_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) reset members to default
/// - int soap_read_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) serialize to a sink
/// - tt__CapabilitiesExtension2* soap_dup_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2* dst, tt__CapabilitiesExtension2 *src) returns deep copy of tt__CapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CapabilitiesExtension2(tt__CapabilitiesExtension2*) deep deletes tt__CapabilitiesExtension2 data members, use only on dst after soap_dup_tt__CapabilitiesExtension2(NULL, tt__CapabilitiesExtension2 *dst, tt__CapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__CapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
/// struct tt__AnalyticsCapabilities operations:
/// - soap_default_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) reset members to default
/// - int soap_read_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) deserialize from a source
/// - int soap_write_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) serialize to a sink
/// - tt__AnalyticsCapabilities* soap_dup_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities* dst, tt__AnalyticsCapabilities *src) returns deep copy of tt__AnalyticsCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsCapabilities(tt__AnalyticsCapabilities*) deep deletes tt__AnalyticsCapabilities data members, use only on dst after soap_dup_tt__AnalyticsCapabilities(NULL, tt__AnalyticsCapabilities *dst, tt__AnalyticsCapabilities *src) (use soapcpp2 -Ed)
struct tt__AnalyticsCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    enum xsd__boolean                    RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsModuleSupport" of XSD type xs:boolean.
    enum xsd__boolean                    AnalyticsModuleSupport         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
/// struct tt__DeviceCapabilities operations:
/// - soap_default_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) reset members to default
/// - int soap_read_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) deserialize from a source
/// - int soap_write_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) serialize to a sink
/// - tt__DeviceCapabilities* soap_dup_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities* dst, tt__DeviceCapabilities *src) returns deep copy of tt__DeviceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceCapabilities(tt__DeviceCapabilities*) deep deletes tt__DeviceCapabilities data members, use only on dst after soap_dup_tt__DeviceCapabilities(NULL, tt__DeviceCapabilities *dst, tt__DeviceCapabilities *src) (use soapcpp2 -Ed)
struct tt__DeviceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Network" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    struct tt__NetworkCapabilities*      Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "System" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    struct tt__SystemCapabilities*       System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "IO" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilities.
    struct tt__IOCapabilities*           IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    struct tt__SecurityCapabilities*     Security                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    struct tt__DeviceCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
/// struct tt__DeviceCapabilitiesExtension operations:
/// - soap_default_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) reset members to default
/// - int soap_read_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) serialize to a sink
/// - tt__DeviceCapabilitiesExtension* soap_dup_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension* dst, tt__DeviceCapabilitiesExtension *src) returns deep copy of tt__DeviceCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceCapabilitiesExtension(tt__DeviceCapabilitiesExtension*) deep deletes tt__DeviceCapabilitiesExtension data members, use only on dst after soap_dup_tt__DeviceCapabilitiesExtension(NULL, tt__DeviceCapabilitiesExtension *dst, tt__DeviceCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__DeviceCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
/// struct tt__EventCapabilities operations:
/// - soap_default_tt__EventCapabilities(soap*, tt__EventCapabilities*) reset members to default
/// - int soap_read_tt__EventCapabilities(soap*, tt__EventCapabilities*) deserialize from a source
/// - int soap_write_tt__EventCapabilities(soap*, tt__EventCapabilities*) serialize to a sink
/// - tt__EventCapabilities* soap_dup_tt__EventCapabilities(soap*, tt__EventCapabilities* dst, tt__EventCapabilities *src) returns deep copy of tt__EventCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventCapabilities(tt__EventCapabilities*) deep deletes tt__EventCapabilities data members, use only on dst after soap_dup_tt__EventCapabilities(NULL, tt__EventCapabilities *dst, tt__EventCapabilities *src) (use soapcpp2 -Ed)
struct tt__EventCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSSubscriptionPolicySupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPullPointSupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
/// struct tt__IOCapabilities operations:
/// - soap_default_tt__IOCapabilities(soap*, tt__IOCapabilities*) reset members to default
/// - int soap_read_tt__IOCapabilities(soap*, tt__IOCapabilities*) deserialize from a source
/// - int soap_write_tt__IOCapabilities(soap*, tt__IOCapabilities*) serialize to a sink
/// - tt__IOCapabilities* soap_dup_tt__IOCapabilities(soap*, tt__IOCapabilities* dst, tt__IOCapabilities *src) returns deep copy of tt__IOCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilities(tt__IOCapabilities*) deep deletes tt__IOCapabilities data members, use only on dst after soap_dup_tt__IOCapabilities(NULL, tt__IOCapabilities *dst, tt__IOCapabilities *src) (use soapcpp2 -Ed)
struct tt__IOCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
/// Element "InputConnectors" of XSD type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
/// Element "RelayOutputs" of XSD type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    struct tt__IOCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
/// struct tt__IOCapabilitiesExtension operations:
/// - soap_default_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) reset members to default
/// - int soap_read_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) serialize to a sink
/// - tt__IOCapabilitiesExtension* soap_dup_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension* dst, tt__IOCapabilitiesExtension *src) returns deep copy of tt__IOCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilitiesExtension(tt__IOCapabilitiesExtension*) deep deletes tt__IOCapabilitiesExtension data members, use only on dst after soap_dup_tt__IOCapabilitiesExtension(NULL, tt__IOCapabilitiesExtension *dst, tt__IOCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__IOCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Auxiliary" of XSD type xs:boolean.
    enum xsd__boolean*                   Auxiliary                      0;	///< Optional element.
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
   $int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    struct tt__IOCapabilitiesExtension2*  Extension                      1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
/// struct tt__IOCapabilitiesExtension2 operations:
/// - soap_default_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) reset members to default
/// - int soap_read_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) serialize to a sink
/// - tt__IOCapabilitiesExtension2* soap_dup_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2* dst, tt__IOCapabilitiesExtension2 *src) returns deep copy of tt__IOCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilitiesExtension2(tt__IOCapabilitiesExtension2*) deep deletes tt__IOCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__IOCapabilitiesExtension2(NULL, tt__IOCapabilitiesExtension2 *dst, tt__IOCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__IOCapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
/// struct tt__MediaCapabilities operations:
/// - soap_default_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) reset members to default
/// - int soap_read_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) deserialize from a source
/// - int soap_write_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) serialize to a sink
/// - tt__MediaCapabilities* soap_dup_tt__MediaCapabilities(soap*, tt__MediaCapabilities* dst, tt__MediaCapabilities *src) returns deep copy of tt__MediaCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilities(tt__MediaCapabilities*) deep deletes tt__MediaCapabilities data members, use only on dst after soap_dup_tt__MediaCapabilities(NULL, tt__MediaCapabilities *dst, tt__MediaCapabilities *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    struct tt__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    struct tt__MediaCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
/// struct tt__MediaCapabilitiesExtension operations:
/// - soap_default_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) reset members to default
/// - int soap_read_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) serialize to a sink
/// - tt__MediaCapabilitiesExtension* soap_dup_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension* dst, tt__MediaCapabilitiesExtension *src) returns deep copy of tt__MediaCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilitiesExtension(tt__MediaCapabilitiesExtension*) deep deletes tt__MediaCapabilitiesExtension data members, use only on dst after soap_dup_tt__MediaCapabilitiesExtension(NULL, tt__MediaCapabilitiesExtension *dst, tt__MediaCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilitiesExtension
{
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    struct tt__ProfileCapabilities*      ProfileCapabilities            1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
/// struct tt__RealTimeStreamingCapabilities operations:
/// - soap_default_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) reset members to default
/// - int soap_read_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) deserialize from a source
/// - int soap_write_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) serialize to a sink
/// - tt__RealTimeStreamingCapabilities* soap_dup_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities* dst, tt__RealTimeStreamingCapabilities *src) returns deep copy of tt__RealTimeStreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RealTimeStreamingCapabilities(tt__RealTimeStreamingCapabilities*) deep deletes tt__RealTimeStreamingCapabilities data members, use only on dst after soap_dup_tt__RealTimeStreamingCapabilities(NULL, tt__RealTimeStreamingCapabilities *dst, tt__RealTimeStreamingCapabilities *src) (use soapcpp2 -Ed)
struct tt__RealTimeStreamingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTPMulticast" of XSD type xs:boolean.
    enum xsd__boolean*                   RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    struct tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
/// struct tt__RealTimeStreamingCapabilitiesExtension operations:
/// - soap_default_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) reset members to default
/// - int soap_read_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) serialize to a sink
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_dup_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension* dst, tt__RealTimeStreamingCapabilitiesExtension *src) returns deep copy of tt__RealTimeStreamingCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RealTimeStreamingCapabilitiesExtension(tt__RealTimeStreamingCapabilitiesExtension*) deep deletes tt__RealTimeStreamingCapabilitiesExtension data members, use only on dst after soap_dup_tt__RealTimeStreamingCapabilitiesExtension(NULL, tt__RealTimeStreamingCapabilitiesExtension *dst, tt__RealTimeStreamingCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__RealTimeStreamingCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
/// struct tt__ProfileCapabilities operations:
/// - soap_default_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) reset members to default
/// - int soap_read_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) deserialize from a source
/// - int soap_write_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) serialize to a sink
/// - tt__ProfileCapabilities* soap_dup_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities* dst, tt__ProfileCapabilities *src) returns deep copy of tt__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileCapabilities(tt__ProfileCapabilities*) deep deletes tt__ProfileCapabilities data members, use only on dst after soap_dup_tt__ProfileCapabilities(NULL, tt__ProfileCapabilities *dst, tt__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct tt__ProfileCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfProfiles" of XSD type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
/// struct tt__NetworkCapabilities operations:
/// - soap_default_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) reset members to default
/// - int soap_read_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) serialize to a sink
/// - tt__NetworkCapabilities* soap_dup_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities* dst, tt__NetworkCapabilities *src) returns deep copy of tt__NetworkCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilities(tt__NetworkCapabilities*) deep deletes tt__NetworkCapabilities data members, use only on dst after soap_dup_tt__NetworkCapabilities(NULL, tt__NetworkCapabilities *dst, tt__NetworkCapabilities *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPFilter" of XSD type xs:boolean.
    enum xsd__boolean*                   IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
/// Element "ZeroConfiguration" of XSD type xs:boolean.
    enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPVersion6" of XSD type xs:boolean.
    enum xsd__boolean*                   IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DynDNS" of XSD type xs:boolean.
    enum xsd__boolean*                   DynDNS                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    struct tt__NetworkCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
/// struct tt__NetworkCapabilitiesExtension operations:
/// - soap_default_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) reset members to default
/// - int soap_read_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) serialize to a sink
/// - tt__NetworkCapabilitiesExtension* soap_dup_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension* dst, tt__NetworkCapabilitiesExtension *src) returns deep copy of tt__NetworkCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilitiesExtension(tt__NetworkCapabilitiesExtension*) deep deletes tt__NetworkCapabilitiesExtension data members, use only on dst after soap_dup_tt__NetworkCapabilitiesExtension(NULL, tt__NetworkCapabilitiesExtension *dst, tt__NetworkCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Dot11Configuration" of XSD type xs:boolean.
    enum xsd__boolean*                   Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    struct tt__NetworkCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
/// struct tt__NetworkCapabilitiesExtension2 operations:
/// - soap_default_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) reset members to default
/// - int soap_read_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) serialize to a sink
/// - tt__NetworkCapabilitiesExtension2* soap_dup_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2* dst, tt__NetworkCapabilitiesExtension2 *src) returns deep copy of tt__NetworkCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilitiesExtension2(tt__NetworkCapabilitiesExtension2*) deep deletes tt__NetworkCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__NetworkCapabilitiesExtension2(NULL, tt__NetworkCapabilitiesExtension2 *dst, tt__NetworkCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
/// struct tt__SecurityCapabilities operations:
/// - soap_default_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) reset members to default
/// - int soap_read_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) serialize to a sink
/// - tt__SecurityCapabilities* soap_dup_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities* dst, tt__SecurityCapabilities *src) returns deep copy of tt__SecurityCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilities(tt__SecurityCapabilities*) deep deletes tt__SecurityCapabilities data members, use only on dst after soap_dup_tt__SecurityCapabilities(NULL, tt__SecurityCapabilities *dst, tt__SecurityCapabilities *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.1" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.2" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
/// Element "OnboardKeyGeneration" of XSD type xs:boolean.
    enum xsd__boolean                    OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AccessPolicyConfig" of XSD type xs:boolean.
    enum xsd__boolean                    AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "X.509Token" of XSD type xs:boolean.
    enum xsd__boolean                    X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SAMLToken" of XSD type xs:boolean.
    enum xsd__boolean                    SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "KerberosToken" of XSD type xs:boolean.
    enum xsd__boolean                    KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RELToken" of XSD type xs:boolean.
    enum xsd__boolean                    RELToken                       1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    struct tt__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
/// struct tt__SecurityCapabilitiesExtension operations:
/// - soap_default_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) reset members to default
/// - int soap_read_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) serialize to a sink
/// - tt__SecurityCapabilitiesExtension* soap_dup_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension* dst, tt__SecurityCapabilitiesExtension *src) returns deep copy of tt__SecurityCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilitiesExtension(tt__SecurityCapabilitiesExtension*) deep deletes tt__SecurityCapabilitiesExtension data members, use only on dst after soap_dup_tt__SecurityCapabilitiesExtension(NULL, tt__SecurityCapabilitiesExtension *dst, tt__SecurityCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilitiesExtension
{
/// Element "TLS1.0" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    struct tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
/// struct tt__SecurityCapabilitiesExtension2 operations:
/// - soap_default_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) reset members to default
/// - int soap_read_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) serialize to a sink
/// - tt__SecurityCapabilitiesExtension2* soap_dup_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2* dst, tt__SecurityCapabilitiesExtension2 *src) returns deep copy of tt__SecurityCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilitiesExtension2(tt__SecurityCapabilitiesExtension2*) deep deletes tt__SecurityCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__SecurityCapabilitiesExtension2(NULL, tt__SecurityCapabilitiesExtension2 *dst, tt__SecurityCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilitiesExtension2
{
/// Element "Dot1X" of XSD type xs:boolean.
    enum xsd__boolean                    Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Size of array of int* is 0..unbounded.
   $int                                  __sizeSupportedEAPMethod       0;
/// Array int* of size 0..unbounded.
    int*                                 SupportedEAPMethod             0;
/// Element "RemoteUserHandling" of XSD type xs:boolean.
    enum xsd__boolean                    RemoteUserHandling             1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
/// struct tt__SystemCapabilities operations:
/// - soap_default_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) reset members to default
/// - int soap_read_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) deserialize from a source
/// - int soap_write_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) serialize to a sink
/// - tt__SystemCapabilities* soap_dup_tt__SystemCapabilities(soap*, tt__SystemCapabilities* dst, tt__SystemCapabilities *src) returns deep copy of tt__SystemCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilities(tt__SystemCapabilities*) deep deletes tt__SystemCapabilities data members, use only on dst after soap_dup_tt__SystemCapabilities(NULL, tt__SystemCapabilities *dst, tt__SystemCapabilities *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryResolve" of XSD type xs:boolean.
    enum xsd__boolean                    DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryBye" of XSD type xs:boolean.
    enum xsd__boolean                    DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscovery" of XSD type xs:boolean.
    enum xsd__boolean                    RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemBackup" of XSD type xs:boolean.
    enum xsd__boolean                    SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemLogging" of XSD type xs:boolean.
    enum xsd__boolean                    SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
/// Element "FirmwareUpgrade" of XSD type xs:boolean.
    enum xsd__boolean                    FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__OnvifVersion* is 1..unbounded.
   $int                                  __sizeSupportedVersions        1;
/// Array struct tt__OnvifVersion* of size 1..unbounded.
    struct tt__OnvifVersion*             SupportedVersions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    struct tt__SystemCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
/// struct tt__SystemCapabilitiesExtension operations:
/// - soap_default_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) reset members to default
/// - int soap_read_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) serialize to a sink
/// - tt__SystemCapabilitiesExtension* soap_dup_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension* dst, tt__SystemCapabilitiesExtension *src) returns deep copy of tt__SystemCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilitiesExtension(tt__SystemCapabilitiesExtension*) deep deletes tt__SystemCapabilitiesExtension data members, use only on dst after soap_dup_tt__SystemCapabilitiesExtension(NULL, tt__SystemCapabilitiesExtension *dst, tt__SystemCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "HttpFirmwareUpgrade" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    struct tt__SystemCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
/// struct tt__SystemCapabilitiesExtension2 operations:
/// - soap_default_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) reset members to default
/// - int soap_read_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) serialize to a sink
/// - tt__SystemCapabilitiesExtension2* soap_dup_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2* dst, tt__SystemCapabilitiesExtension2 *src) returns deep copy of tt__SystemCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilitiesExtension2(tt__SystemCapabilitiesExtension2*) deep deletes tt__SystemCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__SystemCapabilitiesExtension2(NULL, tt__SystemCapabilitiesExtension2 *dst, tt__SystemCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilitiesExtension2
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
/// struct tt__OnvifVersion operations:
/// - soap_default_tt__OnvifVersion(soap*, tt__OnvifVersion*) reset members to default
/// - int soap_read_tt__OnvifVersion(soap*, tt__OnvifVersion*) deserialize from a source
/// - int soap_write_tt__OnvifVersion(soap*, tt__OnvifVersion*) serialize to a sink
/// - tt__OnvifVersion* soap_dup_tt__OnvifVersion(soap*, tt__OnvifVersion* dst, tt__OnvifVersion *src) returns deep copy of tt__OnvifVersion src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OnvifVersion(tt__OnvifVersion*) deep deletes tt__OnvifVersion data members, use only on dst after soap_dup_tt__OnvifVersion(NULL, tt__OnvifVersion *dst, tt__OnvifVersion *src) (use soapcpp2 -Ed)
struct tt__OnvifVersion
{
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
/// Element "Major" of XSD type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number (e.g. X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number).
/// </BLOCKQUOTE></PRE>
/// Element "Minor" of XSD type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
/// struct tt__ImagingCapabilities operations:
/// - soap_default_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) reset members to default
/// - int soap_read_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) deserialize from a source
/// - int soap_write_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) serialize to a sink
/// - tt__ImagingCapabilities* soap_dup_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities* dst, tt__ImagingCapabilities *src) returns deep copy of tt__ImagingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingCapabilities(tt__ImagingCapabilities*) deep deletes tt__ImagingCapabilities data members, use only on dst after soap_dup_tt__ImagingCapabilities(NULL, tt__ImagingCapabilities *dst, tt__ImagingCapabilities *src) (use soapcpp2 -Ed)
struct tt__ImagingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
/// struct tt__PTZCapabilities operations:
/// - soap_default_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) reset members to default
/// - int soap_read_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) deserialize from a source
/// - int soap_write_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) serialize to a sink
/// - tt__PTZCapabilities* soap_dup_tt__PTZCapabilities(soap*, tt__PTZCapabilities* dst, tt__PTZCapabilities *src) returns deep copy of tt__PTZCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZCapabilities(tt__PTZCapabilities*) deep deletes tt__PTZCapabilities data members, use only on dst after soap_dup_tt__PTZCapabilities(NULL, tt__PTZCapabilities *dst, tt__PTZCapabilities *src) (use soapcpp2 -Ed)
struct tt__PTZCapabilities
{
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
/// struct tt__DeviceIOCapabilities operations:
/// - soap_default_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) reset members to default
/// - int soap_read_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) deserialize from a source
/// - int soap_write_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) serialize to a sink
/// - tt__DeviceIOCapabilities* soap_dup_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities* dst, tt__DeviceIOCapabilities *src) returns deep copy of tt__DeviceIOCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceIOCapabilities(tt__DeviceIOCapabilities*) deep deletes tt__DeviceIOCapabilities data members, use only on dst after soap_dup_tt__DeviceIOCapabilities(NULL, tt__DeviceIOCapabilities *dst, tt__DeviceIOCapabilities *src) (use soapcpp2 -Ed)
struct tt__DeviceIOCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of XSD type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of XSD type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of XSD type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of XSD type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of XSD type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
/// struct tt__DisplayCapabilities operations:
/// - soap_default_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) reset members to default
/// - int soap_read_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) deserialize from a source
/// - int soap_write_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) serialize to a sink
/// - tt__DisplayCapabilities* soap_dup_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities* dst, tt__DisplayCapabilities *src) returns deep copy of tt__DisplayCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DisplayCapabilities(tt__DisplayCapabilities*) deep deletes tt__DisplayCapabilities data members, use only on dst after soap_dup_tt__DisplayCapabilities(NULL, tt__DisplayCapabilities *dst, tt__DisplayCapabilities *src) (use soapcpp2 -Ed)
struct tt__DisplayCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
/// Element "FixedLayout" of XSD type xs:boolean.
    enum xsd__boolean                    FixedLayout                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
/// struct tt__RecordingCapabilities operations:
/// - soap_default_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) reset members to default
/// - int soap_read_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) deserialize from a source
/// - int soap_write_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) serialize to a sink
/// - tt__RecordingCapabilities* soap_dup_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities* dst, tt__RecordingCapabilities *src) returns deep copy of tt__RecordingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingCapabilities(tt__RecordingCapabilities*) deep deletes tt__RecordingCapabilities data members, use only on dst after soap_dup_tt__RecordingCapabilities(NULL, tt__RecordingCapabilities *dst, tt__RecordingCapabilities *src) (use soapcpp2 -Ed)
struct tt__RecordingCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of XSD type xs:boolean.
    enum xsd__boolean                    ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of XSD type xs:boolean.
    enum xsd__boolean                    MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of XSD type xs:boolean.
    enum xsd__boolean                    DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of XSD type xs:boolean.
    enum xsd__boolean                    DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of XSD type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
/// struct tt__SearchCapabilities operations:
/// - soap_default_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) reset members to default
/// - int soap_read_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) deserialize from a source
/// - int soap_write_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) serialize to a sink
/// - tt__SearchCapabilities* soap_dup_tt__SearchCapabilities(soap*, tt__SearchCapabilities* dst, tt__SearchCapabilities *src) returns deep copy of tt__SearchCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SearchCapabilities(tt__SearchCapabilities*) deep deletes tt__SearchCapabilities data members, use only on dst after soap_dup_tt__SearchCapabilities(NULL, tt__SearchCapabilities *dst, tt__SearchCapabilities *src) (use soapcpp2 -Ed)
struct tt__SearchCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of XSD type xs:boolean.
    enum xsd__boolean                    MetadataSearch                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
/// struct tt__ReplayCapabilities operations:
/// - soap_default_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) reset members to default
/// - int soap_read_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) deserialize from a source
/// - int soap_write_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) serialize to a sink
/// - tt__ReplayCapabilities* soap_dup_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities* dst, tt__ReplayCapabilities *src) returns deep copy of tt__ReplayCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReplayCapabilities(tt__ReplayCapabilities*) deep deletes tt__ReplayCapabilities data members, use only on dst after soap_dup_tt__ReplayCapabilities(NULL, tt__ReplayCapabilities *dst, tt__ReplayCapabilities *src) (use soapcpp2 -Ed)
struct tt__ReplayCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
/// struct tt__ReceiverCapabilities operations:
/// - soap_default_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) reset members to default
/// - int soap_read_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) deserialize from a source
/// - int soap_write_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) serialize to a sink
/// - tt__ReceiverCapabilities* soap_dup_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities* dst, tt__ReceiverCapabilities *src) returns deep copy of tt__ReceiverCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReceiverCapabilities(tt__ReceiverCapabilities*) deep deletes tt__ReceiverCapabilities data members, use only on dst after soap_dup_tt__ReceiverCapabilities(NULL, tt__ReceiverCapabilities *dst, tt__ReceiverCapabilities *src) (use soapcpp2 -Ed)
struct tt__ReceiverCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_Multicast" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedReceivers" of XSD type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRTSPURILength" of XSD type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
/// struct tt__AnalyticsDeviceCapabilities operations:
/// - soap_default_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) reset members to default
/// - int soap_read_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) serialize to a sink
/// - tt__AnalyticsDeviceCapabilities* soap_dup_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities* dst, tt__AnalyticsDeviceCapabilities *src) returns deep copy of tt__AnalyticsDeviceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceCapabilities(tt__AnalyticsDeviceCapabilities*) deep deletes tt__AnalyticsDeviceCapabilities data members, use only on dst after soap_dup_tt__AnalyticsDeviceCapabilities(NULL, tt__AnalyticsDeviceCapabilities *dst, tt__AnalyticsDeviceCapabilities *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    enum xsd__boolean*                   RuleSupport                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    struct tt__AnalyticsDeviceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
/// struct tt__AnalyticsDeviceExtension operations:
/// - soap_default_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) reset members to default
/// - int soap_read_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) serialize to a sink
/// - tt__AnalyticsDeviceExtension* soap_dup_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension* dst, tt__AnalyticsDeviceExtension *src) returns deep copy of tt__AnalyticsDeviceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceExtension(tt__AnalyticsDeviceExtension*) deep deletes tt__AnalyticsDeviceExtension data members, use only on dst after soap_dup_tt__AnalyticsDeviceExtension(NULL, tt__AnalyticsDeviceExtension *dst, tt__AnalyticsDeviceExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
/// struct tt__SystemLog operations:
/// - soap_default_tt__SystemLog(soap*, tt__SystemLog*) reset members to default
/// - int soap_read_tt__SystemLog(soap*, tt__SystemLog*) deserialize from a source
/// - int soap_write_tt__SystemLog(soap*, tt__SystemLog*) serialize to a sink
/// - tt__SystemLog* soap_dup_tt__SystemLog(soap*, tt__SystemLog* dst, tt__SystemLog *src) returns deep copy of tt__SystemLog src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLog(tt__SystemLog*) deep deletes tt__SystemLog data members, use only on dst after soap_dup_tt__SystemLog(NULL, tt__SystemLog *dst, tt__SystemLog *src) (use soapcpp2 -Ed)
struct tt__SystemLog
{
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
/// struct tt__SupportInformation operations:
/// - soap_default_tt__SupportInformation(soap*, tt__SupportInformation*) reset members to default
/// - int soap_read_tt__SupportInformation(soap*, tt__SupportInformation*) deserialize from a source
/// - int soap_write_tt__SupportInformation(soap*, tt__SupportInformation*) serialize to a sink
/// - tt__SupportInformation* soap_dup_tt__SupportInformation(soap*, tt__SupportInformation* dst, tt__SupportInformation *src) returns deep copy of tt__SupportInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportInformation(tt__SupportInformation*) deep deletes tt__SupportInformation data members, use only on dst after soap_dup_tt__SupportInformation(NULL, tt__SupportInformation *dst, tt__SupportInformation *src) (use soapcpp2 -Ed)
struct tt__SupportInformation
{
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
/// struct tt__BinaryData operations:
/// - soap_default_tt__BinaryData(soap*, tt__BinaryData*) reset members to default
/// - int soap_read_tt__BinaryData(soap*, tt__BinaryData*) deserialize from a source
/// - int soap_write_tt__BinaryData(soap*, tt__BinaryData*) serialize to a sink
/// - tt__BinaryData* soap_dup_tt__BinaryData(soap*, tt__BinaryData* dst, tt__BinaryData *src) returns deep copy of tt__BinaryData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BinaryData(tt__BinaryData*) deep deletes tt__BinaryData data members, use only on dst after soap_dup_tt__BinaryData(NULL, tt__BinaryData *dst, tt__BinaryData *src) (use soapcpp2 -Ed)
struct tt__BinaryData
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type xs:base64Binary.
    struct xsd__base64Binary             Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
/// struct tt__AttachmentData operations:
/// - soap_default_tt__AttachmentData(soap*, tt__AttachmentData*) reset members to default
/// - int soap_read_tt__AttachmentData(soap*, tt__AttachmentData*) deserialize from a source
/// - int soap_write_tt__AttachmentData(soap*, tt__AttachmentData*) serialize to a sink
/// - tt__AttachmentData* soap_dup_tt__AttachmentData(soap*, tt__AttachmentData* dst, tt__AttachmentData *src) returns deep copy of tt__AttachmentData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AttachmentData(tt__AttachmentData*) deep deletes tt__AttachmentData data members, use only on dst after soap_dup_tt__AttachmentData(NULL, tt__AttachmentData *dst, tt__AttachmentData *src) (use soapcpp2 -Ed)
struct tt__AttachmentData
{
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
/// struct tt__BackupFile operations:
/// - soap_default_tt__BackupFile(soap*, tt__BackupFile*) reset members to default
/// - int soap_read_tt__BackupFile(soap*, tt__BackupFile*) deserialize from a source
/// - int soap_write_tt__BackupFile(soap*, tt__BackupFile*) serialize to a sink
/// - tt__BackupFile* soap_dup_tt__BackupFile(soap*, tt__BackupFile* dst, tt__BackupFile *src) returns deep copy of tt__BackupFile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BackupFile(tt__BackupFile*) deep deletes tt__BackupFile data members, use only on dst after soap_dup_tt__BackupFile(NULL, tt__BackupFile *dst, tt__BackupFile *src) (use soapcpp2 -Ed)
struct tt__BackupFile
{
/// Element "Name" of XSD type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
/// struct tt__SystemLogUriList operations:
/// - soap_default_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) reset members to default
/// - int soap_read_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) deserialize from a source
/// - int soap_write_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) serialize to a sink
/// - tt__SystemLogUriList* soap_dup_tt__SystemLogUriList(soap*, tt__SystemLogUriList* dst, tt__SystemLogUriList *src) returns deep copy of tt__SystemLogUriList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLogUriList(tt__SystemLogUriList*) deep deletes tt__SystemLogUriList data members, use only on dst after soap_dup_tt__SystemLogUriList(NULL, tt__SystemLogUriList *dst, tt__SystemLogUriList *src) (use soapcpp2 -Ed)
struct tt__SystemLogUriList
{
/// Size of array of struct tt__SystemLogUri* is 0..unbounded.
   $int                                  __sizeSystemLog                0;
/// Array struct tt__SystemLogUri* of size 0..unbounded.
    struct tt__SystemLogUri*             SystemLog                      0;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
/// struct tt__SystemLogUri operations:
/// - soap_default_tt__SystemLogUri(soap*, tt__SystemLogUri*) reset members to default
/// - int soap_read_tt__SystemLogUri(soap*, tt__SystemLogUri*) deserialize from a source
/// - int soap_write_tt__SystemLogUri(soap*, tt__SystemLogUri*) serialize to a sink
/// - tt__SystemLogUri* soap_dup_tt__SystemLogUri(soap*, tt__SystemLogUri* dst, tt__SystemLogUri *src) returns deep copy of tt__SystemLogUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLogUri(tt__SystemLogUri*) deep deletes tt__SystemLogUri data members, use only on dst after soap_dup_tt__SystemLogUri(NULL, tt__SystemLogUri *dst, tt__SystemLogUri *src) (use soapcpp2 -Ed)
struct tt__SystemLogUri
{
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
/// struct tt__SystemDateTime operations:
/// - soap_default_tt__SystemDateTime(soap*, tt__SystemDateTime*) reset members to default
/// - int soap_read_tt__SystemDateTime(soap*, tt__SystemDateTime*) deserialize from a source
/// - int soap_write_tt__SystemDateTime(soap*, tt__SystemDateTime*) serialize to a sink
/// - tt__SystemDateTime* soap_dup_tt__SystemDateTime(soap*, tt__SystemDateTime* dst, tt__SystemDateTime *src) returns deep copy of tt__SystemDateTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemDateTime(tt__SystemDateTime*) deep deletes tt__SystemDateTime data members, use only on dst after soap_dup_tt__SystemDateTime(NULL, tt__SystemDateTime *dst, tt__SystemDateTime *src) (use soapcpp2 -Ed)
struct tt__SystemDateTime
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
/// Element "DateTimeType" of XSD type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
/// Element "DaylightSavings" of XSD type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
/// Element "TimeZone" of XSD type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
/// Element "UTCDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
/// Element "LocalDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    struct tt__SystemDateTimeExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
/// struct tt__SystemDateTimeExtension operations:
/// - soap_default_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) reset members to default
/// - int soap_read_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) deserialize from a source
/// - int soap_write_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) serialize to a sink
/// - tt__SystemDateTimeExtension* soap_dup_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension* dst, tt__SystemDateTimeExtension *src) returns deep copy of tt__SystemDateTimeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemDateTimeExtension(tt__SystemDateTimeExtension*) deep deletes tt__SystemDateTimeExtension data members, use only on dst after soap_dup_tt__SystemDateTimeExtension(NULL, tt__SystemDateTimeExtension *dst, tt__SystemDateTimeExtension *src) (use soapcpp2 -Ed)
struct tt__SystemDateTimeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
/// struct tt__DateTime operations:
/// - soap_default_tt__DateTime(soap*, tt__DateTime*) reset members to default
/// - int soap_read_tt__DateTime(soap*, tt__DateTime*) deserialize from a source
/// - int soap_write_tt__DateTime(soap*, tt__DateTime*) serialize to a sink
/// - tt__DateTime* soap_dup_tt__DateTime(soap*, tt__DateTime* dst, tt__DateTime *src) returns deep copy of tt__DateTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DateTime(tt__DateTime*) deep deletes tt__DateTime data members, use only on dst after soap_dup_tt__DateTime(NULL, tt__DateTime *dst, tt__DateTime *src) (use soapcpp2 -Ed)
struct tt__DateTime
{
/// Element "Time" of XSD type "http://www.onvif.org/ver10/schema":Time.
    struct tt__Time*                     Time                           1;	///< Required element.
/// Element "Date" of XSD type "http://www.onvif.org/ver10/schema":Date.
    struct tt__Date*                     Date                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
/// struct tt__Date operations:
/// - soap_default_tt__Date(soap*, tt__Date*) reset members to default
/// - int soap_read_tt__Date(soap*, tt__Date*) deserialize from a source
/// - int soap_write_tt__Date(soap*, tt__Date*) serialize to a sink
/// - tt__Date* soap_dup_tt__Date(soap*, tt__Date* dst, tt__Date *src) returns deep copy of tt__Date src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Date(tt__Date*) deep deletes tt__Date data members, use only on dst after soap_dup_tt__Date(NULL, tt__Date *dst, tt__Date *src) (use soapcpp2 -Ed)
struct tt__Date
{
/// Element "Year" of XSD type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
/// Element "Month" of XSD type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
/// Element "Day" of XSD type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
/// struct tt__Time operations:
/// - soap_default_tt__Time(soap*, tt__Time*) reset members to default
/// - int soap_read_tt__Time(soap*, tt__Time*) deserialize from a source
/// - int soap_write_tt__Time(soap*, tt__Time*) serialize to a sink
/// - tt__Time* soap_dup_tt__Time(soap*, tt__Time* dst, tt__Time *src) returns deep copy of tt__Time src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Time(tt__Time*) deep deletes tt__Time data members, use only on dst after soap_dup_tt__Time(NULL, tt__Time *dst, tt__Time *src) (use soapcpp2 -Ed)
struct tt__Time
{
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
/// Element "Hour" of XSD type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
/// Element "Minute" of XSD type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
/// Element "Second" of XSD type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
/// struct tt__TimeZone operations:
/// - soap_default_tt__TimeZone(soap*, tt__TimeZone*) reset members to default
/// - int soap_read_tt__TimeZone(soap*, tt__TimeZone*) deserialize from a source
/// - int soap_write_tt__TimeZone(soap*, tt__TimeZone*) serialize to a sink
/// - tt__TimeZone* soap_dup_tt__TimeZone(soap*, tt__TimeZone* dst, tt__TimeZone *src) returns deep copy of tt__TimeZone src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TimeZone(tt__TimeZone*) deep deletes tt__TimeZone data members, use only on dst after soap_dup_tt__TimeZone(NULL, tt__TimeZone *dst, tt__TimeZone *src) (use soapcpp2 -Ed)
struct tt__TimeZone
{
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
/// Element "TZ" of XSD type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
/// struct tt__RemoteUser operations:
/// - soap_default_tt__RemoteUser(soap*, tt__RemoteUser*) reset members to default
/// - int soap_read_tt__RemoteUser(soap*, tt__RemoteUser*) deserialize from a source
/// - int soap_write_tt__RemoteUser(soap*, tt__RemoteUser*) serialize to a sink
/// - tt__RemoteUser* soap_dup_tt__RemoteUser(soap*, tt__RemoteUser* dst, tt__RemoteUser *src) returns deep copy of tt__RemoteUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RemoteUser(tt__RemoteUser*) deep deletes tt__RemoteUser data members, use only on dst after soap_dup_tt__RemoteUser(NULL, tt__RemoteUser *dst, tt__RemoteUser *src) (use soapcpp2 -Ed)
struct tt__RemoteUser
{
/// Element "Username" of XSD type xs:string.
    char*                                Username                       1;	///< Required element.
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of XSD type xs:boolean.
    enum xsd__boolean                    UseDerivedPassword             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
/// struct tt__User operations:
/// - soap_default_tt__User(soap*, tt__User*) reset members to default
/// - int soap_read_tt__User(soap*, tt__User*) deserialize from a source
/// - int soap_write_tt__User(soap*, tt__User*) serialize to a sink
/// - tt__User* soap_dup_tt__User(soap*, tt__User* dst, tt__User *src) returns deep copy of tt__User src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__User(tt__User*) deep deletes tt__User data members, use only on dst after soap_dup_tt__User(NULL, tt__User *dst, tt__User *src) (use soapcpp2 -Ed)
struct tt__User
{
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
/// Element "Username" of XSD type xs:string.
    char*                                Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
/// Element "UserLevel" of XSD type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":UserExtension.
    struct tt__UserExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
/// struct tt__UserExtension operations:
/// - soap_default_tt__UserExtension(soap*, tt__UserExtension*) reset members to default
/// - int soap_read_tt__UserExtension(soap*, tt__UserExtension*) deserialize from a source
/// - int soap_write_tt__UserExtension(soap*, tt__UserExtension*) serialize to a sink
/// - tt__UserExtension* soap_dup_tt__UserExtension(soap*, tt__UserExtension* dst, tt__UserExtension *src) returns deep copy of tt__UserExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__UserExtension(tt__UserExtension*) deep deletes tt__UserExtension data members, use only on dst after soap_dup_tt__UserExtension(NULL, tt__UserExtension *dst, tt__UserExtension *src) (use soapcpp2 -Ed)
struct tt__UserExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
///
/// struct tt__CertificateGenerationParameters operations:
/// - soap_default_tt__CertificateGenerationParameters(soap*, tt__CertificateGenerationParameters*) reset members to default
/// - int soap_read_tt__CertificateGenerationParameters(soap*, tt__CertificateGenerationParameters*) deserialize from a source
/// - int soap_write_tt__CertificateGenerationParameters(soap*, tt__CertificateGenerationParameters*) serialize to a sink
/// - tt__CertificateGenerationParameters* soap_dup_tt__CertificateGenerationParameters(soap*, tt__CertificateGenerationParameters* dst, tt__CertificateGenerationParameters *src) returns deep copy of tt__CertificateGenerationParameters src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateGenerationParameters(tt__CertificateGenerationParameters*) deep deletes tt__CertificateGenerationParameters data members, use only on dst after soap_dup_tt__CertificateGenerationParameters(NULL, tt__CertificateGenerationParameters *dst, tt__CertificateGenerationParameters *src) (use soapcpp2 -Ed)
struct tt__CertificateGenerationParameters
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Subject" of XSD type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// Element "ValidNotBefore" of XSD type xs:token.
    xsd__token                           ValidNotBefore                 0;	///< Optional element.
/// Element "ValidNotAfter" of XSD type xs:token.
    xsd__token                           ValidNotAfter                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    struct tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
///
/// struct tt__CertificateGenerationParametersExtension operations:
/// - soap_default_tt__CertificateGenerationParametersExtension(soap*, tt__CertificateGenerationParametersExtension*) reset members to default
/// - int soap_read_tt__CertificateGenerationParametersExtension(soap*, tt__CertificateGenerationParametersExtension*) deserialize from a source
/// - int soap_write_tt__CertificateGenerationParametersExtension(soap*, tt__CertificateGenerationParametersExtension*) serialize to a sink
/// - tt__CertificateGenerationParametersExtension* soap_dup_tt__CertificateGenerationParametersExtension(soap*, tt__CertificateGenerationParametersExtension* dst, tt__CertificateGenerationParametersExtension *src) returns deep copy of tt__CertificateGenerationParametersExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateGenerationParametersExtension(tt__CertificateGenerationParametersExtension*) deep deletes tt__CertificateGenerationParametersExtension data members, use only on dst after soap_dup_tt__CertificateGenerationParametersExtension(NULL, tt__CertificateGenerationParametersExtension *dst, tt__CertificateGenerationParametersExtension *src) (use soapcpp2 -Ed)
struct tt__CertificateGenerationParametersExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
/// struct tt__Certificate operations:
/// - soap_default_tt__Certificate(soap*, tt__Certificate*) reset members to default
/// - int soap_read_tt__Certificate(soap*, tt__Certificate*) deserialize from a source
/// - int soap_write_tt__Certificate(soap*, tt__Certificate*) serialize to a sink
/// - tt__Certificate* soap_dup_tt__Certificate(soap*, tt__Certificate* dst, tt__Certificate *src) returns deep copy of tt__Certificate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Certificate(tt__Certificate*) deep deletes tt__Certificate data members, use only on dst after soap_dup_tt__Certificate(NULL, tt__Certificate *dst, tt__Certificate *src) (use soapcpp2 -Ed)
struct tt__Certificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
/// struct tt__CertificateStatus operations:
/// - soap_default_tt__CertificateStatus(soap*, tt__CertificateStatus*) reset members to default
/// - int soap_read_tt__CertificateStatus(soap*, tt__CertificateStatus*) deserialize from a source
/// - int soap_write_tt__CertificateStatus(soap*, tt__CertificateStatus*) serialize to a sink
/// - tt__CertificateStatus* soap_dup_tt__CertificateStatus(soap*, tt__CertificateStatus* dst, tt__CertificateStatus *src) returns deep copy of tt__CertificateStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateStatus(tt__CertificateStatus*) deep deletes tt__CertificateStatus data members, use only on dst after soap_dup_tt__CertificateStatus(NULL, tt__CertificateStatus *dst, tt__CertificateStatus *src) (use soapcpp2 -Ed)
struct tt__CertificateStatus
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
/// struct tt__CertificateWithPrivateKey operations:
/// - soap_default_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) reset members to default
/// - int soap_read_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) deserialize from a source
/// - int soap_write_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) serialize to a sink
/// - tt__CertificateWithPrivateKey* soap_dup_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey* dst, tt__CertificateWithPrivateKey *src) returns deep copy of tt__CertificateWithPrivateKey src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateWithPrivateKey(tt__CertificateWithPrivateKey*) deep deletes tt__CertificateWithPrivateKey data members, use only on dst after soap_dup_tt__CertificateWithPrivateKey(NULL, tt__CertificateWithPrivateKey *dst, tt__CertificateWithPrivateKey *src) (use soapcpp2 -Ed)
struct tt__CertificateWithPrivateKey
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
/// Element "PrivateKey" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PrivateKey                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
/// struct tt__CertificateInformation operations:
/// - soap_default_tt__CertificateInformation(soap*, tt__CertificateInformation*) reset members to default
/// - int soap_read_tt__CertificateInformation(soap*, tt__CertificateInformation*) deserialize from a source
/// - int soap_write_tt__CertificateInformation(soap*, tt__CertificateInformation*) serialize to a sink
/// - tt__CertificateInformation* soap_dup_tt__CertificateInformation(soap*, tt__CertificateInformation* dst, tt__CertificateInformation *src) returns deep copy of tt__CertificateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateInformation(tt__CertificateInformation*) deep deletes tt__CertificateInformation data members, use only on dst after soap_dup_tt__CertificateInformation(NULL, tt__CertificateInformation *dst, tt__CertificateInformation *src) (use soapcpp2 -Ed)
struct tt__CertificateInformation
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of XSD type xs:string.
    char*                                IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of XSD type xs:string.
    char*                                SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of XSD type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of XSD type xs:string.
    char*                                Version                        0;	///< Optional element.
/// Element "SerialNum" of XSD type xs:string.
    char*                                SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
/// Element "SignatureAlgorithm" of XSD type xs:string.
    char*                                SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of XSD type "http://www.onvif.org/ver10/schema":DateTimeRange.
    struct tt__DateTimeRange*            Validity                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    struct tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
/// struct tt__CertificateInformationExtension operations:
/// - soap_default_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) reset members to default
/// - int soap_read_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) deserialize from a source
/// - int soap_write_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) serialize to a sink
/// - tt__CertificateInformationExtension* soap_dup_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension* dst, tt__CertificateInformationExtension *src) returns deep copy of tt__CertificateInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateInformationExtension(tt__CertificateInformationExtension*) deep deletes tt__CertificateInformationExtension data members, use only on dst after soap_dup_tt__CertificateInformationExtension(NULL, tt__CertificateInformationExtension *dst, tt__CertificateInformationExtension *src) (use soapcpp2 -Ed)
struct tt__CertificateInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
/// struct tt__Dot1XConfiguration operations:
/// - soap_default_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) reset members to default
/// - int soap_read_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) deserialize from a source
/// - int soap_write_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) serialize to a sink
/// - tt__Dot1XConfiguration* soap_dup_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration* dst, tt__Dot1XConfiguration *src) returns deep copy of tt__Dot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot1XConfiguration(tt__Dot1XConfiguration*) deep deletes tt__Dot1XConfiguration data members, use only on dst after soap_dup_tt__Dot1XConfiguration(NULL, tt__Dot1XConfiguration *dst, tt__Dot1XConfiguration *src) (use soapcpp2 -Ed)
struct tt__Dot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of XSD type xs:string.
    char*                                Identity                       1;	///< Required element.
/// Element "AnonymousID" of XSD type xs:string.
    char*                                AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Element "EAPMethod" of XSD type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeCACertificateID          0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          CACertificateID                0;
/// Element "EAPMethodConfiguration" of XSD type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    struct tt__EAPMethodConfiguration*   EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    struct tt__Dot1XConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
/// struct tt__Dot1XConfigurationExtension operations:
/// - soap_default_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) reset members to default
/// - int soap_read_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) serialize to a sink
/// - tt__Dot1XConfigurationExtension* soap_dup_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension* dst, tt__Dot1XConfigurationExtension *src) returns deep copy of tt__Dot1XConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot1XConfigurationExtension(tt__Dot1XConfigurationExtension*) deep deletes tt__Dot1XConfigurationExtension data members, use only on dst after soap_dup_tt__Dot1XConfigurationExtension(NULL, tt__Dot1XConfigurationExtension *dst, tt__Dot1XConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__Dot1XConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
/// struct tt__EAPMethodConfiguration operations:
/// - soap_default_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) reset members to default
/// - int soap_read_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) deserialize from a source
/// - int soap_write_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) serialize to a sink
/// - tt__EAPMethodConfiguration* soap_dup_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration* dst, tt__EAPMethodConfiguration *src) returns deep copy of tt__EAPMethodConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EAPMethodConfiguration(tt__EAPMethodConfiguration*) deep deletes tt__EAPMethodConfiguration data members, use only on dst after soap_dup_tt__EAPMethodConfiguration(NULL, tt__EAPMethodConfiguration *dst, tt__EAPMethodConfiguration *src) (use soapcpp2 -Ed)
struct tt__EAPMethodConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
/// Element "TLSConfiguration" of XSD type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    struct tt__TLSConfiguration*         TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    struct tt__EapMethodExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
/// struct tt__EapMethodExtension operations:
/// - soap_default_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) reset members to default
/// - int soap_read_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) deserialize from a source
/// - int soap_write_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) serialize to a sink
/// - tt__EapMethodExtension* soap_dup_tt__EapMethodExtension(soap*, tt__EapMethodExtension* dst, tt__EapMethodExtension *src) returns deep copy of tt__EapMethodExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EapMethodExtension(tt__EapMethodExtension*) deep deletes tt__EapMethodExtension data members, use only on dst after soap_dup_tt__EapMethodExtension(NULL, tt__EapMethodExtension *dst, tt__EapMethodExtension *src) (use soapcpp2 -Ed)
struct tt__EapMethodExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
/// struct tt__TLSConfiguration operations:
/// - soap_default_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) reset members to default
/// - int soap_read_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) deserialize from a source
/// - int soap_write_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) serialize to a sink
/// - tt__TLSConfiguration* soap_dup_tt__TLSConfiguration(soap*, tt__TLSConfiguration* dst, tt__TLSConfiguration *src) returns deep copy of tt__TLSConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TLSConfiguration(tt__TLSConfiguration*) deep deletes tt__TLSConfiguration data members, use only on dst after soap_dup_tt__TLSConfiguration(NULL, tt__TLSConfiguration *dst, tt__TLSConfiguration *src) (use soapcpp2 -Ed)
struct tt__TLSConfiguration
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
///
/// struct tt__GenericEapPwdConfigurationExtension operations:
/// - soap_default_tt__GenericEapPwdConfigurationExtension(soap*, tt__GenericEapPwdConfigurationExtension*) reset members to default
/// - int soap_read_tt__GenericEapPwdConfigurationExtension(soap*, tt__GenericEapPwdConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__GenericEapPwdConfigurationExtension(soap*, tt__GenericEapPwdConfigurationExtension*) serialize to a sink
/// - tt__GenericEapPwdConfigurationExtension* soap_dup_tt__GenericEapPwdConfigurationExtension(soap*, tt__GenericEapPwdConfigurationExtension* dst, tt__GenericEapPwdConfigurationExtension *src) returns deep copy of tt__GenericEapPwdConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GenericEapPwdConfigurationExtension(tt__GenericEapPwdConfigurationExtension*) deep deletes tt__GenericEapPwdConfigurationExtension data members, use only on dst after soap_dup_tt__GenericEapPwdConfigurationExtension(NULL, tt__GenericEapPwdConfigurationExtension *dst, tt__GenericEapPwdConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__GenericEapPwdConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
/// struct tt__RelayOutputSettings operations:
/// - soap_default_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) reset members to default
/// - int soap_read_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) deserialize from a source
/// - int soap_write_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) serialize to a sink
/// - tt__RelayOutputSettings* soap_dup_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings* dst, tt__RelayOutputSettings *src) returns deep copy of tt__RelayOutputSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelayOutputSettings(tt__RelayOutputSettings*) deep deletes tt__RelayOutputSettings data members, use only on dst after soap_dup_tt__RelayOutputSettings(NULL, tt__RelayOutputSettings *dst, tt__RelayOutputSettings *src) (use soapcpp2 -Ed)
struct tt__RelayOutputSettings
{
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
/// Element "DelayTime" of XSD type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "IdleState" of XSD type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
/// struct tt__PTZNodeExtension operations:
/// - soap_default_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) reset members to default
/// - int soap_read_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) deserialize from a source
/// - int soap_write_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) serialize to a sink
/// - tt__PTZNodeExtension* soap_dup_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension* dst, tt__PTZNodeExtension *src) returns deep copy of tt__PTZNodeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZNodeExtension(tt__PTZNodeExtension*) deep deletes tt__PTZNodeExtension data members, use only on dst after soap_dup_tt__PTZNodeExtension(NULL, tt__PTZNodeExtension *dst, tt__PTZNodeExtension *src) (use soapcpp2 -Ed)
struct tt__PTZNodeExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPresetTour" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    struct tt__PTZPresetTourSupported*   SupportedPresetTour            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    struct tt__PTZNodeExtension2*        Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
/// struct tt__PTZNodeExtension2 operations:
/// - soap_default_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) reset members to default
/// - int soap_read_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) deserialize from a source
/// - int soap_write_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) serialize to a sink
/// - tt__PTZNodeExtension2* soap_dup_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2* dst, tt__PTZNodeExtension2 *src) returns deep copy of tt__PTZNodeExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZNodeExtension2(tt__PTZNodeExtension2*) deep deletes tt__PTZNodeExtension2 data members, use only on dst after soap_dup_tt__PTZNodeExtension2(NULL, tt__PTZNodeExtension2 *dst, tt__PTZNodeExtension2 *src) (use soapcpp2 -Ed)
struct tt__PTZNodeExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
/// struct tt__PTZPresetTourSupported operations:
/// - soap_default_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) reset members to default
/// - int soap_read_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) serialize to a sink
/// - tt__PTZPresetTourSupported* soap_dup_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported* dst, tt__PTZPresetTourSupported *src) returns deep copy of tt__PTZPresetTourSupported src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSupported(tt__PTZPresetTourSupported*) deep deletes tt__PTZPresetTourSupported data members, use only on dst after soap_dup_tt__PTZPresetTourSupported(NULL, tt__PTZPresetTourSupported *dst, tt__PTZPresetTourSupported *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSupported
{
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresetTours" of XSD type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__PTZPresetTourOperation* is 0..unbounded.
   $int                                  __sizePTZPresetTourOperation   0;
/// Array enum tt__PTZPresetTourOperation* of size 0..unbounded.
    enum tt__PTZPresetTourOperation*     PTZPresetTourOperation         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    struct tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
/// struct tt__PTZPresetTourSupportedExtension operations:
/// - soap_default_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) serialize to a sink
/// - tt__PTZPresetTourSupportedExtension* soap_dup_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension* dst, tt__PTZPresetTourSupportedExtension *src) returns deep copy of tt__PTZPresetTourSupportedExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSupportedExtension(tt__PTZPresetTourSupportedExtension*) deep deletes tt__PTZPresetTourSupportedExtension data members, use only on dst after soap_dup_tt__PTZPresetTourSupportedExtension(NULL, tt__PTZPresetTourSupportedExtension *dst, tt__PTZPresetTourSupportedExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSupportedExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
/// struct tt__PTZConfigurationExtension operations:
/// - soap_default_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) reset members to default
/// - int soap_read_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) serialize to a sink
/// - tt__PTZConfigurationExtension* soap_dup_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension* dst, tt__PTZConfigurationExtension *src) returns deep copy of tt__PTZConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationExtension(tt__PTZConfigurationExtension*) deep deletes tt__PTZConfigurationExtension data members, use only on dst after soap_dup_tt__PTZConfigurationExtension(NULL, tt__PTZConfigurationExtension *dst, tt__PTZConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirection.
    struct tt__PTControlDirection*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    struct tt__PTZConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
/// struct tt__PTZConfigurationExtension2 operations:
/// - soap_default_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) reset members to default
/// - int soap_read_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) serialize to a sink
/// - tt__PTZConfigurationExtension2* soap_dup_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2* dst, tt__PTZConfigurationExtension2 *src) returns deep copy of tt__PTZConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationExtension2(tt__PTZConfigurationExtension2*) deep deletes tt__PTZConfigurationExtension2 data members, use only on dst after soap_dup_tt__PTZConfigurationExtension2(NULL, tt__PTZConfigurationExtension2 *dst, tt__PTZConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
/// struct tt__PTControlDirection operations:
/// - soap_default_tt__PTControlDirection(soap*, tt__PTControlDirection*) reset members to default
/// - int soap_read_tt__PTControlDirection(soap*, tt__PTControlDirection*) deserialize from a source
/// - int soap_write_tt__PTControlDirection(soap*, tt__PTControlDirection*) serialize to a sink
/// - tt__PTControlDirection* soap_dup_tt__PTControlDirection(soap*, tt__PTControlDirection* dst, tt__PTControlDirection *src) returns deep copy of tt__PTControlDirection src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirection(tt__PTControlDirection*) deep deletes tt__PTControlDirection data members, use only on dst after soap_dup_tt__PTControlDirection(NULL, tt__PTControlDirection *dst, tt__PTControlDirection *src) (use soapcpp2 -Ed)
struct tt__PTControlDirection
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlip.
    struct tt__EFlip*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":Reverse.
    struct tt__Reverse*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    struct tt__PTControlDirectionExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
/// struct tt__PTControlDirectionExtension operations:
/// - soap_default_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) reset members to default
/// - int soap_read_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) deserialize from a source
/// - int soap_write_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) serialize to a sink
/// - tt__PTControlDirectionExtension* soap_dup_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension* dst, tt__PTControlDirectionExtension *src) returns deep copy of tt__PTControlDirectionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirectionExtension(tt__PTControlDirectionExtension*) deep deletes tt__PTControlDirectionExtension data members, use only on dst after soap_dup_tt__PTControlDirectionExtension(NULL, tt__PTControlDirectionExtension *dst, tt__PTControlDirectionExtension *src) (use soapcpp2 -Ed)
struct tt__PTControlDirectionExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
/// struct tt__EFlip operations:
/// - soap_default_tt__EFlip(soap*, tt__EFlip*) reset members to default
/// - int soap_read_tt__EFlip(soap*, tt__EFlip*) deserialize from a source
/// - int soap_write_tt__EFlip(soap*, tt__EFlip*) serialize to a sink
/// - tt__EFlip* soap_dup_tt__EFlip(soap*, tt__EFlip* dst, tt__EFlip *src) returns deep copy of tt__EFlip src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EFlip(tt__EFlip*) deep deletes tt__EFlip data members, use only on dst after soap_dup_tt__EFlip(NULL, tt__EFlip *dst, tt__EFlip *src) (use soapcpp2 -Ed)
struct tt__EFlip
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
/// struct tt__Reverse operations:
/// - soap_default_tt__Reverse(soap*, tt__Reverse*) reset members to default
/// - int soap_read_tt__Reverse(soap*, tt__Reverse*) deserialize from a source
/// - int soap_write_tt__Reverse(soap*, tt__Reverse*) serialize to a sink
/// - tt__Reverse* soap_dup_tt__Reverse(soap*, tt__Reverse* dst, tt__Reverse *src) returns deep copy of tt__Reverse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Reverse(tt__Reverse*) deep deletes tt__Reverse data members, use only on dst after soap_dup_tt__Reverse(NULL, tt__Reverse *dst, tt__Reverse *src) (use soapcpp2 -Ed)
struct tt__Reverse
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
/// struct tt__PTZConfigurationOptions operations:
/// - soap_default_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) reset members to default
/// - int soap_read_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) serialize to a sink
/// - tt__PTZConfigurationOptions* soap_dup_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions* dst, tt__PTZConfigurationOptions *src) returns deep copy of tt__PTZConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationOptions(tt__PTZConfigurationOptions*) deep deletes tt__PTZConfigurationOptions data members, use only on dst after soap_dup_tt__PTZConfigurationOptions(NULL, tt__PTZConfigurationOptions *dst, tt__PTZConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
/// Element "Spaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "PTZTimeout" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            PTZTimeout                     1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    struct tt__PTControlDirectionOptions*  PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    struct tt__PTZConfigurationOptions2*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The list of acceleration ramps supported by the device. The
///   smallest acceleration value corresponds to the minimal index, the
///   highest acceleration corresponds to the maximum index.
/// </BLOCKQUOTE></PRE>
/// Attribute "PTZRamps" of XSD type "http://www.onvif.org/ver10/schema":IntAttrList.
   @tt__IntAttrList                      PTZRamps                       0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
/// struct tt__PTZConfigurationOptions2 operations:
/// - soap_default_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) reset members to default
/// - int soap_read_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) deserialize from a source
/// - int soap_write_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) serialize to a sink
/// - tt__PTZConfigurationOptions2* soap_dup_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2* dst, tt__PTZConfigurationOptions2 *src) returns deep copy of tt__PTZConfigurationOptions2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfigurationOptions2(tt__PTZConfigurationOptions2*) deep deletes tt__PTZConfigurationOptions2 data members, use only on dst after soap_dup_tt__PTZConfigurationOptions2(NULL, tt__PTZConfigurationOptions2 *dst, tt__PTZConfigurationOptions2 *src) (use soapcpp2 -Ed)
struct tt__PTZConfigurationOptions2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
/// struct tt__PTControlDirectionOptions operations:
/// - soap_default_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) reset members to default
/// - int soap_read_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) deserialize from a source
/// - int soap_write_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) serialize to a sink
/// - tt__PTControlDirectionOptions* soap_dup_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions* dst, tt__PTControlDirectionOptions *src) returns deep copy of tt__PTControlDirectionOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirectionOptions(tt__PTControlDirectionOptions*) deep deletes tt__PTControlDirectionOptions data members, use only on dst after soap_dup_tt__PTControlDirectionOptions(NULL, tt__PTControlDirectionOptions *dst, tt__PTControlDirectionOptions *src) (use soapcpp2 -Ed)
struct tt__PTControlDirectionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptions.
    struct tt__EFlipOptions*             EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptions.
    struct tt__ReverseOptions*           Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    struct tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
/// struct tt__PTControlDirectionOptionsExtension operations:
/// - soap_default_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) reset members to default
/// - int soap_read_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) serialize to a sink
/// - tt__PTControlDirectionOptionsExtension* soap_dup_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension* dst, tt__PTControlDirectionOptionsExtension *src) returns deep copy of tt__PTControlDirectionOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTControlDirectionOptionsExtension(tt__PTControlDirectionOptionsExtension*) deep deletes tt__PTControlDirectionOptionsExtension data members, use only on dst after soap_dup_tt__PTControlDirectionOptionsExtension(NULL, tt__PTControlDirectionOptionsExtension *dst, tt__PTControlDirectionOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTControlDirectionOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
/// struct tt__EFlipOptions operations:
/// - soap_default_tt__EFlipOptions(soap*, tt__EFlipOptions*) reset members to default
/// - int soap_read_tt__EFlipOptions(soap*, tt__EFlipOptions*) deserialize from a source
/// - int soap_write_tt__EFlipOptions(soap*, tt__EFlipOptions*) serialize to a sink
/// - tt__EFlipOptions* soap_dup_tt__EFlipOptions(soap*, tt__EFlipOptions* dst, tt__EFlipOptions *src) returns deep copy of tt__EFlipOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EFlipOptions(tt__EFlipOptions*) deep deletes tt__EFlipOptions data members, use only on dst after soap_dup_tt__EFlipOptions(NULL, tt__EFlipOptions *dst, tt__EFlipOptions *src) (use soapcpp2 -Ed)
struct tt__EFlipOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__EFlipMode* is 0..unbounded.
   $int                                  __sizeMode                     0;
/// Array enum tt__EFlipMode* of size 0..unbounded.
    enum tt__EFlipMode*                  Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    struct tt__EFlipOptionsExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
/// struct tt__EFlipOptionsExtension operations:
/// - soap_default_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) reset members to default
/// - int soap_read_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) deserialize from a source
/// - int soap_write_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) serialize to a sink
/// - tt__EFlipOptionsExtension* soap_dup_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension* dst, tt__EFlipOptionsExtension *src) returns deep copy of tt__EFlipOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EFlipOptionsExtension(tt__EFlipOptionsExtension*) deep deletes tt__EFlipOptionsExtension data members, use only on dst after soap_dup_tt__EFlipOptionsExtension(NULL, tt__EFlipOptionsExtension *dst, tt__EFlipOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__EFlipOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
/// struct tt__ReverseOptions operations:
/// - soap_default_tt__ReverseOptions(soap*, tt__ReverseOptions*) reset members to default
/// - int soap_read_tt__ReverseOptions(soap*, tt__ReverseOptions*) deserialize from a source
/// - int soap_write_tt__ReverseOptions(soap*, tt__ReverseOptions*) serialize to a sink
/// - tt__ReverseOptions* soap_dup_tt__ReverseOptions(soap*, tt__ReverseOptions* dst, tt__ReverseOptions *src) returns deep copy of tt__ReverseOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReverseOptions(tt__ReverseOptions*) deep deletes tt__ReverseOptions data members, use only on dst after soap_dup_tt__ReverseOptions(NULL, tt__ReverseOptions *dst, tt__ReverseOptions *src) (use soapcpp2 -Ed)
struct tt__ReverseOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ReverseMode* is 0..unbounded.
   $int                                  __sizeMode                     0;
/// Array enum tt__ReverseMode* of size 0..unbounded.
    enum tt__ReverseMode*                Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    struct tt__ReverseOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
/// struct tt__ReverseOptionsExtension operations:
/// - soap_default_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) reset members to default
/// - int soap_read_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) deserialize from a source
/// - int soap_write_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) serialize to a sink
/// - tt__ReverseOptionsExtension* soap_dup_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension* dst, tt__ReverseOptionsExtension *src) returns deep copy of tt__ReverseOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReverseOptionsExtension(tt__ReverseOptionsExtension*) deep deletes tt__ReverseOptionsExtension data members, use only on dst after soap_dup_tt__ReverseOptionsExtension(NULL, tt__ReverseOptionsExtension *dst, tt__ReverseOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__ReverseOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
/// struct tt__PanTiltLimits operations:
/// - soap_default_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) reset members to default
/// - int soap_read_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) deserialize from a source
/// - int soap_write_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) serialize to a sink
/// - tt__PanTiltLimits* soap_dup_tt__PanTiltLimits(soap*, tt__PanTiltLimits* dst, tt__PanTiltLimits *src) returns deep copy of tt__PanTiltLimits src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PanTiltLimits(tt__PanTiltLimits*) deep deletes tt__PanTiltLimits data members, use only on dst after soap_dup_tt__PanTiltLimits(NULL, tt__PanTiltLimits *dst, tt__PanTiltLimits *src) (use soapcpp2 -Ed)
struct tt__PanTiltLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
/// struct tt__ZoomLimits operations:
/// - soap_default_tt__ZoomLimits(soap*, tt__ZoomLimits*) reset members to default
/// - int soap_read_tt__ZoomLimits(soap*, tt__ZoomLimits*) deserialize from a source
/// - int soap_write_tt__ZoomLimits(soap*, tt__ZoomLimits*) serialize to a sink
/// - tt__ZoomLimits* soap_dup_tt__ZoomLimits(soap*, tt__ZoomLimits* dst, tt__ZoomLimits *src) returns deep copy of tt__ZoomLimits src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ZoomLimits(tt__ZoomLimits*) deep deletes tt__ZoomLimits data members, use only on dst after soap_dup_tt__ZoomLimits(NULL, tt__ZoomLimits *dst, tt__ZoomLimits *src) (use soapcpp2 -Ed)
struct tt__ZoomLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
/// struct tt__PTZSpaces operations:
/// - soap_default_tt__PTZSpaces(soap*, tt__PTZSpaces*) reset members to default
/// - int soap_read_tt__PTZSpaces(soap*, tt__PTZSpaces*) deserialize from a source
/// - int soap_write_tt__PTZSpaces(soap*, tt__PTZSpaces*) serialize to a sink
/// - tt__PTZSpaces* soap_dup_tt__PTZSpaces(soap*, tt__PTZSpaces* dst, tt__PTZSpaces *src) returns deep copy of tt__PTZSpaces src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpaces(tt__PTZSpaces*) deep deletes tt__PTZSpaces data members, use only on dst after soap_dup_tt__PTZSpaces(NULL, tt__PTZSpaces *dst, tt__PTZSpaces *src) (use soapcpp2 -Ed)
struct tt__PTZSpaces
{
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeAbsolutePanTiltPositionSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       AbsolutePanTiltPositionSpace   0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeAbsoluteZoomPositionSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       AbsoluteZoomPositionSpace      0;
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeRelativePanTiltTranslationSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       RelativePanTiltTranslationSpace 0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeRelativeZoomTranslationSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       RelativeZoomTranslationSpace   0;
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeContinuousPanTiltVelocitySpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       ContinuousPanTiltVelocitySpace 0;
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeContinuousZoomVelocitySpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ContinuousZoomVelocitySpace    0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizePanTiltSpeedSpace        0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       PanTiltSpeedSpace              0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeZoomSpeedSpace           0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ZoomSpeedSpace                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    struct tt__PTZSpacesExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
/// struct tt__PTZSpacesExtension operations:
/// - soap_default_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) reset members to default
/// - int soap_read_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) deserialize from a source
/// - int soap_write_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) serialize to a sink
/// - tt__PTZSpacesExtension* soap_dup_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension* dst, tt__PTZSpacesExtension *src) returns deep copy of tt__PTZSpacesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpacesExtension(tt__PTZSpacesExtension*) deep deletes tt__PTZSpacesExtension data members, use only on dst after soap_dup_tt__PTZSpacesExtension(NULL, tt__PTZSpacesExtension *dst, tt__PTZSpacesExtension *src) (use soapcpp2 -Ed)
struct tt__PTZSpacesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
/// struct tt__Space2DDescription operations:
/// - soap_default_tt__Space2DDescription(soap*, tt__Space2DDescription*) reset members to default
/// - int soap_read_tt__Space2DDescription(soap*, tt__Space2DDescription*) deserialize from a source
/// - int soap_write_tt__Space2DDescription(soap*, tt__Space2DDescription*) serialize to a sink
/// - tt__Space2DDescription* soap_dup_tt__Space2DDescription(soap*, tt__Space2DDescription* dst, tt__Space2DDescription *src) returns deep copy of tt__Space2DDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Space2DDescription(tt__Space2DDescription*) deep deletes tt__Space2DDescription data members, use only on dst after soap_dup_tt__Space2DDescription(NULL, tt__Space2DDescription *dst, tt__Space2DDescription *src) (use soapcpp2 -Ed)
struct tt__Space2DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
/// struct tt__Space1DDescription operations:
/// - soap_default_tt__Space1DDescription(soap*, tt__Space1DDescription*) reset members to default
/// - int soap_read_tt__Space1DDescription(soap*, tt__Space1DDescription*) deserialize from a source
/// - int soap_write_tt__Space1DDescription(soap*, tt__Space1DDescription*) serialize to a sink
/// - tt__Space1DDescription* soap_dup_tt__Space1DDescription(soap*, tt__Space1DDescription* dst, tt__Space1DDescription *src) returns deep copy of tt__Space1DDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Space1DDescription(tt__Space1DDescription*) deep deletes tt__Space1DDescription data members, use only on dst after soap_dup_tt__Space1DDescription(NULL, tt__Space1DDescription *dst, tt__Space1DDescription *src) (use soapcpp2 -Ed)
struct tt__Space1DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
/// struct tt__Vector2D operations:
/// - soap_default_tt__Vector2D(soap*, tt__Vector2D*) reset members to default
/// - int soap_read_tt__Vector2D(soap*, tt__Vector2D*) deserialize from a source
/// - int soap_write_tt__Vector2D(soap*, tt__Vector2D*) serialize to a sink
/// - tt__Vector2D* soap_dup_tt__Vector2D(soap*, tt__Vector2D* dst, tt__Vector2D *src) returns deep copy of tt__Vector2D src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector2D(tt__Vector2D*) deep deletes tt__Vector2D data members, use only on dst after soap_dup_tt__Vector2D(NULL, tt__Vector2D *dst, tt__Vector2D *src) (use soapcpp2 -Ed)
struct tt__Vector2D
{
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:float.
   @float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
/// struct tt__Vector1D operations:
/// - soap_default_tt__Vector1D(soap*, tt__Vector1D*) reset members to default
/// - int soap_read_tt__Vector1D(soap*, tt__Vector1D*) deserialize from a source
/// - int soap_write_tt__Vector1D(soap*, tt__Vector1D*) serialize to a sink
/// - tt__Vector1D* soap_dup_tt__Vector1D(soap*, tt__Vector1D* dst, tt__Vector1D *src) returns deep copy of tt__Vector1D src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector1D(tt__Vector1D*) deep deletes tt__Vector1D data members, use only on dst after soap_dup_tt__Vector1D(NULL, tt__Vector1D *dst, tt__Vector1D *src) (use soapcpp2 -Ed)
struct tt__Vector1D
{
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
/// struct tt__PTZVector operations:
/// - soap_default_tt__PTZVector(soap*, tt__PTZVector*) reset members to default
/// - int soap_read_tt__PTZVector(soap*, tt__PTZVector*) deserialize from a source
/// - int soap_write_tt__PTZVector(soap*, tt__PTZVector*) serialize to a sink
/// - tt__PTZVector* soap_dup_tt__PTZVector(soap*, tt__PTZVector* dst, tt__PTZVector *src) returns deep copy of tt__PTZVector src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZVector(tt__PTZVector*) deep deletes tt__PTZVector data members, use only on dst after soap_dup_tt__PTZVector(NULL, tt__PTZVector *dst, tt__PTZVector *src) (use soapcpp2 -Ed)
struct tt__PTZVector
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
/// struct tt__PTZSpeed operations:
/// - soap_default_tt__PTZSpeed(soap*, tt__PTZSpeed*) reset members to default
/// - int soap_read_tt__PTZSpeed(soap*, tt__PTZSpeed*) deserialize from a source
/// - int soap_write_tt__PTZSpeed(soap*, tt__PTZSpeed*) serialize to a sink
/// - tt__PTZSpeed* soap_dup_tt__PTZSpeed(soap*, tt__PTZSpeed* dst, tt__PTZSpeed *src) returns deep copy of tt__PTZSpeed src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpeed(tt__PTZSpeed*) deep deletes tt__PTZSpeed data members, use only on dst after soap_dup_tt__PTZSpeed(NULL, tt__PTZSpeed *dst, tt__PTZSpeed *src) (use soapcpp2 -Ed)
struct tt__PTZSpeed
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
/// struct tt__PTZStatus operations:
/// - soap_default_tt__PTZStatus(soap*, tt__PTZStatus*) reset members to default
/// - int soap_read_tt__PTZStatus(soap*, tt__PTZStatus*) deserialize from a source
/// - int soap_write_tt__PTZStatus(soap*, tt__PTZStatus*) serialize to a sink
/// - tt__PTZStatus* soap_dup_tt__PTZStatus(soap*, tt__PTZStatus* dst, tt__PTZStatus *src) returns deep copy of tt__PTZStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStatus(tt__PTZStatus*) deep deletes tt__PTZStatus data members, use only on dst after soap_dup_tt__PTZStatus(NULL, tt__PTZStatus *dst, tt__PTZStatus *src) (use soapcpp2 -Ed)
struct tt__PTZStatus
{
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    struct tt__PTZMoveStatus*            MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
/// Element "UtcTime" of XSD type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
/// struct tt__PTZPreset operations:
/// - soap_default_tt__PTZPreset(soap*, tt__PTZPreset*) reset members to default
/// - int soap_read_tt__PTZPreset(soap*, tt__PTZPreset*) deserialize from a source
/// - int soap_write_tt__PTZPreset(soap*, tt__PTZPreset*) serialize to a sink
/// - tt__PTZPreset* soap_dup_tt__PTZPreset(soap*, tt__PTZPreset* dst, tt__PTZPreset *src) returns deep copy of tt__PTZPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPreset(tt__PTZPreset*) deep deletes tt__PTZPreset data members, use only on dst after soap_dup_tt__PTZPreset(NULL, tt__PTZPreset *dst, tt__PTZPreset *src) (use soapcpp2 -Ed)
struct tt__PTZPreset
{
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
/// struct tt__PTZMoveStatus operations:
/// - soap_default_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) reset members to default
/// - int soap_read_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) deserialize from a source
/// - int soap_write_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) serialize to a sink
/// - tt__PTZMoveStatus* soap_dup_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus* dst, tt__PTZMoveStatus *src) returns deep copy of tt__PTZMoveStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZMoveStatus(tt__PTZMoveStatus*) deep deletes tt__PTZMoveStatus data members, use only on dst after soap_dup_tt__PTZMoveStatus(NULL, tt__PTZMoveStatus *dst, tt__PTZMoveStatus *src) (use soapcpp2 -Ed)
struct tt__PTZMoveStatus
{

/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
/// struct tt__PresetTour operations:
/// - soap_default_tt__PresetTour(soap*, tt__PresetTour*) reset members to default
/// - int soap_read_tt__PresetTour(soap*, tt__PresetTour*) deserialize from a source
/// - int soap_write_tt__PresetTour(soap*, tt__PresetTour*) serialize to a sink
/// - tt__PresetTour* soap_dup_tt__PresetTour(soap*, tt__PresetTour* dst, tt__PresetTour *src) returns deep copy of tt__PresetTour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PresetTour(tt__PresetTour*) deep deletes tt__PresetTour data members, use only on dst after soap_dup_tt__PresetTour(NULL, tt__PresetTour *dst, tt__PresetTour *src) (use soapcpp2 -Ed)
struct tt__PresetTour
{
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    struct tt__PTZPresetTourStatus*      Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    struct tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PTZPresetTourSpot* is 0..unbounded.
   $int                                  __sizeTourSpot                 0;
/// Array struct tt__PTZPresetTourSpot* of size 0..unbounded.
    struct tt__PTZPresetTourSpot*        TourSpot                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    struct tt__PTZPresetTourExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
/// struct tt__PTZPresetTourExtension operations:
/// - soap_default_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) serialize to a sink
/// - tt__PTZPresetTourExtension* soap_dup_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension* dst, tt__PTZPresetTourExtension *src) returns deep copy of tt__PTZPresetTourExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourExtension(tt__PTZPresetTourExtension*) deep deletes tt__PTZPresetTourExtension data members, use only on dst after soap_dup_tt__PTZPresetTourExtension(NULL, tt__PTZPresetTourExtension *dst, tt__PTZPresetTourExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
/// struct tt__PTZPresetTourSpot operations:
/// - soap_default_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) reset members to default
/// - int soap_read_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) serialize to a sink
/// - tt__PTZPresetTourSpot* soap_dup_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot* dst, tt__PTZPresetTourSpot *src) returns deep copy of tt__PTZPresetTourSpot src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSpot(tt__PTZPresetTourSpot*) deep deletes tt__PTZPresetTourSpot data members, use only on dst after soap_dup_tt__PTZPresetTourSpot(NULL, tt__PTZPresetTourSpot *dst, tt__PTZPresetTourSpot *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSpot
{
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    struct tt__PTZPresetTourPresetDetail*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    struct tt__PTZPresetTourSpotExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
/// struct tt__PTZPresetTourSpotExtension operations:
/// - soap_default_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) serialize to a sink
/// - tt__PTZPresetTourSpotExtension* soap_dup_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension* dst, tt__PTZPresetTourSpotExtension *src) returns deep copy of tt__PTZPresetTourSpotExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSpotExtension(tt__PTZPresetTourSpotExtension*) deep deletes tt__PTZPresetTourSpotExtension data members, use only on dst after soap_dup_tt__PTZPresetTourSpotExtension(NULL, tt__PTZPresetTourSpotExtension *dst, tt__PTZPresetTourSpotExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSpotExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
/// struct tt__PTZPresetTourPresetDetail operations:
/// - soap_default_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) reset members to default
/// - int soap_read_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) serialize to a sink
/// - tt__PTZPresetTourPresetDetail* soap_dup_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail* dst, tt__PTZPresetTourPresetDetail *src) returns deep copy of tt__PTZPresetTourPresetDetail src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourPresetDetail(tt__PTZPresetTourPresetDetail*) deep deletes tt__PTZPresetTourPresetDetail data members, use only on dst after soap_dup_tt__PTZPresetTourPresetDetail(NULL, tt__PTZPresetTourPresetDetail *dst, tt__PTZPresetTourPresetDetail *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourPresetDetail
{
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    enum xsd__boolean                    Home                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    1;	///< Required element.
/// Element "TypeExtension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    struct tt__PTZPresetTourTypeExtension*  TypeExtension                  1;	///< Required element.
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
/// struct tt__PTZPresetTourTypeExtension operations:
/// - soap_default_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) serialize to a sink
/// - tt__PTZPresetTourTypeExtension* soap_dup_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension* dst, tt__PTZPresetTourTypeExtension *src) returns deep copy of tt__PTZPresetTourTypeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourTypeExtension(tt__PTZPresetTourTypeExtension*) deep deletes tt__PTZPresetTourTypeExtension data members, use only on dst after soap_dup_tt__PTZPresetTourTypeExtension(NULL, tt__PTZPresetTourTypeExtension *dst, tt__PTZPresetTourTypeExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourTypeExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
/// struct tt__PTZPresetTourStatus operations:
/// - soap_default_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) reset members to default
/// - int soap_read_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) serialize to a sink
/// - tt__PTZPresetTourStatus* soap_dup_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus* dst, tt__PTZPresetTourStatus *src) returns deep copy of tt__PTZPresetTourStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStatus(tt__PTZPresetTourStatus*) deep deletes tt__PTZPresetTourStatus data members, use only on dst after soap_dup_tt__PTZPresetTourStatus(NULL, tt__PTZPresetTourStatus *dst, tt__PTZPresetTourStatus *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
/// Element "CurrentTourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    struct tt__PTZPresetTourSpot*        CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    struct tt__PTZPresetTourStatusExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
/// struct tt__PTZPresetTourStatusExtension operations:
/// - soap_default_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) serialize to a sink
/// - tt__PTZPresetTourStatusExtension* soap_dup_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension* dst, tt__PTZPresetTourStatusExtension *src) returns deep copy of tt__PTZPresetTourStatusExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStatusExtension(tt__PTZPresetTourStatusExtension*) deep deletes tt__PTZPresetTourStatusExtension data members, use only on dst after soap_dup_tt__PTZPresetTourStatusExtension(NULL, tt__PTZPresetTourStatusExtension *dst, tt__PTZPresetTourStatusExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStatusExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
/// struct tt__PTZPresetTourStartingCondition operations:
/// - soap_default_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) reset members to default
/// - int soap_read_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) serialize to a sink
/// - tt__PTZPresetTourStartingCondition* soap_dup_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition* dst, tt__PTZPresetTourStartingCondition *src) returns deep copy of tt__PTZPresetTourStartingCondition src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingCondition(tt__PTZPresetTourStartingCondition*) deep deletes tt__PTZPresetTourStartingCondition data members, use only on dst after soap_dup_tt__PTZPresetTourStartingCondition(NULL, tt__PTZPresetTourStartingCondition *dst, tt__PTZPresetTourStartingCondition *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingCondition
{
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
/// Element "Direction" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    struct tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// </BLOCKQUOTE></PRE>
/// Attribute "RandomPresetOrder" of XSD type xs:boolean.
   @enum xsd__boolean*                   RandomPresetOrder              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
/// struct tt__PTZPresetTourStartingConditionExtension operations:
/// - soap_default_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) serialize to a sink
/// - tt__PTZPresetTourStartingConditionExtension* soap_dup_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension* dst, tt__PTZPresetTourStartingConditionExtension *src) returns deep copy of tt__PTZPresetTourStartingConditionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingConditionExtension(tt__PTZPresetTourStartingConditionExtension*) deep deletes tt__PTZPresetTourStartingConditionExtension data members, use only on dst after soap_dup_tt__PTZPresetTourStartingConditionExtension(NULL, tt__PTZPresetTourStartingConditionExtension *dst, tt__PTZPresetTourStartingConditionExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingConditionExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
/// struct tt__PTZPresetTourOptions operations:
/// - soap_default_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) reset members to default
/// - int soap_read_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) serialize to a sink
/// - tt__PTZPresetTourOptions* soap_dup_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions* dst, tt__PTZPresetTourOptions *src) returns deep copy of tt__PTZPresetTourOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourOptions(tt__PTZPresetTourOptions*) deep deletes tt__PTZPresetTourOptions data members, use only on dst after soap_dup_tt__PTZPresetTourOptions(NULL, tt__PTZPresetTourOptions *dst, tt__PTZPresetTourOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    struct tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
/// Element "TourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    struct tt__PTZPresetTourSpotOptions*  TourSpot                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
/// struct tt__PTZPresetTourSpotOptions operations:
/// - soap_default_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) reset members to default
/// - int soap_read_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) serialize to a sink
/// - tt__PTZPresetTourSpotOptions* soap_dup_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions* dst, tt__PTZPresetTourSpotOptions *src) returns deep copy of tt__PTZPresetTourSpotOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourSpotOptions(tt__PTZPresetTourSpotOptions*) deep deletes tt__PTZPresetTourSpotOptions data members, use only on dst after soap_dup_tt__PTZPresetTourSpotOptions(NULL, tt__PTZPresetTourSpotOptions *dst, tt__PTZPresetTourSpotOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourSpotOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    struct tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            StayTime                       1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
/// struct tt__PTZPresetTourPresetDetailOptions operations:
/// - soap_default_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) reset members to default
/// - int soap_read_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) serialize to a sink
/// - tt__PTZPresetTourPresetDetailOptions* soap_dup_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions* dst, tt__PTZPresetTourPresetDetailOptions *src) returns deep copy of tt__PTZPresetTourPresetDetailOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourPresetDetailOptions(tt__PTZPresetTourPresetDetailOptions*) deep deletes tt__PTZPresetTourPresetDetailOptions data members, use only on dst after soap_dup_tt__PTZPresetTourPresetDetailOptions(NULL, tt__PTZPresetTourPresetDetailOptions *dst, tt__PTZPresetTourPresetDetailOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourPresetDetailOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 0..unbounded.
   $int                                  __sizePresetToken              0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  PresetToken                    0;
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    enum xsd__boolean*                   Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    struct tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
/// struct tt__PTZPresetTourPresetDetailOptionsExtension operations:
/// - soap_default_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) serialize to a sink
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_dup_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension* dst, tt__PTZPresetTourPresetDetailOptionsExtension *src) returns deep copy of tt__PTZPresetTourPresetDetailOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourPresetDetailOptionsExtension(tt__PTZPresetTourPresetDetailOptionsExtension*) deep deletes tt__PTZPresetTourPresetDetailOptionsExtension data members, use only on dst after soap_dup_tt__PTZPresetTourPresetDetailOptionsExtension(NULL, tt__PTZPresetTourPresetDetailOptionsExtension *dst, tt__PTZPresetTourPresetDetailOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourPresetDetailOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
/// struct tt__PTZPresetTourStartingConditionOptions operations:
/// - soap_default_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) reset members to default
/// - int soap_read_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) serialize to a sink
/// - tt__PTZPresetTourStartingConditionOptions* soap_dup_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions* dst, tt__PTZPresetTourStartingConditionOptions *src) returns deep copy of tt__PTZPresetTourStartingConditionOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingConditionOptions(tt__PTZPresetTourStartingConditionOptions*) deep deletes tt__PTZPresetTourStartingConditionOptions data members, use only on dst after soap_dup_tt__PTZPresetTourStartingConditionOptions(NULL, tt__PTZPresetTourStartingConditionOptions *dst, tt__PTZPresetTourStartingConditionOptions *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingConditionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__PTZPresetTourDirection* is 0..unbounded.
   $int                                  __sizeDirection                0;
/// Array enum tt__PTZPresetTourDirection* of size 0..unbounded.
    enum tt__PTZPresetTourDirection*     Direction                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    struct tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
/// struct tt__PTZPresetTourStartingConditionOptionsExtension operations:
/// - soap_default_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) reset members to default
/// - int soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) deserialize from a source
/// - int soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) serialize to a sink
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_dup_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension* dst, tt__PTZPresetTourStartingConditionOptionsExtension *src) returns deep copy of tt__PTZPresetTourStartingConditionOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPresetTourStartingConditionOptionsExtension(tt__PTZPresetTourStartingConditionOptionsExtension*) deep deletes tt__PTZPresetTourStartingConditionOptionsExtension data members, use only on dst after soap_dup_tt__PTZPresetTourStartingConditionOptionsExtension(NULL, tt__PTZPresetTourStartingConditionOptionsExtension *dst, tt__PTZPresetTourStartingConditionOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__PTZPresetTourStartingConditionOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
///
/// struct tt__ImagingStatus operations:
/// - soap_default_tt__ImagingStatus(soap*, tt__ImagingStatus*) reset members to default
/// - int soap_read_tt__ImagingStatus(soap*, tt__ImagingStatus*) deserialize from a source
/// - int soap_write_tt__ImagingStatus(soap*, tt__ImagingStatus*) serialize to a sink
/// - tt__ImagingStatus* soap_dup_tt__ImagingStatus(soap*, tt__ImagingStatus* dst, tt__ImagingStatus *src) returns deep copy of tt__ImagingStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingStatus(tt__ImagingStatus*) deep deletes tt__ImagingStatus data members, use only on dst after soap_dup_tt__ImagingStatus(NULL, tt__ImagingStatus *dst, tt__ImagingStatus *src) (use soapcpp2 -Ed)
struct tt__ImagingStatus
{
/// Element "FocusStatus" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus.
    struct tt__FocusStatus*              FocusStatus                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
///
/// struct tt__FocusStatus operations:
/// - soap_default_tt__FocusStatus(soap*, tt__FocusStatus*) reset members to default
/// - int soap_read_tt__FocusStatus(soap*, tt__FocusStatus*) deserialize from a source
/// - int soap_write_tt__FocusStatus(soap*, tt__FocusStatus*) serialize to a sink
/// - tt__FocusStatus* soap_dup_tt__FocusStatus(soap*, tt__FocusStatus* dst, tt__FocusStatus *src) returns deep copy of tt__FocusStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusStatus(tt__FocusStatus*) deep deletes tt__FocusStatus data members, use only on dst after soap_dup_tt__FocusStatus(NULL, tt__FocusStatus *dst, tt__FocusStatus *src) (use soapcpp2 -Ed)
struct tt__FocusStatus
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
///
/// struct tt__FocusConfiguration operations:
/// - soap_default_tt__FocusConfiguration(soap*, tt__FocusConfiguration*) reset members to default
/// - int soap_read_tt__FocusConfiguration(soap*, tt__FocusConfiguration*) deserialize from a source
/// - int soap_write_tt__FocusConfiguration(soap*, tt__FocusConfiguration*) serialize to a sink
/// - tt__FocusConfiguration* soap_dup_tt__FocusConfiguration(soap*, tt__FocusConfiguration* dst, tt__FocusConfiguration *src) returns deep copy of tt__FocusConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusConfiguration(tt__FocusConfiguration*) deep deletes tt__FocusConfiguration data members, use only on dst after soap_dup_tt__FocusConfiguration(NULL, tt__FocusConfiguration *dst, tt__FocusConfiguration *src) (use soapcpp2 -Ed)
struct tt__FocusConfiguration
{
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
///   If set to 0.0, infinity will be used.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
///
/// struct tt__ImagingSettings operations:
/// - soap_default_tt__ImagingSettings(soap*, tt__ImagingSettings*) reset members to default
/// - int soap_read_tt__ImagingSettings(soap*, tt__ImagingSettings*) deserialize from a source
/// - int soap_write_tt__ImagingSettings(soap*, tt__ImagingSettings*) serialize to a sink
/// - tt__ImagingSettings* soap_dup_tt__ImagingSettings(soap*, tt__ImagingSettings* dst, tt__ImagingSettings *src) returns deep copy of tt__ImagingSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettings(tt__ImagingSettings*) deep deletes tt__ImagingSettings data members, use only on dst after soap_dup_tt__ImagingSettings(NULL, tt__ImagingSettings *dst, tt__ImagingSettings *src) (use soapcpp2 -Ed)
struct tt__ImagingSettings
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    struct tt__BacklightCompensation*    BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure.
    struct tt__Exposure*                 Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    struct tt__FocusConfiguration*       Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    struct tt__WideDynamicRange*         WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance.
    struct tt__WhiteBalance*             WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    struct tt__ImagingSettingsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
///
/// struct tt__ImagingSettingsExtension operations:
/// - soap_default_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension*) reset members to default
/// - int soap_read_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension*) serialize to a sink
/// - tt__ImagingSettingsExtension* soap_dup_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension* dst, tt__ImagingSettingsExtension *src) returns deep copy of tt__ImagingSettingsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension(tt__ImagingSettingsExtension*) deep deletes tt__ImagingSettingsExtension data members, use only on dst after soap_dup_tt__ImagingSettingsExtension(NULL, tt__ImagingSettingsExtension *dst, tt__ImagingSettingsExtension *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure is a complexType.
///
/// struct tt__Exposure operations:
/// - soap_default_tt__Exposure(soap*, tt__Exposure*) reset members to default
/// - int soap_read_tt__Exposure(soap*, tt__Exposure*) deserialize from a source
/// - int soap_write_tt__Exposure(soap*, tt__Exposure*) serialize to a sink
/// - tt__Exposure* soap_dup_tt__Exposure(soap*, tt__Exposure* dst, tt__Exposure *src) returns deep copy of tt__Exposure src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Exposure(tt__Exposure*) deep deletes tt__Exposure data members, use only on dst after soap_dup_tt__Exposure(NULL, tt__Exposure *dst, tt__Exposure *src) (use soapcpp2 -Ed)
struct tt__Exposure
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the NVT.</li>
///   <li>Manual Disabled exposure algorithm on the NVT.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float                                MinGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float                                MinIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float                                Gain                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
///
/// struct tt__WideDynamicRange operations:
/// - soap_default_tt__WideDynamicRange(soap*, tt__WideDynamicRange*) reset members to default
/// - int soap_read_tt__WideDynamicRange(soap*, tt__WideDynamicRange*) deserialize from a source
/// - int soap_write_tt__WideDynamicRange(soap*, tt__WideDynamicRange*) serialize to a sink
/// - tt__WideDynamicRange* soap_dup_tt__WideDynamicRange(soap*, tt__WideDynamicRange* dst, tt__WideDynamicRange *src) returns deep copy of tt__WideDynamicRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRange(tt__WideDynamicRange*) deep deletes tt__WideDynamicRange data members, use only on dst after soap_dup_tt__WideDynamicRange(NULL, tt__WideDynamicRange *dst, tt__WideDynamicRange *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRange
{
/// <PRE><BLOCKQUOTE>
///   White dynamic range (on/off)
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unitless)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
///
/// struct tt__BacklightCompensation operations:
/// - soap_default_tt__BacklightCompensation(soap*, tt__BacklightCompensation*) reset members to default
/// - int soap_read_tt__BacklightCompensation(soap*, tt__BacklightCompensation*) deserialize from a source
/// - int soap_write_tt__BacklightCompensation(soap*, tt__BacklightCompensation*) serialize to a sink
/// - tt__BacklightCompensation* soap_dup_tt__BacklightCompensation(soap*, tt__BacklightCompensation* dst, tt__BacklightCompensation *src) returns deep copy of tt__BacklightCompensation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensation(tt__BacklightCompensation*) deep deletes tt__BacklightCompensation data members, use only on dst after soap_dup_tt__BacklightCompensation(NULL, tt__BacklightCompensation *dst, tt__BacklightCompensation *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensation
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
///
/// struct tt__ImagingOptions operations:
/// - soap_default_tt__ImagingOptions(soap*, tt__ImagingOptions*) reset members to default
/// - int soap_read_tt__ImagingOptions(soap*, tt__ImagingOptions*) deserialize from a source
/// - int soap_write_tt__ImagingOptions(soap*, tt__ImagingOptions*) serialize to a sink
/// - tt__ImagingOptions* soap_dup_tt__ImagingOptions(soap*, tt__ImagingOptions* dst, tt__ImagingOptions *src) returns deep copy of tt__ImagingOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions(tt__ImagingOptions*) deep deletes tt__ImagingOptions data members, use only on dst after soap_dup_tt__ImagingOptions(NULL, tt__ImagingOptions *dst, tt__ImagingOptions *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions
{
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    struct tt__BacklightCompensationOptions*  BacklightCompensation          1;	///< Required element.
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     1;	///< Required element.
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                1;	///< Required element.
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       1;	///< Required element.
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions.
    struct tt__ExposureOptions*          Exposure                       1;	///< Required element.
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions.
    struct tt__FocusOptions*             Focus                          1;	///< Required element.
/// Size of array of enum tt__IrCutFilterMode* is 1..unbounded.
   $int                                  __sizeIrCutFilterModes         1;
/// Array enum tt__IrCutFilterMode* of size 1..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               1;
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      1;	///< Required element.
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    struct tt__WideDynamicRangeOptions*  WideDynamicRange               1;	///< Required element.
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    struct tt__WhiteBalanceOptions*      WhiteBalance                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
///
/// struct tt__WideDynamicRangeOptions operations:
/// - soap_default_tt__WideDynamicRangeOptions(soap*, tt__WideDynamicRangeOptions*) reset members to default
/// - int soap_read_tt__WideDynamicRangeOptions(soap*, tt__WideDynamicRangeOptions*) deserialize from a source
/// - int soap_write_tt__WideDynamicRangeOptions(soap*, tt__WideDynamicRangeOptions*) serialize to a sink
/// - tt__WideDynamicRangeOptions* soap_dup_tt__WideDynamicRangeOptions(soap*, tt__WideDynamicRangeOptions* dst, tt__WideDynamicRangeOptions *src) returns deep copy of tt__WideDynamicRangeOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRangeOptions(tt__WideDynamicRangeOptions*) deep deletes tt__WideDynamicRangeOptions data members, use only on dst after soap_dup_tt__WideDynamicRangeOptions(NULL, tt__WideDynamicRangeOptions *dst, tt__WideDynamicRangeOptions *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRangeOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
///
/// struct tt__BacklightCompensationOptions operations:
/// - soap_default_tt__BacklightCompensationOptions(soap*, tt__BacklightCompensationOptions*) reset members to default
/// - int soap_read_tt__BacklightCompensationOptions(soap*, tt__BacklightCompensationOptions*) deserialize from a source
/// - int soap_write_tt__BacklightCompensationOptions(soap*, tt__BacklightCompensationOptions*) serialize to a sink
/// - tt__BacklightCompensationOptions* soap_dup_tt__BacklightCompensationOptions(soap*, tt__BacklightCompensationOptions* dst, tt__BacklightCompensationOptions *src) returns deep copy of tt__BacklightCompensationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensationOptions(tt__BacklightCompensationOptions*) deep deletes tt__BacklightCompensationOptions data members, use only on dst after soap_dup_tt__BacklightCompensationOptions(NULL, tt__BacklightCompensationOptions *dst, tt__BacklightCompensationOptions *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensationOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
///
/// struct tt__FocusOptions operations:
/// - soap_default_tt__FocusOptions(soap*, tt__FocusOptions*) reset members to default
/// - int soap_read_tt__FocusOptions(soap*, tt__FocusOptions*) deserialize from a source
/// - int soap_write_tt__FocusOptions(soap*, tt__FocusOptions*) serialize to a sink
/// - tt__FocusOptions* soap_dup_tt__FocusOptions(soap*, tt__FocusOptions* dst, tt__FocusOptions *src) returns deep copy of tt__FocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusOptions(tt__FocusOptions*) deep deletes tt__FocusOptions data members, use only on dst after soap_dup_tt__FocusOptions(NULL, tt__FocusOptions *dst, tt__FocusOptions *src) (use soapcpp2 -Ed)
struct tt__FocusOptions
{
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
   $int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   1;	///< Required element.
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      1;	///< Required element.
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
///
/// struct tt__ExposureOptions operations:
/// - soap_default_tt__ExposureOptions(soap*, tt__ExposureOptions*) reset members to default
/// - int soap_read_tt__ExposureOptions(soap*, tt__ExposureOptions*) deserialize from a source
/// - int soap_write_tt__ExposureOptions(soap*, tt__ExposureOptions*) serialize to a sink
/// - tt__ExposureOptions* soap_dup_tt__ExposureOptions(soap*, tt__ExposureOptions* dst, tt__ExposureOptions *src) returns deep copy of tt__ExposureOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ExposureOptions(tt__ExposureOptions*) deep deletes tt__ExposureOptions data members, use only on dst after soap_dup_tt__ExposureOptions(NULL, tt__ExposureOptions *dst, tt__ExposureOptions *src) (use soapcpp2 -Ed)
struct tt__ExposureOptions
{
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;
/// Size of array of enum tt__ExposurePriority* is 1..unbounded.
   $int                                  __sizePriority                 1;
/// Array enum tt__ExposurePriority* of size 1..unbounded.
    enum tt__ExposurePriority*           Priority                       1;
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                1;	///< Required element.
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                1;	///< Required element.
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        1;	///< Required element.
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        1;	///< Required element.
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        1;	///< Required element.
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        1;	///< Required element.
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   1;	///< Required element.
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           1;	///< Required element.
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
///
/// struct tt__WhiteBalanceOptions operations:
/// - soap_default_tt__WhiteBalanceOptions(soap*, tt__WhiteBalanceOptions*) reset members to default
/// - int soap_read_tt__WhiteBalanceOptions(soap*, tt__WhiteBalanceOptions*) deserialize from a source
/// - int soap_write_tt__WhiteBalanceOptions(soap*, tt__WhiteBalanceOptions*) serialize to a sink
/// - tt__WhiteBalanceOptions* soap_dup_tt__WhiteBalanceOptions(soap*, tt__WhiteBalanceOptions* dst, tt__WhiteBalanceOptions *src) returns deep copy of tt__WhiteBalanceOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalanceOptions(tt__WhiteBalanceOptions*) deep deletes tt__WhiteBalanceOptions data members, use only on dst after soap_dup_tt__WhiteBalanceOptions(NULL, tt__WhiteBalanceOptions *dst, tt__WhiteBalanceOptions *src) (use soapcpp2 -Ed)
struct tt__WhiteBalanceOptions
{
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         1;	///< Required element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
///
/// struct tt__FocusMove operations:
/// - soap_default_tt__FocusMove(soap*, tt__FocusMove*) reset members to default
/// - int soap_read_tt__FocusMove(soap*, tt__FocusMove*) deserialize from a source
/// - int soap_write_tt__FocusMove(soap*, tt__FocusMove*) serialize to a sink
/// - tt__FocusMove* soap_dup_tt__FocusMove(soap*, tt__FocusMove* dst, tt__FocusMove *src) returns deep copy of tt__FocusMove src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusMove(tt__FocusMove*) deep deletes tt__FocusMove data members, use only on dst after soap_dup_tt__FocusMove(NULL, tt__FocusMove *dst, tt__FocusMove *src) (use soapcpp2 -Ed)
struct tt__FocusMove
{
/// <PRE><BLOCKQUOTE>
///   Parameters for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    struct tt__AbsoluteFocus*            Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameters for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocus.
    struct tt__RelativeFocus*            Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter for the continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    struct tt__ContinuousFocus*          Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
///
/// struct tt__AbsoluteFocus operations:
/// - soap_default_tt__AbsoluteFocus(soap*, tt__AbsoluteFocus*) reset members to default
/// - int soap_read_tt__AbsoluteFocus(soap*, tt__AbsoluteFocus*) deserialize from a source
/// - int soap_write_tt__AbsoluteFocus(soap*, tt__AbsoluteFocus*) serialize to a sink
/// - tt__AbsoluteFocus* soap_dup_tt__AbsoluteFocus(soap*, tt__AbsoluteFocus* dst, tt__AbsoluteFocus *src) returns deep copy of tt__AbsoluteFocus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AbsoluteFocus(tt__AbsoluteFocus*) deep deletes tt__AbsoluteFocus data members, use only on dst after soap_dup_tt__AbsoluteFocus(NULL, tt__AbsoluteFocus *dst, tt__AbsoluteFocus *src) (use soapcpp2 -Ed)
struct tt__AbsoluteFocus
{
/// <PRE><BLOCKQUOTE>
///   Position parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
///
/// struct tt__RelativeFocus operations:
/// - soap_default_tt__RelativeFocus(soap*, tt__RelativeFocus*) reset members to default
/// - int soap_read_tt__RelativeFocus(soap*, tt__RelativeFocus*) deserialize from a source
/// - int soap_write_tt__RelativeFocus(soap*, tt__RelativeFocus*) serialize to a sink
/// - tt__RelativeFocus* soap_dup_tt__RelativeFocus(soap*, tt__RelativeFocus* dst, tt__RelativeFocus *src) returns deep copy of tt__RelativeFocus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelativeFocus(tt__RelativeFocus*) deep deletes tt__RelativeFocus data members, use only on dst after soap_dup_tt__RelativeFocus(NULL, tt__RelativeFocus *dst, tt__RelativeFocus *src) (use soapcpp2 -Ed)
struct tt__RelativeFocus
{
/// <PRE><BLOCKQUOTE>
///   Distance parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type xs:float.
    float                                Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
///
/// struct tt__ContinuousFocus operations:
/// - soap_default_tt__ContinuousFocus(soap*, tt__ContinuousFocus*) reset members to default
/// - int soap_read_tt__ContinuousFocus(soap*, tt__ContinuousFocus*) deserialize from a source
/// - int soap_write_tt__ContinuousFocus(soap*, tt__ContinuousFocus*) serialize to a sink
/// - tt__ContinuousFocus* soap_dup_tt__ContinuousFocus(soap*, tt__ContinuousFocus* dst, tt__ContinuousFocus *src) returns deep copy of tt__ContinuousFocus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ContinuousFocus(tt__ContinuousFocus*) deep deletes tt__ContinuousFocus data members, use only on dst after soap_dup_tt__ContinuousFocus(NULL, tt__ContinuousFocus *dst, tt__ContinuousFocus *src) (use soapcpp2 -Ed)
struct tt__ContinuousFocus
{
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the Continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
///
/// struct tt__MoveOptions operations:
/// - soap_default_tt__MoveOptions(soap*, tt__MoveOptions*) reset members to default
/// - int soap_read_tt__MoveOptions(soap*, tt__MoveOptions*) deserialize from a source
/// - int soap_write_tt__MoveOptions(soap*, tt__MoveOptions*) serialize to a sink
/// - tt__MoveOptions* soap_dup_tt__MoveOptions(soap*, tt__MoveOptions* dst, tt__MoveOptions *src) returns deep copy of tt__MoveOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MoveOptions(tt__MoveOptions*) deep deletes tt__MoveOptions data members, use only on dst after soap_dup_tt__MoveOptions(NULL, tt__MoveOptions *dst, tt__MoveOptions *src) (use soapcpp2 -Ed)
struct tt__MoveOptions
{
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    struct tt__RelativeFocusOptions*     Relative                       0;	///< Optional element.
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
///
/// struct tt__AbsoluteFocusOptions operations:
/// - soap_default_tt__AbsoluteFocusOptions(soap*, tt__AbsoluteFocusOptions*) reset members to default
/// - int soap_read_tt__AbsoluteFocusOptions(soap*, tt__AbsoluteFocusOptions*) deserialize from a source
/// - int soap_write_tt__AbsoluteFocusOptions(soap*, tt__AbsoluteFocusOptions*) serialize to a sink
/// - tt__AbsoluteFocusOptions* soap_dup_tt__AbsoluteFocusOptions(soap*, tt__AbsoluteFocusOptions* dst, tt__AbsoluteFocusOptions *src) returns deep copy of tt__AbsoluteFocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AbsoluteFocusOptions(tt__AbsoluteFocusOptions*) deep deletes tt__AbsoluteFocusOptions data members, use only on dst after soap_dup_tt__AbsoluteFocusOptions(NULL, tt__AbsoluteFocusOptions *dst, tt__AbsoluteFocusOptions *src) (use soapcpp2 -Ed)
struct tt__AbsoluteFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
///
/// struct tt__RelativeFocusOptions operations:
/// - soap_default_tt__RelativeFocusOptions(soap*, tt__RelativeFocusOptions*) reset members to default
/// - int soap_read_tt__RelativeFocusOptions(soap*, tt__RelativeFocusOptions*) deserialize from a source
/// - int soap_write_tt__RelativeFocusOptions(soap*, tt__RelativeFocusOptions*) serialize to a sink
/// - tt__RelativeFocusOptions* soap_dup_tt__RelativeFocusOptions(soap*, tt__RelativeFocusOptions* dst, tt__RelativeFocusOptions *src) returns deep copy of tt__RelativeFocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelativeFocusOptions(tt__RelativeFocusOptions*) deep deletes tt__RelativeFocusOptions data members, use only on dst after soap_dup_tt__RelativeFocusOptions(NULL, tt__RelativeFocusOptions *dst, tt__RelativeFocusOptions *src) (use soapcpp2 -Ed)
struct tt__RelativeFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
///
/// struct tt__ContinuousFocusOptions operations:
/// - soap_default_tt__ContinuousFocusOptions(soap*, tt__ContinuousFocusOptions*) reset members to default
/// - int soap_read_tt__ContinuousFocusOptions(soap*, tt__ContinuousFocusOptions*) deserialize from a source
/// - int soap_write_tt__ContinuousFocusOptions(soap*, tt__ContinuousFocusOptions*) serialize to a sink
/// - tt__ContinuousFocusOptions* soap_dup_tt__ContinuousFocusOptions(soap*, tt__ContinuousFocusOptions* dst, tt__ContinuousFocusOptions *src) returns deep copy of tt__ContinuousFocusOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ContinuousFocusOptions(tt__ContinuousFocusOptions*) deep deletes tt__ContinuousFocusOptions data members, use only on dst after soap_dup_tt__ContinuousFocusOptions(NULL, tt__ContinuousFocusOptions *dst, tt__ContinuousFocusOptions *src) (use soapcpp2 -Ed)
struct tt__ContinuousFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
///
/// struct tt__WhiteBalance operations:
/// - soap_default_tt__WhiteBalance(soap*, tt__WhiteBalance*) reset members to default
/// - int soap_read_tt__WhiteBalance(soap*, tt__WhiteBalance*) deserialize from a source
/// - int soap_write_tt__WhiteBalance(soap*, tt__WhiteBalance*) serialize to a sink
/// - tt__WhiteBalance* soap_dup_tt__WhiteBalance(soap*, tt__WhiteBalance* dst, tt__WhiteBalance *src) returns deep copy of tt__WhiteBalance src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalance(tt__WhiteBalance*) deep deletes tt__WhiteBalance data members, use only on dst after soap_dup_tt__WhiteBalance(NULL, tt__WhiteBalance *dst, tt__WhiteBalance *src) (use soapcpp2 -Ed)
struct tt__WhiteBalance
{
/// <PRE><BLOCKQUOTE>
///   Auto whitebalancing mode (auto/manual).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float                                CrGain                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float                                CbGain                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
///
/// struct tt__ImagingStatus20 operations:
/// - soap_default_tt__ImagingStatus20(soap*, tt__ImagingStatus20*) reset members to default
/// - int soap_read_tt__ImagingStatus20(soap*, tt__ImagingStatus20*) deserialize from a source
/// - int soap_write_tt__ImagingStatus20(soap*, tt__ImagingStatus20*) serialize to a sink
/// - tt__ImagingStatus20* soap_dup_tt__ImagingStatus20(soap*, tt__ImagingStatus20* dst, tt__ImagingStatus20 *src) returns deep copy of tt__ImagingStatus20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingStatus20(tt__ImagingStatus20*) deep deletes tt__ImagingStatus20 data members, use only on dst after soap_dup_tt__ImagingStatus20(NULL, tt__ImagingStatus20 *dst, tt__ImagingStatus20 *src) (use soapcpp2 -Ed)
struct tt__ImagingStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "FocusStatus20" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20.
    struct tt__FocusStatus20*            FocusStatus20                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    struct tt__ImagingStatus20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
///
/// struct tt__ImagingStatus20Extension operations:
/// - soap_default_tt__ImagingStatus20Extension(soap*, tt__ImagingStatus20Extension*) reset members to default
/// - int soap_read_tt__ImagingStatus20Extension(soap*, tt__ImagingStatus20Extension*) deserialize from a source
/// - int soap_write_tt__ImagingStatus20Extension(soap*, tt__ImagingStatus20Extension*) serialize to a sink
/// - tt__ImagingStatus20Extension* soap_dup_tt__ImagingStatus20Extension(soap*, tt__ImagingStatus20Extension* dst, tt__ImagingStatus20Extension *src) returns deep copy of tt__ImagingStatus20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingStatus20Extension(tt__ImagingStatus20Extension*) deep deletes tt__ImagingStatus20Extension data members, use only on dst after soap_dup_tt__ImagingStatus20Extension(NULL, tt__ImagingStatus20Extension *dst, tt__ImagingStatus20Extension *src) (use soapcpp2 -Ed)
struct tt__ImagingStatus20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
///
/// struct tt__FocusStatus20 operations:
/// - soap_default_tt__FocusStatus20(soap*, tt__FocusStatus20*) reset members to default
/// - int soap_read_tt__FocusStatus20(soap*, tt__FocusStatus20*) deserialize from a source
/// - int soap_write_tt__FocusStatus20(soap*, tt__FocusStatus20*) serialize to a sink
/// - tt__FocusStatus20* soap_dup_tt__FocusStatus20(soap*, tt__FocusStatus20* dst, tt__FocusStatus20 *src) returns deep copy of tt__FocusStatus20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusStatus20(tt__FocusStatus20*) deep deletes tt__FocusStatus20 data members, use only on dst after soap_dup_tt__FocusStatus20(NULL, tt__FocusStatus20 *dst, tt__FocusStatus20 *src) (use soapcpp2 -Ed)
struct tt__FocusStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    struct tt__FocusStatus20Extension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
///
/// struct tt__FocusStatus20Extension operations:
/// - soap_default_tt__FocusStatus20Extension(soap*, tt__FocusStatus20Extension*) reset members to default
/// - int soap_read_tt__FocusStatus20Extension(soap*, tt__FocusStatus20Extension*) deserialize from a source
/// - int soap_write_tt__FocusStatus20Extension(soap*, tt__FocusStatus20Extension*) serialize to a sink
/// - tt__FocusStatus20Extension* soap_dup_tt__FocusStatus20Extension(soap*, tt__FocusStatus20Extension* dst, tt__FocusStatus20Extension *src) returns deep copy of tt__FocusStatus20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusStatus20Extension(tt__FocusStatus20Extension*) deep deletes tt__FocusStatus20Extension data members, use only on dst after soap_dup_tt__FocusStatus20Extension(NULL, tt__FocusStatus20Extension *dst, tt__FocusStatus20Extension *src) (use soapcpp2 -Ed)
struct tt__FocusStatus20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// </BLOCKQUOTE></PRE>
/// struct tt__ImagingSettings20 operations:
/// - soap_default_tt__ImagingSettings20(soap*, tt__ImagingSettings20*) reset members to default
/// - int soap_read_tt__ImagingSettings20(soap*, tt__ImagingSettings20*) deserialize from a source
/// - int soap_write_tt__ImagingSettings20(soap*, tt__ImagingSettings20*) serialize to a sink
/// - tt__ImagingSettings20* soap_dup_tt__ImagingSettings20(soap*, tt__ImagingSettings20* dst, tt__ImagingSettings20 *src) returns deep copy of tt__ImagingSettings20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettings20(tt__ImagingSettings20*) deep deletes tt__ImagingSettings20 data members, use only on dst after soap_dup_tt__ImagingSettings20(NULL, tt__ImagingSettings20 *dst, tt__ImagingSettings20 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettings20
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    struct tt__BacklightCompensation20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure20.
    struct tt__Exposure20*               Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    struct tt__FocusConfiguration20*     Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    struct tt__WideDynamicRange20*       WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    struct tt__WhiteBalance20*           WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    struct tt__ImagingSettingsExtension20*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
///
/// struct tt__ImagingSettingsExtension20 operations:
/// - soap_default_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20*) reset members to default
/// - int soap_read_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20*) serialize to a sink
/// - tt__ImagingSettingsExtension20* soap_dup_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20* dst, tt__ImagingSettingsExtension20 *src) returns deep copy of tt__ImagingSettingsExtension20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension20(tt__ImagingSettingsExtension20*) deep deletes tt__ImagingSettingsExtension20 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension20(NULL, tt__ImagingSettingsExtension20 *dst, tt__ImagingSettingsExtension20 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension20
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilization.
    struct tt__ImageStabilization*       ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    struct tt__ImagingSettingsExtension202*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
///
/// struct tt__ImagingSettingsExtension202 operations:
/// - soap_default_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202*) reset members to default
/// - int soap_read_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202*) serialize to a sink
/// - tt__ImagingSettingsExtension202* soap_dup_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202* dst, tt__ImagingSettingsExtension202 *src) returns deep copy of tt__ImagingSettingsExtension202 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension202(tt__ImagingSettingsExtension202*) deep deletes tt__ImagingSettingsExtension202 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension202(NULL, tt__ImagingSettingsExtension202 *dst, tt__ImagingSettingsExtension202 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension202
{
/// <PRE><BLOCKQUOTE>
///   An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IrCutFilterAutoAdjustment* is 0..unbounded.
   $int                                  __sizeIrCutFilterAutoAdjustment 0;
/// Array struct tt__IrCutFilterAutoAdjustment* of size 0..unbounded.
    struct tt__IrCutFilterAutoAdjustment*  IrCutFilterAutoAdjustment      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203.
    struct tt__ImagingSettingsExtension203*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is a complexType.
///
/// struct tt__ImagingSettingsExtension203 operations:
/// - soap_default_tt__ImagingSettingsExtension203(soap*, tt__ImagingSettingsExtension203*) reset members to default
/// - int soap_read_tt__ImagingSettingsExtension203(soap*, tt__ImagingSettingsExtension203*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension203(soap*, tt__ImagingSettingsExtension203*) serialize to a sink
/// - tt__ImagingSettingsExtension203* soap_dup_tt__ImagingSettingsExtension203(soap*, tt__ImagingSettingsExtension203* dst, tt__ImagingSettingsExtension203 *src) returns deep copy of tt__ImagingSettingsExtension203 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension203(tt__ImagingSettingsExtension203*) deep deletes tt__ImagingSettingsExtension203 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension203(NULL, tt__ImagingSettingsExtension203 *dst, tt__ImagingSettingsExtension203 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension203
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Contrast Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "ToneCompensation" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensation.
    struct tt__ToneCompensation*         ToneCompensation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Defogging.
/// </BLOCKQUOTE></PRE>
/// Element "Defogging" of XSD type "http://www.onvif.org/ver10/schema":Defogging.
    struct tt__Defogging*                Defogging                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Noise Reduction.
/// </BLOCKQUOTE></PRE>
/// Element "NoiseReduction" of XSD type "http://www.onvif.org/ver10/schema":NoiseReduction.
    struct tt__NoiseReduction*           NoiseReduction                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204.
    struct tt__ImagingSettingsExtension204*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is a complexType.
///
/// struct tt__ImagingSettingsExtension204 operations:
/// - soap_default_tt__ImagingSettingsExtension204(soap*, tt__ImagingSettingsExtension204*) reset members to default
/// - int soap_read_tt__ImagingSettingsExtension204(soap*, tt__ImagingSettingsExtension204*) deserialize from a source
/// - int soap_write_tt__ImagingSettingsExtension204(soap*, tt__ImagingSettingsExtension204*) serialize to a sink
/// - tt__ImagingSettingsExtension204* soap_dup_tt__ImagingSettingsExtension204(soap*, tt__ImagingSettingsExtension204* dst, tt__ImagingSettingsExtension204 *src) returns deep copy of tt__ImagingSettingsExtension204 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingSettingsExtension204(tt__ImagingSettingsExtension204*) deep deletes tt__ImagingSettingsExtension204 data members, use only on dst after soap_dup_tt__ImagingSettingsExtension204(NULL, tt__ImagingSettingsExtension204 *dst, tt__ImagingSettingsExtension204 *src) (use soapcpp2 -Ed)
struct tt__ImagingSettingsExtension204
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
///
/// struct tt__ImageStabilization operations:
/// - soap_default_tt__ImageStabilization(soap*, tt__ImageStabilization*) reset members to default
/// - int soap_read_tt__ImageStabilization(soap*, tt__ImageStabilization*) deserialize from a source
/// - int soap_write_tt__ImageStabilization(soap*, tt__ImageStabilization*) serialize to a sink
/// - tt__ImageStabilization* soap_dup_tt__ImageStabilization(soap*, tt__ImageStabilization* dst, tt__ImageStabilization *src) returns deep copy of tt__ImageStabilization src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilization(tt__ImageStabilization*) deep deletes tt__ImageStabilization data members, use only on dst after soap_dup_tt__ImageStabilization(NULL, tt__ImageStabilization *dst, tt__ImageStabilization *src) (use soapcpp2 -Ed)
struct tt__ImageStabilization
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    struct tt__ImageStabilizationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
///
/// struct tt__ImageStabilizationExtension operations:
/// - soap_default_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension*) reset members to default
/// - int soap_read_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension*) deserialize from a source
/// - int soap_write_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension*) serialize to a sink
/// - tt__ImageStabilizationExtension* soap_dup_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension* dst, tt__ImageStabilizationExtension *src) returns deep copy of tt__ImageStabilizationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilizationExtension(tt__ImageStabilizationExtension*) deep deletes tt__ImageStabilizationExtension data members, use only on dst after soap_dup_tt__ImageStabilizationExtension(NULL, tt__ImageStabilizationExtension *dst, tt__ImageStabilizationExtension *src) (use soapcpp2 -Ed)
struct tt__ImageStabilizationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is a complexType.
///
/// struct tt__IrCutFilterAutoAdjustment operations:
/// - soap_default_tt__IrCutFilterAutoAdjustment(soap*, tt__IrCutFilterAutoAdjustment*) reset members to default
/// - int soap_read_tt__IrCutFilterAutoAdjustment(soap*, tt__IrCutFilterAutoAdjustment*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustment(soap*, tt__IrCutFilterAutoAdjustment*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustment* soap_dup_tt__IrCutFilterAutoAdjustment(soap*, tt__IrCutFilterAutoAdjustment* dst, tt__IrCutFilterAutoAdjustment *src) returns deep copy of tt__IrCutFilterAutoAdjustment src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustment(tt__IrCutFilterAutoAdjustment*) deep deletes tt__IrCutFilterAutoAdjustment data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustment(NULL, tt__IrCutFilterAutoAdjustment *dst, tt__IrCutFilterAutoAdjustment *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustment
{
/// <PRE><BLOCKQUOTE>
///   Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryType" of XSD type xs:string.
    char*                                BoundaryType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryOffset" of XSD type xs:float.
    float*                               BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.
/// </BLOCKQUOTE></PRE>
/// Element "ResponseTime" of XSD type xs:duration.
    xsd__duration*                       ResponseTime                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension.
    struct tt__IrCutFilterAutoAdjustmentExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is a complexType.
///
/// struct tt__IrCutFilterAutoAdjustmentExtension operations:
/// - soap_default_tt__IrCutFilterAutoAdjustmentExtension(soap*, tt__IrCutFilterAutoAdjustmentExtension*) reset members to default
/// - int soap_read_tt__IrCutFilterAutoAdjustmentExtension(soap*, tt__IrCutFilterAutoAdjustmentExtension*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustmentExtension(soap*, tt__IrCutFilterAutoAdjustmentExtension*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustmentExtension* soap_dup_tt__IrCutFilterAutoAdjustmentExtension(soap*, tt__IrCutFilterAutoAdjustmentExtension* dst, tt__IrCutFilterAutoAdjustmentExtension *src) returns deep copy of tt__IrCutFilterAutoAdjustmentExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustmentExtension(tt__IrCutFilterAutoAdjustmentExtension*) deep deletes tt__IrCutFilterAutoAdjustmentExtension data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustmentExtension(NULL, tt__IrCutFilterAutoAdjustmentExtension *dst, tt__IrCutFilterAutoAdjustmentExtension *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustmentExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether WDR mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
/// struct tt__WideDynamicRange20 operations:
/// - soap_default_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20*) reset members to default
/// - int soap_read_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20*) deserialize from a source
/// - int soap_write_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20*) serialize to a sink
/// - tt__WideDynamicRange20* soap_dup_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20* dst, tt__WideDynamicRange20 *src) returns deep copy of tt__WideDynamicRange20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRange20(tt__WideDynamicRange20*) deep deletes tt__WideDynamicRange20 data members, use only on dst after soap_dup_tt__WideDynamicRange20(NULL, tt__WideDynamicRange20 *dst, tt__WideDynamicRange20 *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRange20
{
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether BLC mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
/// struct tt__BacklightCompensation20 operations:
/// - soap_default_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20*) reset members to default
/// - int soap_read_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20*) deserialize from a source
/// - int soap_write_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20*) serialize to a sink
/// - tt__BacklightCompensation20* soap_dup_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20* dst, tt__BacklightCompensation20 *src) returns deep copy of tt__BacklightCompensation20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensation20(tt__BacklightCompensation20*) deep deletes tt__BacklightCompensation20 data members, use only on dst after soap_dup_tt__BacklightCompensation20(NULL, tt__BacklightCompensation20 *dst, tt__BacklightCompensation20 *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensation20
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the exposure settings.
/// </BLOCKQUOTE></PRE>
/// struct tt__Exposure20 operations:
/// - soap_default_tt__Exposure20(soap*, tt__Exposure20*) reset members to default
/// - int soap_read_tt__Exposure20(soap*, tt__Exposure20*) deserialize from a source
/// - int soap_write_tt__Exposure20(soap*, tt__Exposure20*) serialize to a sink
/// - tt__Exposure20* soap_dup_tt__Exposure20(soap*, tt__Exposure20* dst, tt__Exposure20 *src) returns deep copy of tt__Exposure20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Exposure20(tt__Exposure20*) deep deletes tt__Exposure20 data members, use only on dst after soap_dup_tt__Exposure20(NULL, tt__Exposure20 *dst, tt__Exposure20 *src) (use soapcpp2 -Ed)
struct tt__Exposure20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensation is a complexType.
///
/// struct tt__ToneCompensation operations:
/// - soap_default_tt__ToneCompensation(soap*, tt__ToneCompensation*) reset members to default
/// - int soap_read_tt__ToneCompensation(soap*, tt__ToneCompensation*) deserialize from a source
/// - int soap_write_tt__ToneCompensation(soap*, tt__ToneCompensation*) serialize to a sink
/// - tt__ToneCompensation* soap_dup_tt__ToneCompensation(soap*, tt__ToneCompensation* dst, tt__ToneCompensation *src) returns deep copy of tt__ToneCompensation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ToneCompensation(tt__ToneCompensation*) deep deletes tt__ToneCompensation data members, use only on dst after soap_dup_tt__ToneCompensation(NULL, tt__ToneCompensation *dst, tt__ToneCompensation *src) (use soapcpp2 -Ed)
struct tt__ToneCompensation
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic ToneCompensation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensationExtension.
    struct tt__ToneCompensationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationExtension is a complexType.
///
/// struct tt__ToneCompensationExtension operations:
/// - soap_default_tt__ToneCompensationExtension(soap*, tt__ToneCompensationExtension*) reset members to default
/// - int soap_read_tt__ToneCompensationExtension(soap*, tt__ToneCompensationExtension*) deserialize from a source
/// - int soap_write_tt__ToneCompensationExtension(soap*, tt__ToneCompensationExtension*) serialize to a sink
/// - tt__ToneCompensationExtension* soap_dup_tt__ToneCompensationExtension(soap*, tt__ToneCompensationExtension* dst, tt__ToneCompensationExtension *src) returns deep copy of tt__ToneCompensationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ToneCompensationExtension(tt__ToneCompensationExtension*) deep deletes tt__ToneCompensationExtension data members, use only on dst after soap_dup_tt__ToneCompensationExtension(NULL, tt__ToneCompensationExtension *dst, tt__ToneCompensationExtension *src) (use soapcpp2 -Ed)
struct tt__ToneCompensationExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Defogging is a complexType.
///
/// struct tt__Defogging operations:
/// - soap_default_tt__Defogging(soap*, tt__Defogging*) reset members to default
/// - int soap_read_tt__Defogging(soap*, tt__Defogging*) deserialize from a source
/// - int soap_write_tt__Defogging(soap*, tt__Defogging*) serialize to a sink
/// - tt__Defogging* soap_dup_tt__Defogging(soap*, tt__Defogging* dst, tt__Defogging *src) returns deep copy of tt__Defogging src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Defogging(tt__Defogging*) deep deletes tt__Defogging data members, use only on dst after soap_dup_tt__Defogging(NULL, tt__Defogging *dst, tt__Defogging *src) (use soapcpp2 -Ed)
struct tt__Defogging
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic Defogging feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DefoggingExtension.
    struct tt__DefoggingExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingExtension is a complexType.
///
/// struct tt__DefoggingExtension operations:
/// - soap_default_tt__DefoggingExtension(soap*, tt__DefoggingExtension*) reset members to default
/// - int soap_read_tt__DefoggingExtension(soap*, tt__DefoggingExtension*) deserialize from a source
/// - int soap_write_tt__DefoggingExtension(soap*, tt__DefoggingExtension*) serialize to a sink
/// - tt__DefoggingExtension* soap_dup_tt__DefoggingExtension(soap*, tt__DefoggingExtension* dst, tt__DefoggingExtension *src) returns deep copy of tt__DefoggingExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DefoggingExtension(tt__DefoggingExtension*) deep deletes tt__DefoggingExtension data members, use only on dst after soap_dup_tt__DefoggingExtension(NULL, tt__DefoggingExtension *dst, tt__DefoggingExtension *src) (use soapcpp2 -Ed)
struct tt__DefoggingExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReduction is a complexType.
///
/// struct tt__NoiseReduction operations:
/// - soap_default_tt__NoiseReduction(soap*, tt__NoiseReduction*) reset members to default
/// - int soap_read_tt__NoiseReduction(soap*, tt__NoiseReduction*) deserialize from a source
/// - int soap_write_tt__NoiseReduction(soap*, tt__NoiseReduction*) serialize to a sink
/// - tt__NoiseReduction* soap_dup_tt__NoiseReduction(soap*, tt__NoiseReduction* dst, tt__NoiseReduction *src) returns deep copy of tt__NoiseReduction src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NoiseReduction(tt__NoiseReduction*) deep deletes tt__NoiseReduction data members, use only on dst after soap_dup_tt__NoiseReduction(NULL, tt__NoiseReduction *dst, tt__NoiseReduction *src) (use soapcpp2 -Ed)
struct tt__NoiseReduction
{
/// <PRE><BLOCKQUOTE>
///   Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
///
/// struct tt__ImagingOptions20 operations:
/// - soap_default_tt__ImagingOptions20(soap*, tt__ImagingOptions20*) reset members to default
/// - int soap_read_tt__ImagingOptions20(soap*, tt__ImagingOptions20*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20(soap*, tt__ImagingOptions20*) serialize to a sink
/// - tt__ImagingOptions20* soap_dup_tt__ImagingOptions20(soap*, tt__ImagingOptions20* dst, tt__ImagingOptions20 *src) returns deep copy of tt__ImagingOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20(tt__ImagingOptions20*) deep deletes tt__ImagingOptions20 data members, use only on dst after soap_dup_tt__ImagingOptions20(NULL, tt__ImagingOptions20 *dst, tt__ImagingOptions20 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid range of Backlight Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    struct tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Brightness.
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Color Saturation.
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Contrast.
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Exposure.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    struct tt__ExposureOptions20*        Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Focus.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20.
    struct tt__FocusOptions20*           Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of IrCutFilterModes.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__IrCutFilterMode* is 0..unbounded.
   $int                                  __sizeIrCutFilterModes         0;
/// Array enum tt__IrCutFilterMode* of size 0..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               0;
/// <PRE><BLOCKQUOTE>
///   Valid range of Sharpness.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WideDynamicRange.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    struct tt__WideDynamicRangeOptions20*  WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WhiteBalance.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    struct tt__WhiteBalanceOptions20*    WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    struct tt__ImagingOptions20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
///
/// struct tt__ImagingOptions20Extension operations:
/// - soap_default_tt__ImagingOptions20Extension(soap*, tt__ImagingOptions20Extension*) reset members to default
/// - int soap_read_tt__ImagingOptions20Extension(soap*, tt__ImagingOptions20Extension*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension(soap*, tt__ImagingOptions20Extension*) serialize to a sink
/// - tt__ImagingOptions20Extension* soap_dup_tt__ImagingOptions20Extension(soap*, tt__ImagingOptions20Extension* dst, tt__ImagingOptions20Extension *src) returns deep copy of tt__ImagingOptions20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension(tt__ImagingOptions20Extension*) deep deletes tt__ImagingOptions20Extension data members, use only on dst after soap_dup_tt__ImagingOptions20Extension(NULL, tt__ImagingOptions20Extension *dst, tt__ImagingOptions20Extension *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    struct tt__ImageStabilizationOptions*  ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    struct tt__ImagingOptions20Extension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
///
/// struct tt__ImagingOptions20Extension2 operations:
/// - soap_default_tt__ImagingOptions20Extension2(soap*, tt__ImagingOptions20Extension2*) reset members to default
/// - int soap_read_tt__ImagingOptions20Extension2(soap*, tt__ImagingOptions20Extension2*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension2(soap*, tt__ImagingOptions20Extension2*) serialize to a sink
/// - tt__ImagingOptions20Extension2* soap_dup_tt__ImagingOptions20Extension2(soap*, tt__ImagingOptions20Extension2* dst, tt__ImagingOptions20Extension2 *src) returns deep copy of tt__ImagingOptions20Extension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension2(tt__ImagingOptions20Extension2*) deep deletes tt__ImagingOptions20Extension2 data members, use only on dst after soap_dup_tt__ImagingOptions20Extension2(NULL, tt__ImagingOptions20Extension2 *dst, tt__ImagingOptions20Extension2 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension2
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for adjustment of Ir cut filter auto mode.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilterAutoAdjustment" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions.
    struct tt__IrCutFilterAutoAdjustmentOptions*  IrCutFilterAutoAdjustment      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3.
    struct tt__ImagingOptions20Extension3*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is a complexType.
///
/// struct tt__ImagingOptions20Extension3 operations:
/// - soap_default_tt__ImagingOptions20Extension3(soap*, tt__ImagingOptions20Extension3*) reset members to default
/// - int soap_read_tt__ImagingOptions20Extension3(soap*, tt__ImagingOptions20Extension3*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension3(soap*, tt__ImagingOptions20Extension3*) serialize to a sink
/// - tt__ImagingOptions20Extension3* soap_dup_tt__ImagingOptions20Extension3(soap*, tt__ImagingOptions20Extension3* dst, tt__ImagingOptions20Extension3 *src) returns deep copy of tt__ImagingOptions20Extension3 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension3(tt__ImagingOptions20Extension3*) deep deletes tt__ImagingOptions20Extension3 data members, use only on dst after soap_dup_tt__ImagingOptions20Extension3(NULL, tt__ImagingOptions20Extension3 *dst, tt__ImagingOptions20Extension3 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension3
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Tone Compensation feature.
/// </BLOCKQUOTE></PRE>
/// Element "ToneCompensationOptions" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensationOptions.
    struct tt__ToneCompensationOptions*  ToneCompensationOptions        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Defogging feature.
/// </BLOCKQUOTE></PRE>
/// Element "DefoggingOptions" of XSD type "http://www.onvif.org/ver10/schema":DefoggingOptions.
    struct tt__DefoggingOptions*         DefoggingOptions               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameter for Noise Reduction feature.
/// </BLOCKQUOTE></PRE>
/// Element "NoiseReductionOptions" of XSD type "http://www.onvif.org/ver10/schema":NoiseReductionOptions.
    struct tt__NoiseReductionOptions*    NoiseReductionOptions          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4.
    struct tt__ImagingOptions20Extension4*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is a complexType.
///
/// struct tt__ImagingOptions20Extension4 operations:
/// - soap_default_tt__ImagingOptions20Extension4(soap*, tt__ImagingOptions20Extension4*) reset members to default
/// - int soap_read_tt__ImagingOptions20Extension4(soap*, tt__ImagingOptions20Extension4*) deserialize from a source
/// - int soap_write_tt__ImagingOptions20Extension4(soap*, tt__ImagingOptions20Extension4*) serialize to a sink
/// - tt__ImagingOptions20Extension4* soap_dup_tt__ImagingOptions20Extension4(soap*, tt__ImagingOptions20Extension4* dst, tt__ImagingOptions20Extension4 *src) returns deep copy of tt__ImagingOptions20Extension4 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingOptions20Extension4(tt__ImagingOptions20Extension4*) deep deletes tt__ImagingOptions20Extension4 data members, use only on dst after soap_dup_tt__ImagingOptions20Extension4(NULL, tt__ImagingOptions20Extension4 *dst, tt__ImagingOptions20Extension4 *src) (use soapcpp2 -Ed)
struct tt__ImagingOptions20Extension4
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
///
/// struct tt__ImageStabilizationOptions operations:
/// - soap_default_tt__ImageStabilizationOptions(soap*, tt__ImageStabilizationOptions*) reset members to default
/// - int soap_read_tt__ImageStabilizationOptions(soap*, tt__ImageStabilizationOptions*) deserialize from a source
/// - int soap_write_tt__ImageStabilizationOptions(soap*, tt__ImageStabilizationOptions*) serialize to a sink
/// - tt__ImageStabilizationOptions* soap_dup_tt__ImageStabilizationOptions(soap*, tt__ImageStabilizationOptions* dst, tt__ImageStabilizationOptions *src) returns deep copy of tt__ImageStabilizationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilizationOptions(tt__ImageStabilizationOptions*) deep deletes tt__ImageStabilizationOptions data members, use only on dst after soap_dup_tt__ImageStabilizationOptions(NULL, tt__ImageStabilizationOptions *dst, tt__ImageStabilizationOptions *src) (use soapcpp2 -Ed)
struct tt__ImageStabilizationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Image Stabilization mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ImageStabilizationMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ImageStabilizationMode* of size 1..unbounded.
    enum tt__ImageStabilizationMode*     Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Valid range of the Image Stabilization.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    struct tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
///
/// struct tt__ImageStabilizationOptionsExtension operations:
/// - soap_default_tt__ImageStabilizationOptionsExtension(soap*, tt__ImageStabilizationOptionsExtension*) reset members to default
/// - int soap_read_tt__ImageStabilizationOptionsExtension(soap*, tt__ImageStabilizationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__ImageStabilizationOptionsExtension(soap*, tt__ImageStabilizationOptionsExtension*) serialize to a sink
/// - tt__ImageStabilizationOptionsExtension* soap_dup_tt__ImageStabilizationOptionsExtension(soap*, tt__ImageStabilizationOptionsExtension* dst, tt__ImageStabilizationOptionsExtension *src) returns deep copy of tt__ImageStabilizationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImageStabilizationOptionsExtension(tt__ImageStabilizationOptionsExtension*) deep deletes tt__ImageStabilizationOptionsExtension data members, use only on dst after soap_dup_tt__ImageStabilizationOptionsExtension(NULL, tt__ImageStabilizationOptionsExtension *dst, tt__ImageStabilizationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__ImageStabilizationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is a complexType.
///
/// struct tt__IrCutFilterAutoAdjustmentOptions operations:
/// - soap_default_tt__IrCutFilterAutoAdjustmentOptions(soap*, tt__IrCutFilterAutoAdjustmentOptions*) reset members to default
/// - int soap_read_tt__IrCutFilterAutoAdjustmentOptions(soap*, tt__IrCutFilterAutoAdjustmentOptions*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustmentOptions(soap*, tt__IrCutFilterAutoAdjustmentOptions*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustmentOptions* soap_dup_tt__IrCutFilterAutoAdjustmentOptions(soap*, tt__IrCutFilterAutoAdjustmentOptions* dst, tt__IrCutFilterAutoAdjustmentOptions *src) returns deep copy of tt__IrCutFilterAutoAdjustmentOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustmentOptions(tt__IrCutFilterAutoAdjustmentOptions*) deep deletes tt__IrCutFilterAutoAdjustmentOptions data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustmentOptions(NULL, tt__IrCutFilterAutoAdjustmentOptions *dst, tt__IrCutFilterAutoAdjustmentOptions *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustmentOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeBoundaryType             1;
/// Array char** of size 1..unbounded.
    char**                               BoundaryType                   1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not boundary offset for toggling Ir cut filter is supported.
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryOffset" of XSD type xs:boolean.
    enum xsd__boolean*                   BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of delay time for toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
/// Element "ResponseTimeRange" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            ResponseTimeRange              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension.
    struct tt__IrCutFilterAutoAdjustmentOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is a complexType.
///
/// struct tt__IrCutFilterAutoAdjustmentOptionsExtension operations:
/// - soap_default_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension*) reset members to default
/// - int soap_read_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension*) deserialize from a source
/// - int soap_write_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension*) serialize to a sink
/// - tt__IrCutFilterAutoAdjustmentOptionsExtension* soap_dup_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension* dst, tt__IrCutFilterAutoAdjustmentOptionsExtension *src) returns deep copy of tt__IrCutFilterAutoAdjustmentOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IrCutFilterAutoAdjustmentOptionsExtension(tt__IrCutFilterAutoAdjustmentOptionsExtension*) deep deletes tt__IrCutFilterAutoAdjustmentOptionsExtension data members, use only on dst after soap_dup_tt__IrCutFilterAutoAdjustmentOptionsExtension(NULL, tt__IrCutFilterAutoAdjustmentOptionsExtension *dst, tt__IrCutFilterAutoAdjustmentOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__IrCutFilterAutoAdjustmentOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
///
/// struct tt__WideDynamicRangeOptions20 operations:
/// - soap_default_tt__WideDynamicRangeOptions20(soap*, tt__WideDynamicRangeOptions20*) reset members to default
/// - int soap_read_tt__WideDynamicRangeOptions20(soap*, tt__WideDynamicRangeOptions20*) deserialize from a source
/// - int soap_write_tt__WideDynamicRangeOptions20(soap*, tt__WideDynamicRangeOptions20*) serialize to a sink
/// - tt__WideDynamicRangeOptions20* soap_dup_tt__WideDynamicRangeOptions20(soap*, tt__WideDynamicRangeOptions20* dst, tt__WideDynamicRangeOptions20 *src) returns deep copy of tt__WideDynamicRangeOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WideDynamicRangeOptions20(tt__WideDynamicRangeOptions20*) deep deletes tt__WideDynamicRangeOptions20 data members, use only on dst after soap_dup_tt__WideDynamicRangeOptions20(NULL, tt__WideDynamicRangeOptions20 *dst, tt__WideDynamicRangeOptions20 *src) (use soapcpp2 -Ed)
struct tt__WideDynamicRangeOptions20
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
///
/// struct tt__BacklightCompensationOptions20 operations:
/// - soap_default_tt__BacklightCompensationOptions20(soap*, tt__BacklightCompensationOptions20*) reset members to default
/// - int soap_read_tt__BacklightCompensationOptions20(soap*, tt__BacklightCompensationOptions20*) deserialize from a source
/// - int soap_write_tt__BacklightCompensationOptions20(soap*, tt__BacklightCompensationOptions20*) serialize to a sink
/// - tt__BacklightCompensationOptions20* soap_dup_tt__BacklightCompensationOptions20(soap*, tt__BacklightCompensationOptions20* dst, tt__BacklightCompensationOptions20 *src) returns deep copy of tt__BacklightCompensationOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BacklightCompensationOptions20(tt__BacklightCompensationOptions20*) deep deletes tt__BacklightCompensationOptions20 data members, use only on dst after soap_dup_tt__BacklightCompensationOptions20(NULL, tt__BacklightCompensationOptions20 *dst, tt__BacklightCompensationOptions20 *src) (use soapcpp2 -Ed)
struct tt__BacklightCompensationOptions20
{
/// <PRE><BLOCKQUOTE>
///   'ON' or 'OFF'
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__BacklightCompensationMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__BacklightCompensationMode* of size 1..unbounded.
    enum tt__BacklightCompensationMode*  Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Level range of BacklightCompensation.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
///
/// struct tt__ExposureOptions20 operations:
/// - soap_default_tt__ExposureOptions20(soap*, tt__ExposureOptions20*) reset members to default
/// - int soap_read_tt__ExposureOptions20(soap*, tt__ExposureOptions20*) deserialize from a source
/// - int soap_write_tt__ExposureOptions20(soap*, tt__ExposureOptions20*) serialize to a sink
/// - tt__ExposureOptions20* soap_dup_tt__ExposureOptions20(soap*, tt__ExposureOptions20* dst, tt__ExposureOptions20 *src) returns deep copy of tt__ExposureOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ExposureOptions20(tt__ExposureOptions20*) deep deletes tt__ExposureOptions20 data members, use only on dst after soap_dup_tt__ExposureOptions20(NULL, tt__ExposureOptions20 *dst, tt__ExposureOptions20 *src) (use soapcpp2 -Ed)
struct tt__ExposureOptions20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ExposurePriority* is 0..unbounded.
   $int                                  __sizePriority                 0;
/// Array enum tt__ExposurePriority* of size 0..unbounded.
    enum tt__ExposurePriority*           Priority                       0;
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Gain.
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
///
/// struct tt__MoveOptions20 operations:
/// - soap_default_tt__MoveOptions20(soap*, tt__MoveOptions20*) reset members to default
/// - int soap_read_tt__MoveOptions20(soap*, tt__MoveOptions20*) deserialize from a source
/// - int soap_write_tt__MoveOptions20(soap*, tt__MoveOptions20*) serialize to a sink
/// - tt__MoveOptions20* soap_dup_tt__MoveOptions20(soap*, tt__MoveOptions20* dst, tt__MoveOptions20 *src) returns deep copy of tt__MoveOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MoveOptions20(tt__MoveOptions20*) deep deletes tt__MoveOptions20 data members, use only on dst after soap_dup_tt__MoveOptions20(NULL, tt__MoveOptions20 *dst, tt__MoveOptions20 *src) (use soapcpp2 -Ed)
struct tt__MoveOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the absolute control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the relative control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    struct tt__RelativeFocusOptions20*   Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the continuous control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
///
/// struct tt__RelativeFocusOptions20 operations:
/// - soap_default_tt__RelativeFocusOptions20(soap*, tt__RelativeFocusOptions20*) reset members to default
/// - int soap_read_tt__RelativeFocusOptions20(soap*, tt__RelativeFocusOptions20*) deserialize from a source
/// - int soap_write_tt__RelativeFocusOptions20(soap*, tt__RelativeFocusOptions20*) serialize to a sink
/// - tt__RelativeFocusOptions20* soap_dup_tt__RelativeFocusOptions20(soap*, tt__RelativeFocusOptions20* dst, tt__RelativeFocusOptions20 *src) returns deep copy of tt__RelativeFocusOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelativeFocusOptions20(tt__RelativeFocusOptions20*) deep deletes tt__RelativeFocusOptions20 data members, use only on dst after soap_dup_tt__RelativeFocusOptions20(NULL, tt__RelativeFocusOptions20 *dst, tt__RelativeFocusOptions20 *src) (use soapcpp2 -Ed)
struct tt__RelativeFocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
///
/// struct tt__WhiteBalance20 operations:
/// - soap_default_tt__WhiteBalance20(soap*, tt__WhiteBalance20*) reset members to default
/// - int soap_read_tt__WhiteBalance20(soap*, tt__WhiteBalance20*) deserialize from a source
/// - int soap_write_tt__WhiteBalance20(soap*, tt__WhiteBalance20*) serialize to a sink
/// - tt__WhiteBalance20* soap_dup_tt__WhiteBalance20(soap*, tt__WhiteBalance20* dst, tt__WhiteBalance20 *src) returns deep copy of tt__WhiteBalance20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalance20(tt__WhiteBalance20*) deep deletes tt__WhiteBalance20 data members, use only on dst after soap_dup_tt__WhiteBalance20(NULL, tt__WhiteBalance20 *dst, tt__WhiteBalance20 *src) (use soapcpp2 -Ed)
struct tt__WhiteBalance20
{
/// <PRE><BLOCKQUOTE>
///   'AUTO' or 'MANUAL'
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    struct tt__WhiteBalance20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
///
/// struct tt__WhiteBalance20Extension operations:
/// - soap_default_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension*) reset members to default
/// - int soap_read_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension*) deserialize from a source
/// - int soap_write_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension*) serialize to a sink
/// - tt__WhiteBalance20Extension* soap_dup_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension* dst, tt__WhiteBalance20Extension *src) returns deep copy of tt__WhiteBalance20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalance20Extension(tt__WhiteBalance20Extension*) deep deletes tt__WhiteBalance20Extension data members, use only on dst after soap_dup_tt__WhiteBalance20Extension(NULL, tt__WhiteBalance20Extension *dst, tt__WhiteBalance20Extension *src) (use soapcpp2 -Ed)
struct tt__WhiteBalance20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
///
/// struct tt__FocusConfiguration20 operations:
/// - soap_default_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20*) reset members to default
/// - int soap_read_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20*) deserialize from a source
/// - int soap_write_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20*) serialize to a sink
/// - tt__FocusConfiguration20* soap_dup_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20* dst, tt__FocusConfiguration20 *src) returns deep copy of tt__FocusConfiguration20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusConfiguration20(tt__FocusConfiguration20*) deep deletes tt__FocusConfiguration20 data members, use only on dst after soap_dup_tt__FocusConfiguration20(NULL, tt__FocusConfiguration20 *dst, tt__FocusConfiguration20 *src) (use soapcpp2 -Ed)
struct tt__FocusConfiguration20
{
/// <PRE><BLOCKQUOTE>
///   Mode of auto focus.
///   <ul>
///   <li>AUTO - The device automatically adjusts focus.</li>
///   <li>MANUAL - The device does not automatically adjust focus.</li>
///   </ul>
///   Note: for devices supporting both manual and auto operation at the same time manual operation may be supported even if the Mode parameter is set to Auto.
/// </BLOCKQUOTE></PRE>
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    struct tt__FocusConfiguration20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
///
/// struct tt__FocusConfiguration20Extension operations:
/// - soap_default_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension*) reset members to default
/// - int soap_read_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension*) deserialize from a source
/// - int soap_write_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension*) serialize to a sink
/// - tt__FocusConfiguration20Extension* soap_dup_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension* dst, tt__FocusConfiguration20Extension *src) returns deep copy of tt__FocusConfiguration20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusConfiguration20Extension(tt__FocusConfiguration20Extension*) deep deletes tt__FocusConfiguration20Extension data members, use only on dst after soap_dup_tt__FocusConfiguration20Extension(NULL, tt__FocusConfiguration20Extension *dst, tt__FocusConfiguration20Extension *src) (use soapcpp2 -Ed)
struct tt__FocusConfiguration20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
///
/// struct tt__WhiteBalanceOptions20 operations:
/// - soap_default_tt__WhiteBalanceOptions20(soap*, tt__WhiteBalanceOptions20*) reset members to default
/// - int soap_read_tt__WhiteBalanceOptions20(soap*, tt__WhiteBalanceOptions20*) deserialize from a source
/// - int soap_write_tt__WhiteBalanceOptions20(soap*, tt__WhiteBalanceOptions20*) serialize to a sink
/// - tt__WhiteBalanceOptions20* soap_dup_tt__WhiteBalanceOptions20(soap*, tt__WhiteBalanceOptions20* dst, tt__WhiteBalanceOptions20 *src) returns deep copy of tt__WhiteBalanceOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalanceOptions20(tt__WhiteBalanceOptions20*) deep deletes tt__WhiteBalanceOptions20 data members, use only on dst after soap_dup_tt__WhiteBalanceOptions20(NULL, tt__WhiteBalanceOptions20 *dst, tt__WhiteBalanceOptions20 *src) (use soapcpp2 -Ed)
struct tt__WhiteBalanceOptions20
{
/// <PRE><BLOCKQUOTE>
///   Mode of WhiteBalance.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         0;	///< Optional element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    struct tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
///
/// struct tt__WhiteBalanceOptions20Extension operations:
/// - soap_default_tt__WhiteBalanceOptions20Extension(soap*, tt__WhiteBalanceOptions20Extension*) reset members to default
/// - int soap_read_tt__WhiteBalanceOptions20Extension(soap*, tt__WhiteBalanceOptions20Extension*) deserialize from a source
/// - int soap_write_tt__WhiteBalanceOptions20Extension(soap*, tt__WhiteBalanceOptions20Extension*) serialize to a sink
/// - tt__WhiteBalanceOptions20Extension* soap_dup_tt__WhiteBalanceOptions20Extension(soap*, tt__WhiteBalanceOptions20Extension* dst, tt__WhiteBalanceOptions20Extension *src) returns deep copy of tt__WhiteBalanceOptions20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__WhiteBalanceOptions20Extension(tt__WhiteBalanceOptions20Extension*) deep deletes tt__WhiteBalanceOptions20Extension data members, use only on dst after soap_dup_tt__WhiteBalanceOptions20Extension(NULL, tt__WhiteBalanceOptions20Extension *dst, tt__WhiteBalanceOptions20Extension *src) (use soapcpp2 -Ed)
struct tt__WhiteBalanceOptions20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
///
/// struct tt__FocusOptions20 operations:
/// - soap_default_tt__FocusOptions20(soap*, tt__FocusOptions20*) reset members to default
/// - int soap_read_tt__FocusOptions20(soap*, tt__FocusOptions20*) deserialize from a source
/// - int soap_write_tt__FocusOptions20(soap*, tt__FocusOptions20*) serialize to a sink
/// - tt__FocusOptions20* soap_dup_tt__FocusOptions20(soap*, tt__FocusOptions20* dst, tt__FocusOptions20 *src) returns deep copy of tt__FocusOptions20 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusOptions20(tt__FocusOptions20*) deep deletes tt__FocusOptions20 data members, use only on dst after soap_dup_tt__FocusOptions20(NULL, tt__FocusOptions20 *dst, tt__FocusOptions20 *src) (use soapcpp2 -Ed)
struct tt__FocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Supported mode for auto focus.
///   <ul>
///   <li>AUTO - The device supports automatic focus adjustment.</li>
///   <li>MANUAL - The device supports manual focus adjustment.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
   $int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;
/// <PRE><BLOCKQUOTE>
///   Valid range of DefaultSpeed.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of NearLimit.
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of FarLimit.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    struct tt__FocusOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
///
/// struct tt__FocusOptions20Extension operations:
/// - soap_default_tt__FocusOptions20Extension(soap*, tt__FocusOptions20Extension*) reset members to default
/// - int soap_read_tt__FocusOptions20Extension(soap*, tt__FocusOptions20Extension*) deserialize from a source
/// - int soap_write_tt__FocusOptions20Extension(soap*, tt__FocusOptions20Extension*) serialize to a sink
/// - tt__FocusOptions20Extension* soap_dup_tt__FocusOptions20Extension(soap*, tt__FocusOptions20Extension* dst, tt__FocusOptions20Extension *src) returns deep copy of tt__FocusOptions20Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FocusOptions20Extension(tt__FocusOptions20Extension*) deep deletes tt__FocusOptions20Extension data members, use only on dst after soap_dup_tt__FocusOptions20Extension(NULL, tt__FocusOptions20Extension *dst, tt__FocusOptions20Extension *src) (use soapcpp2 -Ed)
struct tt__FocusOptions20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationOptions is a complexType.
///
/// struct tt__ToneCompensationOptions operations:
/// - soap_default_tt__ToneCompensationOptions(soap*, tt__ToneCompensationOptions*) reset members to default
/// - int soap_read_tt__ToneCompensationOptions(soap*, tt__ToneCompensationOptions*) deserialize from a source
/// - int soap_write_tt__ToneCompensationOptions(soap*, tt__ToneCompensationOptions*) serialize to a sink
/// - tt__ToneCompensationOptions* soap_dup_tt__ToneCompensationOptions(soap*, tt__ToneCompensationOptions* dst, tt__ToneCompensationOptions *src) returns deep copy of tt__ToneCompensationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ToneCompensationOptions(tt__ToneCompensationOptions*) deep deletes tt__ToneCompensationOptions data members, use only on dst after soap_dup_tt__ToneCompensationOptions(NULL, tt__ToneCompensationOptions *dst, tt__ToneCompensationOptions *src) (use soapcpp2 -Ed)
struct tt__ToneCompensationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Tone Compensation mode. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Tone Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingOptions is a complexType.
///
/// struct tt__DefoggingOptions operations:
/// - soap_default_tt__DefoggingOptions(soap*, tt__DefoggingOptions*) reset members to default
/// - int soap_read_tt__DefoggingOptions(soap*, tt__DefoggingOptions*) deserialize from a source
/// - int soap_write_tt__DefoggingOptions(soap*, tt__DefoggingOptions*) serialize to a sink
/// - tt__DefoggingOptions* soap_dup_tt__DefoggingOptions(soap*, tt__DefoggingOptions* dst, tt__DefoggingOptions *src) returns deep copy of tt__DefoggingOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DefoggingOptions(tt__DefoggingOptions*) deep deletes tt__DefoggingOptions data members, use only on dst after soap_dup_tt__DefoggingOptions(NULL, tt__DefoggingOptions *dst, tt__DefoggingOptions *src) (use soapcpp2 -Ed)
struct tt__DefoggingOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Defogging mode. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Defogging.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReductionOptions is a complexType.
///
/// struct tt__NoiseReductionOptions operations:
/// - soap_default_tt__NoiseReductionOptions(soap*, tt__NoiseReductionOptions*) reset members to default
/// - int soap_read_tt__NoiseReductionOptions(soap*, tt__NoiseReductionOptions*) deserialize from a source
/// - int soap_write_tt__NoiseReductionOptions(soap*, tt__NoiseReductionOptions*) serialize to a sink
/// - tt__NoiseReductionOptions* soap_dup_tt__NoiseReductionOptions(soap*, tt__NoiseReductionOptions* dst, tt__NoiseReductionOptions *src) returns deep copy of tt__NoiseReductionOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NoiseReductionOptions(tt__NoiseReductionOptions*) deep deletes tt__NoiseReductionOptions data members, use only on dst after soap_dup_tt__NoiseReductionOptions(NULL, tt__NoiseReductionOptions *dst, tt__NoiseReductionOptions *src) (use soapcpp2 -Ed)
struct tt__NoiseReductionOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for NoiseReduction.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
///
/// struct tt__MessageExtension operations:
/// - soap_default_tt__MessageExtension(soap*, tt__MessageExtension*) reset members to default
/// - int soap_read_tt__MessageExtension(soap*, tt__MessageExtension*) deserialize from a source
/// - int soap_write_tt__MessageExtension(soap*, tt__MessageExtension*) serialize to a sink
/// - tt__MessageExtension* soap_dup_tt__MessageExtension(soap*, tt__MessageExtension* dst, tt__MessageExtension *src) returns deep copy of tt__MessageExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageExtension(tt__MessageExtension*) deep deletes tt__MessageExtension data members, use only on dst after soap_dup_tt__MessageExtension(NULL, tt__MessageExtension *dst, tt__MessageExtension *src) (use soapcpp2 -Ed)
struct tt__MessageExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
/// struct tt__ItemList operations:
/// - soap_default_tt__ItemList(soap*, tt__ItemList*) reset members to default
/// - int soap_read_tt__ItemList(soap*, tt__ItemList*) deserialize from a source
/// - int soap_write_tt__ItemList(soap*, tt__ItemList*) serialize to a sink
/// - tt__ItemList* soap_dup_tt__ItemList(soap*, tt__ItemList* dst, tt__ItemList *src) returns deep copy of tt__ItemList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemList(tt__ItemList*) deep deletes tt__ItemList data members, use only on dst after soap_dup_tt__ItemList(NULL, tt__ItemList *dst, tt__ItemList *src) (use soapcpp2 -Ed)
struct tt__ItemList
{
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Size of SimpleItem array is 0..unbounded.
   $int                                  __sizeSimpleItem               0;
/// struct _tt__ItemList_SimpleItem operations:
/// - soap_default__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem*) reset members to default
/// - int soap_read__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem*) deserialize from a source
/// - int soap_write__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem*) serialize to a sink
/// - _tt__ItemList_SimpleItem* soap_dup__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem* dst, _tt__ItemList_SimpleItem *src) returns deep copy of _tt__ItemList_SimpleItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemList_SimpleItem(_tt__ItemList_SimpleItem*) deep deletes _tt__ItemList_SimpleItem data members, use only on dst after soap_dup__tt__ItemList_SimpleItem(NULL, _tt__ItemList_SimpleItem *dst, _tt__ItemList_SimpleItem *src) (use soapcpp2 -Ed)
    struct _tt__ItemList_SimpleItem
    {
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Attribute "Value" of XSD type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
/// Size of ElementItem array is 0..unbounded.
   $int                                  __sizeElementItem              0;
/// struct _tt__ItemList_ElementItem operations:
/// - soap_default__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem*) reset members to default
/// - int soap_read__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem*) deserialize from a source
/// - int soap_write__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem*) serialize to a sink
/// - _tt__ItemList_ElementItem* soap_dup__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem* dst, _tt__ItemList_ElementItem *src) returns deep copy of _tt__ItemList_ElementItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemList_ElementItem(_tt__ItemList_ElementItem*) deep deletes _tt__ItemList_ElementItem data members, use only on dst after soap_dup__tt__ItemList_ElementItem(NULL, _tt__ItemList_ElementItem *dst, _tt__ItemList_ElementItem *src) (use soapcpp2 -Ed)
    struct _tt__ItemList_ElementItem
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListExtension.
    struct tt__ItemListExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
/// struct tt__ItemListExtension operations:
/// - soap_default_tt__ItemListExtension(soap*, tt__ItemListExtension*) reset members to default
/// - int soap_read_tt__ItemListExtension(soap*, tt__ItemListExtension*) deserialize from a source
/// - int soap_write_tt__ItemListExtension(soap*, tt__ItemListExtension*) serialize to a sink
/// - tt__ItemListExtension* soap_dup_tt__ItemListExtension(soap*, tt__ItemListExtension* dst, tt__ItemListExtension *src) returns deep copy of tt__ItemListExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListExtension(tt__ItemListExtension*) deep deletes tt__ItemListExtension data members, use only on dst after soap_dup_tt__ItemListExtension(NULL, tt__ItemListExtension *dst, tt__ItemListExtension *src) (use soapcpp2 -Ed)
struct tt__ItemListExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
///
/// struct tt__MessageDescription operations:
/// - soap_default_tt__MessageDescription(soap*, tt__MessageDescription*) reset members to default
/// - int soap_read_tt__MessageDescription(soap*, tt__MessageDescription*) deserialize from a source
/// - int soap_write_tt__MessageDescription(soap*, tt__MessageDescription*) serialize to a sink
/// - tt__MessageDescription* soap_dup_tt__MessageDescription(soap*, tt__MessageDescription* dst, tt__MessageDescription *src) returns deep copy of tt__MessageDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageDescription(tt__MessageDescription*) deep deletes tt__MessageDescription data members, use only on dst after soap_dup_tt__MessageDescription(NULL, tt__MessageDescription *dst, tt__MessageDescription *src) (use soapcpp2 -Ed)
struct tt__MessageDescription
{
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
///
/// struct tt__MessageDescriptionExtension operations:
/// - soap_default_tt__MessageDescriptionExtension(soap*, tt__MessageDescriptionExtension*) reset members to default
/// - int soap_read_tt__MessageDescriptionExtension(soap*, tt__MessageDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__MessageDescriptionExtension(soap*, tt__MessageDescriptionExtension*) serialize to a sink
/// - tt__MessageDescriptionExtension* soap_dup_tt__MessageDescriptionExtension(soap*, tt__MessageDescriptionExtension* dst, tt__MessageDescriptionExtension *src) returns deep copy of tt__MessageDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageDescriptionExtension(tt__MessageDescriptionExtension*) deep deletes tt__MessageDescriptionExtension data members, use only on dst after soap_dup_tt__MessageDescriptionExtension(NULL, tt__MessageDescriptionExtension *dst, tt__MessageDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__MessageDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes a list of items. Each item in the list shall have a unique name.
///   The list is designed as linear structure without optional or unbounded elements.
///   Use ElementItems only when complex structures are inevitable.
/// </BLOCKQUOTE></PRE>
/// struct tt__ItemListDescription operations:
/// - soap_default_tt__ItemListDescription(soap*, tt__ItemListDescription*) reset members to default
/// - int soap_read_tt__ItemListDescription(soap*, tt__ItemListDescription*) deserialize from a source
/// - int soap_write_tt__ItemListDescription(soap*, tt__ItemListDescription*) serialize to a sink
/// - tt__ItemListDescription* soap_dup_tt__ItemListDescription(soap*, tt__ItemListDescription* dst, tt__ItemListDescription *src) returns deep copy of tt__ItemListDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListDescription(tt__ItemListDescription*) deep deletes tt__ItemListDescription data members, use only on dst after soap_dup_tt__ItemListDescription(NULL, tt__ItemListDescription *dst, tt__ItemListDescription *src) (use soapcpp2 -Ed)
struct tt__ItemListDescription
{
/// <PRE><BLOCKQUOTE>
///   Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// </BLOCKQUOTE></PRE>
/// Size of SimpleItemDescription array is 0..unbounded.
   $int                                  __sizeSimpleItemDescription    0;
/// struct _tt__ItemListDescription_SimpleItemDescription operations:
/// - soap_default__tt__ItemListDescription_SimpleItemDescription(soap*, _tt__ItemListDescription_SimpleItemDescription*) reset members to default
/// - int soap_read__tt__ItemListDescription_SimpleItemDescription(soap*, _tt__ItemListDescription_SimpleItemDescription*) deserialize from a source
/// - int soap_write__tt__ItemListDescription_SimpleItemDescription(soap*, _tt__ItemListDescription_SimpleItemDescription*) serialize to a sink
/// - _tt__ItemListDescription_SimpleItemDescription* soap_dup__tt__ItemListDescription_SimpleItemDescription(soap*, _tt__ItemListDescription_SimpleItemDescription* dst, _tt__ItemListDescription_SimpleItemDescription *src) returns deep copy of _tt__ItemListDescription_SimpleItemDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemListDescription_SimpleItemDescription(_tt__ItemListDescription_SimpleItemDescription*) deep deletes _tt__ItemListDescription_SimpleItemDescription data members, use only on dst after soap_dup__tt__ItemListDescription_SimpleItemDescription(NULL, _tt__ItemListDescription_SimpleItemDescription *dst, _tt__ItemListDescription_SimpleItemDescription *src) (use soapcpp2 -Ed)
    struct _tt__ItemListDescription_SimpleItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;
/// <PRE><BLOCKQUOTE>
///   Description of a complex type. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Size of ElementItemDescription array is 0..unbounded.
   $int                                  __sizeElementItemDescription   0;
/// struct _tt__ItemListDescription_ElementItemDescription operations:
/// - soap_default__tt__ItemListDescription_ElementItemDescription(soap*, _tt__ItemListDescription_ElementItemDescription*) reset members to default
/// - int soap_read__tt__ItemListDescription_ElementItemDescription(soap*, _tt__ItemListDescription_ElementItemDescription*) deserialize from a source
/// - int soap_write__tt__ItemListDescription_ElementItemDescription(soap*, _tt__ItemListDescription_ElementItemDescription*) serialize to a sink
/// - _tt__ItemListDescription_ElementItemDescription* soap_dup__tt__ItemListDescription_ElementItemDescription(soap*, _tt__ItemListDescription_ElementItemDescription* dst, _tt__ItemListDescription_ElementItemDescription *src) returns deep copy of _tt__ItemListDescription_ElementItemDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemListDescription_ElementItemDescription(_tt__ItemListDescription_ElementItemDescription*) deep deletes _tt__ItemListDescription_ElementItemDescription data members, use only on dst after soap_dup__tt__ItemListDescription_ElementItemDescription(NULL, _tt__ItemListDescription_ElementItemDescription *dst, _tt__ItemListDescription_ElementItemDescription *src) (use soapcpp2 -Ed)
    struct _tt__ItemListDescription_ElementItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The type of the item. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    struct tt__ItemListDescriptionExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
///
/// struct tt__ItemListDescriptionExtension operations:
/// - soap_default_tt__ItemListDescriptionExtension(soap*, tt__ItemListDescriptionExtension*) reset members to default
/// - int soap_read_tt__ItemListDescriptionExtension(soap*, tt__ItemListDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__ItemListDescriptionExtension(soap*, tt__ItemListDescriptionExtension*) serialize to a sink
/// - tt__ItemListDescriptionExtension* soap_dup_tt__ItemListDescriptionExtension(soap*, tt__ItemListDescriptionExtension* dst, tt__ItemListDescriptionExtension *src) returns deep copy of tt__ItemListDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListDescriptionExtension(tt__ItemListDescriptionExtension*) deep deletes tt__ItemListDescriptionExtension data members, use only on dst after soap_dup_tt__ItemListDescriptionExtension(NULL, tt__ItemListDescriptionExtension *dst, tt__ItemListDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__ItemListDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector is a complexType.
///
/// struct tt__Vector operations:
/// - soap_default_tt__Vector(soap*, tt__Vector*) reset members to default
/// - int soap_read_tt__Vector(soap*, tt__Vector*) deserialize from a source
/// - int soap_write_tt__Vector(soap*, tt__Vector*) serialize to a sink
/// - tt__Vector* soap_dup_tt__Vector(soap*, tt__Vector* dst, tt__Vector *src) returns deep copy of tt__Vector src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector(tt__Vector*) deep deletes tt__Vector data members, use only on dst after soap_dup_tt__Vector(NULL, tt__Vector *dst, tt__Vector *src) (use soapcpp2 -Ed)
struct tt__Vector
{
/// Attribute "x" of XSD type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute "y" of XSD type xs:float.
   @float*                               y                              0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
///
/// struct tt__Rectangle operations:
/// - soap_default_tt__Rectangle(soap*, tt__Rectangle*) reset members to default
/// - int soap_read_tt__Rectangle(soap*, tt__Rectangle*) deserialize from a source
/// - int soap_write_tt__Rectangle(soap*, tt__Rectangle*) serialize to a sink
/// - tt__Rectangle* soap_dup_tt__Rectangle(soap*, tt__Rectangle* dst, tt__Rectangle *src) returns deep copy of tt__Rectangle src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Rectangle(tt__Rectangle*) deep deletes tt__Rectangle data members, use only on dst after soap_dup_tt__Rectangle(NULL, tt__Rectangle *dst, tt__Rectangle *src) (use soapcpp2 -Ed)
struct tt__Rectangle
{
/// Attribute "bottom" of XSD type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute "top" of XSD type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute "right" of XSD type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute "left" of XSD type xs:float.
   @float*                               left                           0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Polygon is a complexType.
///
/// struct tt__Polygon operations:
/// - soap_default_tt__Polygon(soap*, tt__Polygon*) reset members to default
/// - int soap_read_tt__Polygon(soap*, tt__Polygon*) deserialize from a source
/// - int soap_write_tt__Polygon(soap*, tt__Polygon*) serialize to a sink
/// - tt__Polygon* soap_dup_tt__Polygon(soap*, tt__Polygon* dst, tt__Polygon *src) returns deep copy of tt__Polygon src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Polygon(tt__Polygon*) deep deletes tt__Polygon data members, use only on dst after soap_dup_tt__Polygon(NULL, tt__Polygon *dst, tt__Polygon *src) (use soapcpp2 -Ed)
struct tt__Polygon
{
/// Size of array of struct tt__Vector* is 3..unbounded.
   $int                                  __sizePoint                    3;
/// Array struct tt__Vector* of size 3..unbounded.
    struct tt__Vector*                   Point                          3;
};

/// @brief "http://www.onvif.org/ver10/schema":Polyline is a complexType.
///
/// struct tt__Polyline operations:
/// - soap_default_tt__Polyline(soap*, tt__Polyline*) reset members to default
/// - int soap_read_tt__Polyline(soap*, tt__Polyline*) deserialize from a source
/// - int soap_write_tt__Polyline(soap*, tt__Polyline*) serialize to a sink
/// - tt__Polyline* soap_dup_tt__Polyline(soap*, tt__Polyline* dst, tt__Polyline *src) returns deep copy of tt__Polyline src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Polyline(tt__Polyline*) deep deletes tt__Polyline data members, use only on dst after soap_dup_tt__Polyline(NULL, tt__Polyline *dst, tt__Polyline *src) (use soapcpp2 -Ed)
struct tt__Polyline
{
/// Size of array of struct tt__Vector* is 2..unbounded.
   $int                                  __sizePoint                    2;
/// Array struct tt__Vector* of size 2..unbounded.
    struct tt__Vector*                   Point                          2;
};

/// @brief "http://www.onvif.org/ver10/schema":Color is a complexType.
///
/// struct tt__Color operations:
/// - soap_default_tt__Color(soap*, tt__Color*) reset members to default
/// - int soap_read_tt__Color(soap*, tt__Color*) deserialize from a source
/// - int soap_write_tt__Color(soap*, tt__Color*) serialize to a sink
/// - tt__Color* soap_dup_tt__Color(soap*, tt__Color* dst, tt__Color *src) returns deep copy of tt__Color src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Color(tt__Color*) deep deletes tt__Color data members, use only on dst after soap_dup_tt__Color(NULL, tt__Color *dst, tt__Color *src) (use soapcpp2 -Ed)
struct tt__Color
{
/// Attribute "X" of XSD type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute "Y" of XSD type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute "Z" of XSD type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
///
/// struct tt__ColorCovariance operations:
/// - soap_default_tt__ColorCovariance(soap*, tt__ColorCovariance*) reset members to default
/// - int soap_read_tt__ColorCovariance(soap*, tt__ColorCovariance*) deserialize from a source
/// - int soap_write_tt__ColorCovariance(soap*, tt__ColorCovariance*) serialize to a sink
/// - tt__ColorCovariance* soap_dup_tt__ColorCovariance(soap*, tt__ColorCovariance* dst, tt__ColorCovariance *src) returns deep copy of tt__ColorCovariance src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorCovariance(tt__ColorCovariance*) deep deletes tt__ColorCovariance data members, use only on dst after soap_dup_tt__ColorCovariance(NULL, tt__ColorCovariance *dst, tt__ColorCovariance *src) (use soapcpp2 -Ed)
struct tt__ColorCovariance
{
/// Attribute "XX" of XSD type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute "YY" of XSD type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute "ZZ" of XSD type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute "XY" of XSD type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute "XZ" of XSD type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute "YZ" of XSD type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Appearance is a complexType.
///
/// struct tt__Appearance operations:
/// - soap_default_tt__Appearance(soap*, tt__Appearance*) reset members to default
/// - int soap_read_tt__Appearance(soap*, tt__Appearance*) deserialize from a source
/// - int soap_write_tt__Appearance(soap*, tt__Appearance*) serialize to a sink
/// - tt__Appearance* soap_dup_tt__Appearance(soap*, tt__Appearance* dst, tt__Appearance *src) returns deep copy of tt__Appearance src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Appearance(tt__Appearance*) deep deletes tt__Appearance data members, use only on dst after soap_dup_tt__Appearance(NULL, tt__Appearance *dst, tt__Appearance *src) (use soapcpp2 -Ed)
struct tt__Appearance
{
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 0;	///< Optional element.
/// Element "Shape" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    struct tt__ShapeDescriptor*          Shape                          0;	///< Optional element.
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    struct tt__ColorDescriptor*          Color                          0;	///< Optional element.
/// Element "Class" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    struct tt__ClassDescriptor*          Class                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    struct tt__AppearanceExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
///
/// struct tt__AppearanceExtension operations:
/// - soap_default_tt__AppearanceExtension(soap*, tt__AppearanceExtension*) reset members to default
/// - int soap_read_tt__AppearanceExtension(soap*, tt__AppearanceExtension*) deserialize from a source
/// - int soap_write_tt__AppearanceExtension(soap*, tt__AppearanceExtension*) serialize to a sink
/// - tt__AppearanceExtension* soap_dup_tt__AppearanceExtension(soap*, tt__AppearanceExtension* dst, tt__AppearanceExtension *src) returns deep copy of tt__AppearanceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AppearanceExtension(tt__AppearanceExtension*) deep deletes tt__AppearanceExtension data members, use only on dst after soap_dup_tt__AppearanceExtension(NULL, tt__AppearanceExtension *dst, tt__AppearanceExtension *src) (use soapcpp2 -Ed)
struct tt__AppearanceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
///
/// struct tt__ShapeDescriptor operations:
/// - soap_default_tt__ShapeDescriptor(soap*, tt__ShapeDescriptor*) reset members to default
/// - int soap_read_tt__ShapeDescriptor(soap*, tt__ShapeDescriptor*) deserialize from a source
/// - int soap_write_tt__ShapeDescriptor(soap*, tt__ShapeDescriptor*) serialize to a sink
/// - tt__ShapeDescriptor* soap_dup_tt__ShapeDescriptor(soap*, tt__ShapeDescriptor* dst, tt__ShapeDescriptor *src) returns deep copy of tt__ShapeDescriptor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ShapeDescriptor(tt__ShapeDescriptor*) deep deletes tt__ShapeDescriptor data members, use only on dst after soap_dup_tt__ShapeDescriptor(NULL, tt__ShapeDescriptor *dst, tt__ShapeDescriptor *src) (use soapcpp2 -Ed)
struct tt__ShapeDescriptor
{
/// Element "BoundingBox" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                BoundingBox                    1;	///< Required element.
/// Element "CenterOfGravity" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   CenterOfGravity                1;	///< Required element.
/// Size of array of struct tt__Polygon* is 0..unbounded.
   $int                                  __sizePolygon                  0;
/// Array struct tt__Polygon* of size 0..unbounded.
    struct tt__Polygon*                  Polygon                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    struct tt__ShapeDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
///
/// struct tt__ShapeDescriptorExtension operations:
/// - soap_default_tt__ShapeDescriptorExtension(soap*, tt__ShapeDescriptorExtension*) reset members to default
/// - int soap_read_tt__ShapeDescriptorExtension(soap*, tt__ShapeDescriptorExtension*) deserialize from a source
/// - int soap_write_tt__ShapeDescriptorExtension(soap*, tt__ShapeDescriptorExtension*) serialize to a sink
/// - tt__ShapeDescriptorExtension* soap_dup_tt__ShapeDescriptorExtension(soap*, tt__ShapeDescriptorExtension* dst, tt__ShapeDescriptorExtension *src) returns deep copy of tt__ShapeDescriptorExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ShapeDescriptorExtension(tt__ShapeDescriptorExtension*) deep deletes tt__ShapeDescriptorExtension data members, use only on dst after soap_dup_tt__ShapeDescriptorExtension(NULL, tt__ShapeDescriptorExtension *dst, tt__ShapeDescriptorExtension *src) (use soapcpp2 -Ed)
struct tt__ShapeDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
///
/// struct tt__ColorDescriptor operations:
/// - soap_default_tt__ColorDescriptor(soap*, tt__ColorDescriptor*) reset members to default
/// - int soap_read_tt__ColorDescriptor(soap*, tt__ColorDescriptor*) deserialize from a source
/// - int soap_write_tt__ColorDescriptor(soap*, tt__ColorDescriptor*) serialize to a sink
/// - tt__ColorDescriptor* soap_dup_tt__ColorDescriptor(soap*, tt__ColorDescriptor* dst, tt__ColorDescriptor *src) returns deep copy of tt__ColorDescriptor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorDescriptor(tt__ColorDescriptor*) deep deletes tt__ColorDescriptor data members, use only on dst after soap_dup_tt__ColorDescriptor(NULL, tt__ColorDescriptor *dst, tt__ColorDescriptor *src) (use soapcpp2 -Ed)
struct tt__ColorDescriptor
{
/// Size of ColorCluster array is 0..unbounded.
   $int                                  __sizeColorCluster             0;
/// struct _tt__ColorDescriptor_ColorCluster operations:
/// - soap_default__tt__ColorDescriptor_ColorCluster(soap*, _tt__ColorDescriptor_ColorCluster*) reset members to default
/// - int soap_read__tt__ColorDescriptor_ColorCluster(soap*, _tt__ColorDescriptor_ColorCluster*) deserialize from a source
/// - int soap_write__tt__ColorDescriptor_ColorCluster(soap*, _tt__ColorDescriptor_ColorCluster*) serialize to a sink
/// - _tt__ColorDescriptor_ColorCluster* soap_dup__tt__ColorDescriptor_ColorCluster(soap*, _tt__ColorDescriptor_ColorCluster* dst, _tt__ColorDescriptor_ColorCluster *src) returns deep copy of _tt__ColorDescriptor_ColorCluster src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ColorDescriptor_ColorCluster(_tt__ColorDescriptor_ColorCluster*) deep deletes _tt__ColorDescriptor_ColorCluster data members, use only on dst after soap_dup__tt__ColorDescriptor_ColorCluster(NULL, _tt__ColorDescriptor_ColorCluster *dst, _tt__ColorDescriptor_ColorCluster *src) (use soapcpp2 -Ed)
    struct _tt__ColorDescriptor_ColorCluster
    {
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Element "Weight" of XSD type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element "Covariance" of XSD type "http://www.onvif.org/ver10/schema":ColorCovariance.
    struct tt__ColorCovariance*          Covariance                     0;	///< Optional element.
    }                                   *ColorCluster                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    struct tt__ColorDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
///
/// struct tt__ColorDescriptorExtension operations:
/// - soap_default_tt__ColorDescriptorExtension(soap*, tt__ColorDescriptorExtension*) reset members to default
/// - int soap_read_tt__ColorDescriptorExtension(soap*, tt__ColorDescriptorExtension*) deserialize from a source
/// - int soap_write_tt__ColorDescriptorExtension(soap*, tt__ColorDescriptorExtension*) serialize to a sink
/// - tt__ColorDescriptorExtension* soap_dup_tt__ColorDescriptorExtension(soap*, tt__ColorDescriptorExtension* dst, tt__ColorDescriptorExtension *src) returns deep copy of tt__ColorDescriptorExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorDescriptorExtension(tt__ColorDescriptorExtension*) deep deletes tt__ColorDescriptorExtension data members, use only on dst after soap_dup_tt__ColorDescriptorExtension(NULL, tt__ColorDescriptorExtension *dst, tt__ColorDescriptorExtension *src) (use soapcpp2 -Ed)
struct tt__ColorDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
///
/// struct tt__ClassDescriptor operations:
/// - soap_default_tt__ClassDescriptor(soap*, tt__ClassDescriptor*) reset members to default
/// - int soap_read_tt__ClassDescriptor(soap*, tt__ClassDescriptor*) deserialize from a source
/// - int soap_write_tt__ClassDescriptor(soap*, tt__ClassDescriptor*) serialize to a sink
/// - tt__ClassDescriptor* soap_dup_tt__ClassDescriptor(soap*, tt__ClassDescriptor* dst, tt__ClassDescriptor *src) returns deep copy of tt__ClassDescriptor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ClassDescriptor(tt__ClassDescriptor*) deep deletes tt__ClassDescriptor data members, use only on dst after soap_dup_tt__ClassDescriptor(NULL, tt__ClassDescriptor *dst, tt__ClassDescriptor *src) (use soapcpp2 -Ed)
struct tt__ClassDescriptor
{
/// Size of ClassCandidate array is 0..unbounded.
   $int                                  __sizeClassCandidate           0;
/// struct _tt__ClassDescriptor_ClassCandidate operations:
/// - soap_default__tt__ClassDescriptor_ClassCandidate(soap*, _tt__ClassDescriptor_ClassCandidate*) reset members to default
/// - int soap_read__tt__ClassDescriptor_ClassCandidate(soap*, _tt__ClassDescriptor_ClassCandidate*) deserialize from a source
/// - int soap_write__tt__ClassDescriptor_ClassCandidate(soap*, _tt__ClassDescriptor_ClassCandidate*) serialize to a sink
/// - _tt__ClassDescriptor_ClassCandidate* soap_dup__tt__ClassDescriptor_ClassCandidate(soap*, _tt__ClassDescriptor_ClassCandidate* dst, _tt__ClassDescriptor_ClassCandidate *src) returns deep copy of _tt__ClassDescriptor_ClassCandidate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ClassDescriptor_ClassCandidate(_tt__ClassDescriptor_ClassCandidate*) deep deletes _tt__ClassDescriptor_ClassCandidate data members, use only on dst after soap_dup__tt__ClassDescriptor_ClassCandidate(NULL, _tt__ClassDescriptor_ClassCandidate *dst, _tt__ClassDescriptor_ClassCandidate *src) (use soapcpp2 -Ed)
    struct _tt__ClassDescriptor_ClassCandidate
    {
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":ClassType.
    enum tt__ClassType                   Type                           1;	///< Required element.
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }                                   *ClassCandidate                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    struct tt__ClassDescriptorExtension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
///
/// struct tt__ClassDescriptorExtension operations:
/// - soap_default_tt__ClassDescriptorExtension(soap*, tt__ClassDescriptorExtension*) reset members to default
/// - int soap_read_tt__ClassDescriptorExtension(soap*, tt__ClassDescriptorExtension*) deserialize from a source
/// - int soap_write_tt__ClassDescriptorExtension(soap*, tt__ClassDescriptorExtension*) serialize to a sink
/// - tt__ClassDescriptorExtension* soap_dup_tt__ClassDescriptorExtension(soap*, tt__ClassDescriptorExtension* dst, tt__ClassDescriptorExtension *src) returns deep copy of tt__ClassDescriptorExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ClassDescriptorExtension(tt__ClassDescriptorExtension*) deep deletes tt__ClassDescriptorExtension data members, use only on dst after soap_dup_tt__ClassDescriptorExtension(NULL, tt__ClassDescriptorExtension *dst, tt__ClassDescriptorExtension *src) (use soapcpp2 -Ed)
struct tt__ClassDescriptorExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Size of array of struct tt__OtherType* is 1..unbounded.
   $int                                  __sizeOtherTypes               1;
/// Array struct tt__OtherType* of size 1..unbounded.
    struct tt__OtherType*                OtherTypes                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2.
    struct tt__ClassDescriptorExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2 is a complexType.
///
/// struct tt__ClassDescriptorExtension2 operations:
/// - soap_default_tt__ClassDescriptorExtension2(soap*, tt__ClassDescriptorExtension2*) reset members to default
/// - int soap_read_tt__ClassDescriptorExtension2(soap*, tt__ClassDescriptorExtension2*) deserialize from a source
/// - int soap_write_tt__ClassDescriptorExtension2(soap*, tt__ClassDescriptorExtension2*) serialize to a sink
/// - tt__ClassDescriptorExtension2* soap_dup_tt__ClassDescriptorExtension2(soap*, tt__ClassDescriptorExtension2* dst, tt__ClassDescriptorExtension2 *src) returns deep copy of tt__ClassDescriptorExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ClassDescriptorExtension2(tt__ClassDescriptorExtension2*) deep deletes tt__ClassDescriptorExtension2 data members, use only on dst after soap_dup_tt__ClassDescriptorExtension2(NULL, tt__ClassDescriptorExtension2 *dst, tt__ClassDescriptorExtension2 *src) (use soapcpp2 -Ed)
struct tt__ClassDescriptorExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OtherType is a complexType.
///
/// struct tt__OtherType operations:
/// - soap_default_tt__OtherType(soap*, tt__OtherType*) reset members to default
/// - int soap_read_tt__OtherType(soap*, tt__OtherType*) deserialize from a source
/// - int soap_write_tt__OtherType(soap*, tt__OtherType*) serialize to a sink
/// - tt__OtherType* soap_dup_tt__OtherType(soap*, tt__OtherType* dst, tt__OtherType *src) returns deep copy of tt__OtherType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OtherType(tt__OtherType*) deep deletes tt__OtherType data members, use only on dst after soap_dup_tt__OtherType(NULL, tt__OtherType *dst, tt__OtherType *src) (use soapcpp2 -Ed)
struct tt__OtherType
{
/// <PRE><BLOCKQUOTE>
///   Object Class Type
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding object belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 1..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
///
/// struct tt__ObjectExtension operations:
/// - soap_default_tt__ObjectExtension(soap*, tt__ObjectExtension*) reset members to default
/// - int soap_read_tt__ObjectExtension(soap*, tt__ObjectExtension*) deserialize from a source
/// - int soap_write_tt__ObjectExtension(soap*, tt__ObjectExtension*) serialize to a sink
/// - tt__ObjectExtension* soap_dup_tt__ObjectExtension(soap*, tt__ObjectExtension* dst, tt__ObjectExtension *src) returns deep copy of tt__ObjectExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ObjectExtension(tt__ObjectExtension*) deep deletes tt__ObjectExtension data members, use only on dst after soap_dup_tt__ObjectExtension(NULL, tt__ObjectExtension *dst, tt__ObjectExtension *src) (use soapcpp2 -Ed)
struct tt__ObjectExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Transformation is a complexType.
///
/// struct tt__Transformation operations:
/// - soap_default_tt__Transformation(soap*, tt__Transformation*) reset members to default
/// - int soap_read_tt__Transformation(soap*, tt__Transformation*) deserialize from a source
/// - int soap_write_tt__Transformation(soap*, tt__Transformation*) serialize to a sink
/// - tt__Transformation* soap_dup_tt__Transformation(soap*, tt__Transformation* dst, tt__Transformation *src) returns deep copy of tt__Transformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Transformation(tt__Transformation*) deep deletes tt__Transformation data members, use only on dst after soap_dup_tt__Transformation(NULL, tt__Transformation *dst, tt__Transformation *src) (use soapcpp2 -Ed)
struct tt__Transformation
{
/// Element "Translate" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Translate                      0;	///< Optional element.
/// Element "Scale" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Scale                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TransformationExtension.
    struct tt__TransformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
///
/// struct tt__TransformationExtension operations:
/// - soap_default_tt__TransformationExtension(soap*, tt__TransformationExtension*) reset members to default
/// - int soap_read_tt__TransformationExtension(soap*, tt__TransformationExtension*) deserialize from a source
/// - int soap_write_tt__TransformationExtension(soap*, tt__TransformationExtension*) serialize to a sink
/// - tt__TransformationExtension* soap_dup_tt__TransformationExtension(soap*, tt__TransformationExtension* dst, tt__TransformationExtension *src) returns deep copy of tt__TransformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TransformationExtension(tt__TransformationExtension*) deep deletes tt__TransformationExtension data members, use only on dst after soap_dup_tt__TransformationExtension(NULL, tt__TransformationExtension *dst, tt__TransformationExtension *src) (use soapcpp2 -Ed)
struct tt__TransformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Frame is a complexType.
///
/// struct tt__Frame operations:
/// - soap_default_tt__Frame(soap*, tt__Frame*) reset members to default
/// - int soap_read_tt__Frame(soap*, tt__Frame*) deserialize from a source
/// - int soap_write_tt__Frame(soap*, tt__Frame*) serialize to a sink
/// - tt__Frame* soap_dup_tt__Frame(soap*, tt__Frame* dst, tt__Frame *src) returns deep copy of tt__Frame src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Frame(tt__Frame*) deep deletes tt__Frame data members, use only on dst after soap_dup_tt__Frame(NULL, tt__Frame *dst, tt__Frame *src) (use soapcpp2 -Ed)
struct tt__Frame
{
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      0;	///< Optional element.
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 0;	///< Optional element.
/// Size of array of struct tt__Object* is 0..unbounded.
   $int                                  __sizeObject                   0;
/// Array struct tt__Object* of size 0..unbounded.
    struct tt__Object*                   Object                         0;
/// Element "ObjectTree" of XSD type "http://www.onvif.org/ver10/schema":ObjectTree.
    struct tt__ObjectTree*               ObjectTree                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension.
    struct tt__FrameExtension*           Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
///
/// struct tt__FrameExtension operations:
/// - soap_default_tt__FrameExtension(soap*, tt__FrameExtension*) reset members to default
/// - int soap_read_tt__FrameExtension(soap*, tt__FrameExtension*) deserialize from a source
/// - int soap_write_tt__FrameExtension(soap*, tt__FrameExtension*) serialize to a sink
/// - tt__FrameExtension* soap_dup_tt__FrameExtension(soap*, tt__FrameExtension* dst, tt__FrameExtension *src) returns deep copy of tt__FrameExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FrameExtension(tt__FrameExtension*) deep deletes tt__FrameExtension data members, use only on dst after soap_dup_tt__FrameExtension(NULL, tt__FrameExtension *dst, tt__FrameExtension *src) (use soapcpp2 -Ed)
struct tt__FrameExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "MotionInCells" of XSD type "http://www.onvif.org/ver10/schema":MotionInCells.
    struct tt__MotionInCells*            MotionInCells                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension2.
    struct tt__FrameExtension2*          Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension2 is a complexType.
///
/// struct tt__FrameExtension2 operations:
/// - soap_default_tt__FrameExtension2(soap*, tt__FrameExtension2*) reset members to default
/// - int soap_read_tt__FrameExtension2(soap*, tt__FrameExtension2*) deserialize from a source
/// - int soap_write_tt__FrameExtension2(soap*, tt__FrameExtension2*) serialize to a sink
/// - tt__FrameExtension2* soap_dup_tt__FrameExtension2(soap*, tt__FrameExtension2* dst, tt__FrameExtension2 *src) returns deep copy of tt__FrameExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FrameExtension2(tt__FrameExtension2*) deep deletes tt__FrameExtension2 data members, use only on dst after soap_dup_tt__FrameExtension2(NULL, tt__FrameExtension2 *dst, tt__FrameExtension2 *src) (use soapcpp2 -Ed)
struct tt__FrameExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Merge is a complexType.
///
/// struct tt__Merge operations:
/// - soap_default_tt__Merge(soap*, tt__Merge*) reset members to default
/// - int soap_read_tt__Merge(soap*, tt__Merge*) deserialize from a source
/// - int soap_write_tt__Merge(soap*, tt__Merge*) serialize to a sink
/// - tt__Merge* soap_dup_tt__Merge(soap*, tt__Merge* dst, tt__Merge *src) returns deep copy of tt__Merge src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Merge(tt__Merge*) deep deletes tt__Merge data members, use only on dst after soap_dup_tt__Merge(NULL, tt__Merge *dst, tt__Merge *src) (use soapcpp2 -Ed)
struct tt__Merge
{
/// Size of array of struct tt__ObjectId* is 2..unbounded.
   $int                                  __sizefrom                     2;
/// Array struct tt__ObjectId* of size 2..unbounded.
    struct tt__ObjectId*                 from                           2;
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 to                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Split is a complexType.
///
/// struct tt__Split operations:
/// - soap_default_tt__Split(soap*, tt__Split*) reset members to default
/// - int soap_read_tt__Split(soap*, tt__Split*) deserialize from a source
/// - int soap_write_tt__Split(soap*, tt__Split*) serialize to a sink
/// - tt__Split* soap_dup_tt__Split(soap*, tt__Split* dst, tt__Split *src) returns deep copy of tt__Split src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Split(tt__Split*) deep deletes tt__Split data members, use only on dst after soap_dup_tt__Split(NULL, tt__Split *dst, tt__Split *src) (use soapcpp2 -Ed)
struct tt__Split
{
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 from                           1;	///< Required element.
/// Size of array of struct tt__ObjectId* is 2..unbounded.
   $int                                  __sizeto                       2;
/// Array struct tt__ObjectId* of size 2..unbounded.
    struct tt__ObjectId*                 to                             2;
};

/// @brief "http://www.onvif.org/ver10/schema":Rename is a complexType.
///
/// struct tt__Rename operations:
/// - soap_default_tt__Rename(soap*, tt__Rename*) reset members to default
/// - int soap_read_tt__Rename(soap*, tt__Rename*) deserialize from a source
/// - int soap_write_tt__Rename(soap*, tt__Rename*) serialize to a sink
/// - tt__Rename* soap_dup_tt__Rename(soap*, tt__Rename* dst, tt__Rename *src) returns deep copy of tt__Rename src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Rename(tt__Rename*) deep deletes tt__Rename data members, use only on dst after soap_dup_tt__Rename(NULL, tt__Rename *dst, tt__Rename *src) (use soapcpp2 -Ed)
struct tt__Rename
{
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 from                           1;	///< Required element.
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 to                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
///
/// struct tt__ObjectId operations:
/// - soap_default_tt__ObjectId(soap*, tt__ObjectId*) reset members to default
/// - int soap_read_tt__ObjectId(soap*, tt__ObjectId*) deserialize from a source
/// - int soap_write_tt__ObjectId(soap*, tt__ObjectId*) serialize to a sink
/// - tt__ObjectId* soap_dup_tt__ObjectId(soap*, tt__ObjectId* dst, tt__ObjectId *src) returns deep copy of tt__ObjectId src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ObjectId(tt__ObjectId*) deep deletes tt__ObjectId data members, use only on dst after soap_dup_tt__ObjectId(NULL, tt__ObjectId *dst, tt__ObjectId *src) (use soapcpp2 -Ed)
struct tt__ObjectId
{
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
///
/// struct tt__Behaviour operations:
/// - soap_default_tt__Behaviour(soap*, tt__Behaviour*) reset members to default
/// - int soap_read_tt__Behaviour(soap*, tt__Behaviour*) deserialize from a source
/// - int soap_write_tt__Behaviour(soap*, tt__Behaviour*) serialize to a sink
/// - tt__Behaviour* soap_dup_tt__Behaviour(soap*, tt__Behaviour* dst, tt__Behaviour *src) returns deep copy of tt__Behaviour src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Behaviour(tt__Behaviour*) deep deletes tt__Behaviour data members, use only on dst after soap_dup_tt__Behaviour(NULL, tt__Behaviour *dst, tt__Behaviour *src) (use soapcpp2 -Ed)
struct tt__Behaviour
{
/// struct _tt__Behaviour_Removed operations:
/// - soap_default__tt__Behaviour_Removed(soap*, _tt__Behaviour_Removed*) reset members to default
/// - int soap_read__tt__Behaviour_Removed(soap*, _tt__Behaviour_Removed*) deserialize from a source
/// - int soap_write__tt__Behaviour_Removed(soap*, _tt__Behaviour_Removed*) serialize to a sink
/// - _tt__Behaviour_Removed* soap_dup__tt__Behaviour_Removed(soap*, _tt__Behaviour_Removed* dst, _tt__Behaviour_Removed *src) returns deep copy of _tt__Behaviour_Removed src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__Behaviour_Removed(_tt__Behaviour_Removed*) deep deletes _tt__Behaviour_Removed data members, use only on dst after soap_dup__tt__Behaviour_Removed(NULL, _tt__Behaviour_Removed *dst, _tt__Behaviour_Removed *src) (use soapcpp2 -Ed)
    struct _tt__Behaviour_Removed
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Removed                        0;	///< Optional element.
/// struct _tt__Behaviour_Idle operations:
/// - soap_default__tt__Behaviour_Idle(soap*, _tt__Behaviour_Idle*) reset members to default
/// - int soap_read__tt__Behaviour_Idle(soap*, _tt__Behaviour_Idle*) deserialize from a source
/// - int soap_write__tt__Behaviour_Idle(soap*, _tt__Behaviour_Idle*) serialize to a sink
/// - _tt__Behaviour_Idle* soap_dup__tt__Behaviour_Idle(soap*, _tt__Behaviour_Idle* dst, _tt__Behaviour_Idle *src) returns deep copy of _tt__Behaviour_Idle src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__Behaviour_Idle(_tt__Behaviour_Idle*) deep deletes _tt__Behaviour_Idle data members, use only on dst after soap_dup__tt__Behaviour_Idle(NULL, _tt__Behaviour_Idle *dst, _tt__Behaviour_Idle *src) (use soapcpp2 -Ed)
    struct _tt__Behaviour_Idle
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Idle                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    struct tt__BehaviourExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
///
/// struct tt__BehaviourExtension operations:
/// - soap_default_tt__BehaviourExtension(soap*, tt__BehaviourExtension*) reset members to default
/// - int soap_read_tt__BehaviourExtension(soap*, tt__BehaviourExtension*) deserialize from a source
/// - int soap_write_tt__BehaviourExtension(soap*, tt__BehaviourExtension*) serialize to a sink
/// - tt__BehaviourExtension* soap_dup_tt__BehaviourExtension(soap*, tt__BehaviourExtension* dst, tt__BehaviourExtension *src) returns deep copy of tt__BehaviourExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BehaviourExtension(tt__BehaviourExtension*) deep deletes tt__BehaviourExtension data members, use only on dst after soap_dup_tt__BehaviourExtension(NULL, tt__BehaviourExtension *dst, tt__BehaviourExtension *src) (use soapcpp2 -Ed)
struct tt__BehaviourExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
///
/// struct tt__ObjectTree operations:
/// - soap_default_tt__ObjectTree(soap*, tt__ObjectTree*) reset members to default
/// - int soap_read_tt__ObjectTree(soap*, tt__ObjectTree*) deserialize from a source
/// - int soap_write_tt__ObjectTree(soap*, tt__ObjectTree*) serialize to a sink
/// - tt__ObjectTree* soap_dup_tt__ObjectTree(soap*, tt__ObjectTree* dst, tt__ObjectTree *src) returns deep copy of tt__ObjectTree src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ObjectTree(tt__ObjectTree*) deep deletes tt__ObjectTree data members, use only on dst after soap_dup_tt__ObjectTree(NULL, tt__ObjectTree *dst, tt__ObjectTree *src) (use soapcpp2 -Ed)
struct tt__ObjectTree
{
/// Size of array of struct tt__Rename* is 0..unbounded.
   $int                                  __sizeRename                   0;
/// Array struct tt__Rename* of size 0..unbounded.
    struct tt__Rename*                   Rename                         0;
/// Size of array of struct tt__Split* is 0..unbounded.
   $int                                  __sizeSplit                    0;
/// Array struct tt__Split* of size 0..unbounded.
    struct tt__Split*                    Split                          0;
/// Size of array of struct tt__Merge* is 0..unbounded.
   $int                                  __sizeMerge                    0;
/// Array struct tt__Merge* of size 0..unbounded.
    struct tt__Merge*                    Merge                          0;
/// Size of array of struct tt__ObjectId* is 0..unbounded.
   $int                                  __sizeDelete                   0;
/// Array struct tt__ObjectId* of size 0..unbounded.
    struct tt__ObjectId*                 Delete                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    struct tt__ObjectTreeExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
///
/// struct tt__ObjectTreeExtension operations:
/// - soap_default_tt__ObjectTreeExtension(soap*, tt__ObjectTreeExtension*) reset members to default
/// - int soap_read_tt__ObjectTreeExtension(soap*, tt__ObjectTreeExtension*) deserialize from a source
/// - int soap_write_tt__ObjectTreeExtension(soap*, tt__ObjectTreeExtension*) serialize to a sink
/// - tt__ObjectTreeExtension* soap_dup_tt__ObjectTreeExtension(soap*, tt__ObjectTreeExtension* dst, tt__ObjectTreeExtension *src) returns deep copy of tt__ObjectTreeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ObjectTreeExtension(tt__ObjectTreeExtension*) deep deletes tt__ObjectTreeExtension data members, use only on dst after soap_dup_tt__ObjectTreeExtension(NULL, tt__ObjectTreeExtension *dst, tt__ObjectTreeExtension *src) (use soapcpp2 -Ed)
struct tt__ObjectTreeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionInCells is a complexType.
///
/// struct tt__MotionInCells operations:
/// - soap_default_tt__MotionInCells(soap*, tt__MotionInCells*) reset members to default
/// - int soap_read_tt__MotionInCells(soap*, tt__MotionInCells*) deserialize from a source
/// - int soap_write_tt__MotionInCells(soap*, tt__MotionInCells*) serialize to a sink
/// - tt__MotionInCells* soap_dup_tt__MotionInCells(soap*, tt__MotionInCells* dst, tt__MotionInCells *src) returns deep copy of tt__MotionInCells src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MotionInCells(tt__MotionInCells*) deep deletes tt__MotionInCells data members, use only on dst after soap_dup_tt__MotionInCells(NULL, tt__MotionInCells *dst, tt__MotionInCells *src) (use soapcpp2 -Ed)
struct tt__MotionInCells
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A 1 denotes a cell where motion is detected and a 0 an empty cell. The first cell is in the upper left corner. Then the cell order goes first from left to right and then from up to down. If the number of cells is not a multiple of 8 the last byte is filled with zeros. The information is run length encoded according to Packbit coding in ISO 12369 (TIFF, Revision 6.0).
/// </BLOCKQUOTE></PRE>
/// Attribute "Cells" of XSD type xs:base64Binary.
   @struct xsd__base64Binary             Cells                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
///
/// struct tt__AnalyticsEngineConfiguration operations:
/// - soap_default_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration*) reset members to default
/// - int soap_read_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration*) serialize to a sink
/// - tt__AnalyticsEngineConfiguration* soap_dup_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration* dst, tt__AnalyticsEngineConfiguration *src) returns deep copy of tt__AnalyticsEngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineConfiguration(tt__AnalyticsEngineConfiguration*) deep deletes tt__AnalyticsEngineConfiguration data members, use only on dst after soap_dup_tt__AnalyticsEngineConfiguration(NULL, tt__AnalyticsEngineConfiguration *dst, tt__AnalyticsEngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeAnalyticsModule          0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   AnalyticsModule                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    struct tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
///
/// struct tt__AnalyticsEngineConfigurationExtension operations:
/// - soap_default_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension*) reset members to default
/// - int soap_read_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension*) serialize to a sink
/// - tt__AnalyticsEngineConfigurationExtension* soap_dup_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension* dst, tt__AnalyticsEngineConfigurationExtension *src) returns deep copy of tt__AnalyticsEngineConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineConfigurationExtension(tt__AnalyticsEngineConfigurationExtension*) deep deletes tt__AnalyticsEngineConfigurationExtension data members, use only on dst after soap_dup_tt__AnalyticsEngineConfigurationExtension(NULL, tt__AnalyticsEngineConfigurationExtension *dst, tt__AnalyticsEngineConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
///
/// struct tt__RuleEngineConfiguration operations:
/// - soap_default_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration*) reset members to default
/// - int soap_read_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration*) deserialize from a source
/// - int soap_write_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration*) serialize to a sink
/// - tt__RuleEngineConfiguration* soap_dup_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration* dst, tt__RuleEngineConfiguration *src) returns deep copy of tt__RuleEngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RuleEngineConfiguration(tt__RuleEngineConfiguration*) deep deletes tt__RuleEngineConfiguration data members, use only on dst after soap_dup_tt__RuleEngineConfiguration(NULL, tt__RuleEngineConfiguration *dst, tt__RuleEngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__RuleEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeRule                     0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   Rule                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    struct tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
///
/// struct tt__RuleEngineConfigurationExtension operations:
/// - soap_default_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension*) reset members to default
/// - int soap_read_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension*) serialize to a sink
/// - tt__RuleEngineConfigurationExtension* soap_dup_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension* dst, tt__RuleEngineConfigurationExtension *src) returns deep copy of tt__RuleEngineConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RuleEngineConfigurationExtension(tt__RuleEngineConfigurationExtension*) deep deletes tt__RuleEngineConfigurationExtension data members, use only on dst after soap_dup_tt__RuleEngineConfigurationExtension(NULL, tt__RuleEngineConfigurationExtension *dst, tt__RuleEngineConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__RuleEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Config is a complexType.
///
/// struct tt__Config operations:
/// - soap_default_tt__Config(soap*, tt__Config*) reset members to default
/// - int soap_read_tt__Config(soap*, tt__Config*) deserialize from a source
/// - int soap_write_tt__Config(soap*, tt__Config*) serialize to a sink
/// - tt__Config* soap_dup_tt__Config(soap*, tt__Config* dst, tt__Config *src) returns deep copy of tt__Config src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Config(tt__Config*) deep deletes tt__Config data members, use only on dst after soap_dup_tt__Config(NULL, tt__Config *dst, tt__Config *src) (use soapcpp2 -Ed)
struct tt__Config
{
/// <PRE><BLOCKQUOTE>
///   List of configuration parameters as defined in the correspding description.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
///
/// struct tt__ConfigDescription operations:
/// - soap_default_tt__ConfigDescription(soap*, tt__ConfigDescription*) reset members to default
/// - int soap_read_tt__ConfigDescription(soap*, tt__ConfigDescription*) deserialize from a source
/// - int soap_write_tt__ConfigDescription(soap*, tt__ConfigDescription*) serialize to a sink
/// - tt__ConfigDescription* soap_dup_tt__ConfigDescription(soap*, tt__ConfigDescription* dst, tt__ConfigDescription *src) returns deep copy of tt__ConfigDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ConfigDescription(tt__ConfigDescription*) deep deletes tt__ConfigDescription data members, use only on dst after soap_dup_tt__ConfigDescription(NULL, tt__ConfigDescription *dst, tt__ConfigDescription *src) (use soapcpp2 -Ed)
struct tt__ConfigDescription
{
/// <PRE><BLOCKQUOTE>
///   List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
///   should be used to transport the information to ease parsing of dynamically defined messages by a client
///   application.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
///   the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
///   The name of all Items must be unique within all Items contained in any group of this Message.
///   Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// </BLOCKQUOTE></PRE>
/// Size of Messages array is 0..unbounded.
   $int                                  __sizeMessages                 0;
/// struct _tt__ConfigDescription_Messages operations:
/// - soap_default__tt__ConfigDescription_Messages(soap*, _tt__ConfigDescription_Messages*) reset members to default
/// - int soap_read__tt__ConfigDescription_Messages(soap*, _tt__ConfigDescription_Messages*) deserialize from a source
/// - int soap_write__tt__ConfigDescription_Messages(soap*, _tt__ConfigDescription_Messages*) serialize to a sink
/// - _tt__ConfigDescription_Messages* soap_dup__tt__ConfigDescription_Messages(soap*, _tt__ConfigDescription_Messages* dst, _tt__ConfigDescription_Messages *src) returns deep copy of _tt__ConfigDescription_Messages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ConfigDescription_Messages(_tt__ConfigDescription_Messages*) deep deletes _tt__ConfigDescription_Messages data members, use only on dst after soap_dup__tt__ConfigDescription_Messages(NULL, _tt__ConfigDescription_Messages *dst, _tt__ConfigDescription_Messages *src) (use soapcpp2 -Ed)
    struct _tt__ConfigDescription_Messages
    {
/// INHERITED FROM tt__MessageDescription:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM tt__MessageDescription
/// <PRE><BLOCKQUOTE>
///   The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic
///   by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine").
///   Even without knowing the complete topic name, the subscriber will be able to distiguish the
///   messages produced by different rule instances of the same type via the Source fields of the message.
///   There the name of the rule instance, which produced the message, must be listed.
/// </BLOCKQUOTE></PRE>
/// Element "ParentTopic" of XSD type xs:string.
    char*                                ParentTopic                    1;	///< Required element.
    }                                   *Messages                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    struct tt__ConfigDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   XML Type of the Configuration (e.g. "tt::LineDetector").
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:QName.
   @_QName                               Name                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
///
/// struct tt__ConfigDescriptionExtension operations:
/// - soap_default_tt__ConfigDescriptionExtension(soap*, tt__ConfigDescriptionExtension*) reset members to default
/// - int soap_read_tt__ConfigDescriptionExtension(soap*, tt__ConfigDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__ConfigDescriptionExtension(soap*, tt__ConfigDescriptionExtension*) serialize to a sink
/// - tt__ConfigDescriptionExtension* soap_dup_tt__ConfigDescriptionExtension(soap*, tt__ConfigDescriptionExtension* dst, tt__ConfigDescriptionExtension *src) returns deep copy of tt__ConfigDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ConfigDescriptionExtension(tt__ConfigDescriptionExtension*) deep deletes tt__ConfigDescriptionExtension data members, use only on dst after soap_dup_tt__ConfigDescriptionExtension(NULL, tt__ConfigDescriptionExtension *dst, tt__ConfigDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__ConfigDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
///
/// struct tt__SupportedRules operations:
/// - soap_default_tt__SupportedRules(soap*, tt__SupportedRules*) reset members to default
/// - int soap_read_tt__SupportedRules(soap*, tt__SupportedRules*) deserialize from a source
/// - int soap_write_tt__SupportedRules(soap*, tt__SupportedRules*) serialize to a sink
/// - tt__SupportedRules* soap_dup_tt__SupportedRules(soap*, tt__SupportedRules* dst, tt__SupportedRules *src) returns deep copy of tt__SupportedRules src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedRules(tt__SupportedRules*) deep deletes tt__SupportedRules data members, use only on dst after soap_dup_tt__SupportedRules(NULL, tt__SupportedRules *dst, tt__SupportedRules *src) (use soapcpp2 -Ed)
struct tt__SupportedRules
{
/// <PRE><BLOCKQUOTE>
///   Lists the location of all schemas that are referenced in the rules.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeRuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         RuleContentSchemaLocation      0;
/// <PRE><BLOCKQUOTE>
///   List of rules supported by the Video Analytics configuration..
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
   $int                                  __sizeRuleDescription          0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        RuleDescription                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    struct tt__SupportedRulesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
///
/// struct tt__SupportedRulesExtension operations:
/// - soap_default_tt__SupportedRulesExtension(soap*, tt__SupportedRulesExtension*) reset members to default
/// - int soap_read_tt__SupportedRulesExtension(soap*, tt__SupportedRulesExtension*) deserialize from a source
/// - int soap_write_tt__SupportedRulesExtension(soap*, tt__SupportedRulesExtension*) serialize to a sink
/// - tt__SupportedRulesExtension* soap_dup_tt__SupportedRulesExtension(soap*, tt__SupportedRulesExtension* dst, tt__SupportedRulesExtension *src) returns deep copy of tt__SupportedRulesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedRulesExtension(tt__SupportedRulesExtension*) deep deletes tt__SupportedRulesExtension data members, use only on dst after soap_dup_tt__SupportedRulesExtension(NULL, tt__SupportedRulesExtension *dst, tt__SupportedRulesExtension *src) (use soapcpp2 -Ed)
struct tt__SupportedRulesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
///
/// struct tt__SupportedAnalyticsModules operations:
/// - soap_default_tt__SupportedAnalyticsModules(soap*, tt__SupportedAnalyticsModules*) reset members to default
/// - int soap_read_tt__SupportedAnalyticsModules(soap*, tt__SupportedAnalyticsModules*) deserialize from a source
/// - int soap_write_tt__SupportedAnalyticsModules(soap*, tt__SupportedAnalyticsModules*) serialize to a sink
/// - tt__SupportedAnalyticsModules* soap_dup_tt__SupportedAnalyticsModules(soap*, tt__SupportedAnalyticsModules* dst, tt__SupportedAnalyticsModules *src) returns deep copy of tt__SupportedAnalyticsModules src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedAnalyticsModules(tt__SupportedAnalyticsModules*) deep deletes tt__SupportedAnalyticsModules data members, use only on dst after soap_dup_tt__SupportedAnalyticsModules(NULL, tt__SupportedAnalyticsModules *dst, tt__SupportedAnalyticsModules *src) (use soapcpp2 -Ed)
struct tt__SupportedAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   It optionally contains a list of URLs that provide the location of schema files.
///   These schema files describe the types and elements used in the analytics module descriptions.
///   If the analytics module descriptions reference types or elements of the ONVIF schema file,
///   the ONVIF schema file MUST be explicitly listed.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeAnalyticsModuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         AnalyticsModuleContentSchemaLocation 0;
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
   $int                                  __sizeAnalyticsModuleDescription 0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        AnalyticsModuleDescription     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    struct tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
///
/// struct tt__SupportedAnalyticsModulesExtension operations:
/// - soap_default_tt__SupportedAnalyticsModulesExtension(soap*, tt__SupportedAnalyticsModulesExtension*) reset members to default
/// - int soap_read_tt__SupportedAnalyticsModulesExtension(soap*, tt__SupportedAnalyticsModulesExtension*) deserialize from a source
/// - int soap_write_tt__SupportedAnalyticsModulesExtension(soap*, tt__SupportedAnalyticsModulesExtension*) serialize to a sink
/// - tt__SupportedAnalyticsModulesExtension* soap_dup_tt__SupportedAnalyticsModulesExtension(soap*, tt__SupportedAnalyticsModulesExtension* dst, tt__SupportedAnalyticsModulesExtension *src) returns deep copy of tt__SupportedAnalyticsModulesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportedAnalyticsModulesExtension(tt__SupportedAnalyticsModulesExtension*) deep deletes tt__SupportedAnalyticsModulesExtension data members, use only on dst after soap_dup_tt__SupportedAnalyticsModulesExtension(NULL, tt__SupportedAnalyticsModulesExtension *dst, tt__SupportedAnalyticsModulesExtension *src) (use soapcpp2 -Ed)
struct tt__SupportedAnalyticsModulesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
///
/// struct tt__PolygonConfiguration operations:
/// - soap_default_tt__PolygonConfiguration(soap*, tt__PolygonConfiguration*) reset members to default
/// - int soap_read_tt__PolygonConfiguration(soap*, tt__PolygonConfiguration*) deserialize from a source
/// - int soap_write_tt__PolygonConfiguration(soap*, tt__PolygonConfiguration*) serialize to a sink
/// - tt__PolygonConfiguration* soap_dup_tt__PolygonConfiguration(soap*, tt__PolygonConfiguration* dst, tt__PolygonConfiguration *src) returns deep copy of tt__PolygonConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolygonConfiguration(tt__PolygonConfiguration*) deep deletes tt__PolygonConfiguration data members, use only on dst after soap_dup_tt__PolygonConfiguration(NULL, tt__PolygonConfiguration *dst, tt__PolygonConfiguration *src) (use soapcpp2 -Ed)
struct tt__PolygonConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Polygon configuration for rule parameters
/// </BLOCKQUOTE></PRE>
/// Element "Polygon" of XSD type "http://www.onvif.org/ver10/schema":Polygon.
    struct tt__Polygon*                  Polygon                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
///
/// struct tt__PolylineArray operations:
/// - soap_default_tt__PolylineArray(soap*, tt__PolylineArray*) reset members to default
/// - int soap_read_tt__PolylineArray(soap*, tt__PolylineArray*) deserialize from a source
/// - int soap_write_tt__PolylineArray(soap*, tt__PolylineArray*) serialize to a sink
/// - tt__PolylineArray* soap_dup_tt__PolylineArray(soap*, tt__PolylineArray* dst, tt__PolylineArray *src) returns deep copy of tt__PolylineArray src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolylineArray(tt__PolylineArray*) deep deletes tt__PolylineArray data members, use only on dst after soap_dup_tt__PolylineArray(NULL, tt__PolylineArray *dst, tt__PolylineArray *src) (use soapcpp2 -Ed)
struct tt__PolylineArray
{
/// <PRE><BLOCKQUOTE>
///   Contains array of Polyline
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Polyline* is 1..unbounded.
   $int                                  __sizeSegment                  1;
/// Array struct tt__Polyline* of size 1..unbounded.
    struct tt__Polyline*                 Segment                        1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    struct tt__PolylineArrayExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
///
/// struct tt__PolylineArrayExtension operations:
/// - soap_default_tt__PolylineArrayExtension(soap*, tt__PolylineArrayExtension*) reset members to default
/// - int soap_read_tt__PolylineArrayExtension(soap*, tt__PolylineArrayExtension*) deserialize from a source
/// - int soap_write_tt__PolylineArrayExtension(soap*, tt__PolylineArrayExtension*) serialize to a sink
/// - tt__PolylineArrayExtension* soap_dup_tt__PolylineArrayExtension(soap*, tt__PolylineArrayExtension* dst, tt__PolylineArrayExtension *src) returns deep copy of tt__PolylineArrayExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolylineArrayExtension(tt__PolylineArrayExtension*) deep deletes tt__PolylineArrayExtension data members, use only on dst after soap_dup_tt__PolylineArrayExtension(NULL, tt__PolylineArrayExtension *dst, tt__PolylineArrayExtension *src) (use soapcpp2 -Ed)
struct tt__PolylineArrayExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
///
/// struct tt__PolylineArrayConfiguration operations:
/// - soap_default_tt__PolylineArrayConfiguration(soap*, tt__PolylineArrayConfiguration*) reset members to default
/// - int soap_read_tt__PolylineArrayConfiguration(soap*, tt__PolylineArrayConfiguration*) deserialize from a source
/// - int soap_write_tt__PolylineArrayConfiguration(soap*, tt__PolylineArrayConfiguration*) serialize to a sink
/// - tt__PolylineArrayConfiguration* soap_dup_tt__PolylineArrayConfiguration(soap*, tt__PolylineArrayConfiguration* dst, tt__PolylineArrayConfiguration *src) returns deep copy of tt__PolylineArrayConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PolylineArrayConfiguration(tt__PolylineArrayConfiguration*) deep deletes tt__PolylineArrayConfiguration data members, use only on dst after soap_dup_tt__PolylineArrayConfiguration(NULL, tt__PolylineArrayConfiguration *dst, tt__PolylineArrayConfiguration *src) (use soapcpp2 -Ed)
struct tt__PolylineArrayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains PolylineArray configuration data
/// </BLOCKQUOTE></PRE>
/// Element "PolylineArray" of XSD type "http://www.onvif.org/ver10/schema":PolylineArray.
    struct tt__PolylineArray*            PolylineArray                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
///
/// struct tt__MotionExpression operations:
/// - soap_default_tt__MotionExpression(soap*, tt__MotionExpression*) reset members to default
/// - int soap_read_tt__MotionExpression(soap*, tt__MotionExpression*) deserialize from a source
/// - int soap_write_tt__MotionExpression(soap*, tt__MotionExpression*) serialize to a sink
/// - tt__MotionExpression* soap_dup_tt__MotionExpression(soap*, tt__MotionExpression* dst, tt__MotionExpression *src) returns deep copy of tt__MotionExpression src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MotionExpression(tt__MotionExpression*) deep deletes tt__MotionExpression data members, use only on dst after soap_dup_tt__MotionExpression(NULL, tt__MotionExpression *dst, tt__MotionExpression *src) (use soapcpp2 -Ed)
struct tt__MotionExpression
{
/// <PRE><BLOCKQUOTE>
///   Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// </BLOCKQUOTE></PRE>
/// Element "Expression" of XSD type xs:string.
    char*                                Expression                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Type" of XSD type xs:string.
   @char*                                Type                           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
///
/// struct tt__MotionExpressionConfiguration operations:
/// - soap_default_tt__MotionExpressionConfiguration(soap*, tt__MotionExpressionConfiguration*) reset members to default
/// - int soap_read_tt__MotionExpressionConfiguration(soap*, tt__MotionExpressionConfiguration*) deserialize from a source
/// - int soap_write_tt__MotionExpressionConfiguration(soap*, tt__MotionExpressionConfiguration*) serialize to a sink
/// - tt__MotionExpressionConfiguration* soap_dup_tt__MotionExpressionConfiguration(soap*, tt__MotionExpressionConfiguration* dst, tt__MotionExpressionConfiguration *src) returns deep copy of tt__MotionExpressionConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MotionExpressionConfiguration(tt__MotionExpressionConfiguration*) deep deletes tt__MotionExpressionConfiguration data members, use only on dst after soap_dup_tt__MotionExpressionConfiguration(NULL, tt__MotionExpressionConfiguration *dst, tt__MotionExpressionConfiguration *src) (use soapcpp2 -Ed)
struct tt__MotionExpressionConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Rule MotionExpression configuration
/// </BLOCKQUOTE></PRE>
/// Element "MotionExpression" of XSD type "http://www.onvif.org/ver10/schema":MotionExpression.
    struct tt__MotionExpression*         MotionExpression               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
///
/// struct tt__CellLayout operations:
/// - soap_default_tt__CellLayout(soap*, tt__CellLayout*) reset members to default
/// - int soap_read_tt__CellLayout(soap*, tt__CellLayout*) deserialize from a source
/// - int soap_write_tt__CellLayout(soap*, tt__CellLayout*) serialize to a sink
/// - tt__CellLayout* soap_dup_tt__CellLayout(soap*, tt__CellLayout* dst, tt__CellLayout *src) returns deep copy of tt__CellLayout src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CellLayout(tt__CellLayout*) deep deletes tt__CellLayout data members, use only on dst after soap_dup_tt__CellLayout(NULL, tt__CellLayout *dst, tt__CellLayout *src) (use soapcpp2 -Ed)
struct tt__CellLayout
{
/// <PRE><BLOCKQUOTE>
///   Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// </BLOCKQUOTE></PRE>
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
///
/// struct tt__MetadataStream operations:
/// - soap_default_tt__MetadataStream(soap*, tt__MetadataStream*) reset members to default
/// - int soap_read_tt__MetadataStream(soap*, tt__MetadataStream*) deserialize from a source
/// - int soap_write_tt__MetadataStream(soap*, tt__MetadataStream*) serialize to a sink
/// - tt__MetadataStream* soap_dup_tt__MetadataStream(soap*, tt__MetadataStream* dst, tt__MetadataStream *src) returns deep copy of tt__MetadataStream src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataStream(tt__MetadataStream*) deep deletes tt__MetadataStream data members, use only on dst after soap_dup_tt__MetadataStream(NULL, tt__MetadataStream *dst, tt__MetadataStream *src) (use soapcpp2 -Ed)
struct tt__MetadataStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    struct __tt__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _tt__union_MetadataStream selector: set to SOAP_UNION__tt__union_MetadataStream_<fieldname> or 0 to omit
    union _tt__union_MetadataStream
    {
/// Element "VideoAnalytics" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    struct tt__VideoAnalyticsStream*     VideoAnalytics                 1;	///< Required element.
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZStream.
    struct tt__PTZStream*                PTZ                            1;	///< Required element.
/// Element "Event" of XSD type "http://www.onvif.org/ver10/schema":EventStream.
    struct tt__EventStream*              Event                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    struct tt__MetadataStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
///
/// struct tt__MetadataStreamExtension operations:
/// - soap_default_tt__MetadataStreamExtension(soap*, tt__MetadataStreamExtension*) reset members to default
/// - int soap_read_tt__MetadataStreamExtension(soap*, tt__MetadataStreamExtension*) deserialize from a source
/// - int soap_write_tt__MetadataStreamExtension(soap*, tt__MetadataStreamExtension*) serialize to a sink
/// - tt__MetadataStreamExtension* soap_dup_tt__MetadataStreamExtension(soap*, tt__MetadataStreamExtension* dst, tt__MetadataStreamExtension *src) returns deep copy of tt__MetadataStreamExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataStreamExtension(tt__MetadataStreamExtension*) deep deletes tt__MetadataStreamExtension data members, use only on dst after soap_dup_tt__MetadataStreamExtension(NULL, tt__MetadataStreamExtension *dst, tt__MetadataStreamExtension *src) (use soapcpp2 -Ed)
struct tt__MetadataStreamExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "AudioAnalyticsStream" of XSD type "http://www.onvif.org/ver10/schema":AudioAnalyticsStream.
    struct tt__AudioAnalyticsStream*     AudioAnalyticsStream           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataStreamExtension2.
    struct tt__MetadataStreamExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStreamExtension2 is a complexType.
///
/// struct tt__MetadataStreamExtension2 operations:
/// - soap_default_tt__MetadataStreamExtension2(soap*, tt__MetadataStreamExtension2*) reset members to default
/// - int soap_read_tt__MetadataStreamExtension2(soap*, tt__MetadataStreamExtension2*) deserialize from a source
/// - int soap_write_tt__MetadataStreamExtension2(soap*, tt__MetadataStreamExtension2*) serialize to a sink
/// - tt__MetadataStreamExtension2* soap_dup_tt__MetadataStreamExtension2(soap*, tt__MetadataStreamExtension2* dst, tt__MetadataStreamExtension2 *src) returns deep copy of tt__MetadataStreamExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataStreamExtension2(tt__MetadataStreamExtension2*) deep deletes tt__MetadataStreamExtension2 data members, use only on dst after soap_dup_tt__MetadataStreamExtension2(NULL, tt__MetadataStreamExtension2 *dst, tt__MetadataStreamExtension2 *src) (use soapcpp2 -Ed)
struct tt__MetadataStreamExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAnalyticsStream is a complexType.
///
/// struct tt__AudioAnalyticsStream operations:
/// - soap_default_tt__AudioAnalyticsStream(soap*, tt__AudioAnalyticsStream*) reset members to default
/// - int soap_read_tt__AudioAnalyticsStream(soap*, tt__AudioAnalyticsStream*) deserialize from a source
/// - int soap_write_tt__AudioAnalyticsStream(soap*, tt__AudioAnalyticsStream*) serialize to a sink
/// - tt__AudioAnalyticsStream* soap_dup_tt__AudioAnalyticsStream(soap*, tt__AudioAnalyticsStream* dst, tt__AudioAnalyticsStream *src) returns deep copy of tt__AudioAnalyticsStream src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioAnalyticsStream(tt__AudioAnalyticsStream*) deep deletes tt__AudioAnalyticsStream data members, use only on dst after soap_dup_tt__AudioAnalyticsStream(NULL, tt__AudioAnalyticsStream *dst, tt__AudioAnalyticsStream *src) (use soapcpp2 -Ed)
struct tt__AudioAnalyticsStream
{
/// Size of array of struct tt__AudioDescriptor* is 0..unbounded.
   $int                                  __sizeAudioDescriptor          0;
/// Array struct tt__AudioDescriptor* of size 0..unbounded.
    struct tt__AudioDescriptor*          AudioDescriptor                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioAnalyticsStreamExtension.
    struct tt__AudioAnalyticsStreamExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDescriptor is a complexType.
///
/// struct tt__AudioDescriptor operations:
/// - soap_default_tt__AudioDescriptor(soap*, tt__AudioDescriptor*) reset members to default
/// - int soap_read_tt__AudioDescriptor(soap*, tt__AudioDescriptor*) deserialize from a source
/// - int soap_write_tt__AudioDescriptor(soap*, tt__AudioDescriptor*) serialize to a sink
/// - tt__AudioDescriptor* soap_dup_tt__AudioDescriptor(soap*, tt__AudioDescriptor* dst, tt__AudioDescriptor *src) returns deep copy of tt__AudioDescriptor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioDescriptor(tt__AudioDescriptor*) deep deletes tt__AudioDescriptor data members, use only on dst after soap_dup_tt__AudioDescriptor(NULL, tt__AudioDescriptor *dst, tt__AudioDescriptor *src) (use soapcpp2 -Ed)
struct tt__AudioDescriptor
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAnalyticsStreamExtension is a complexType.
///
/// struct tt__AudioAnalyticsStreamExtension operations:
/// - soap_default_tt__AudioAnalyticsStreamExtension(soap*, tt__AudioAnalyticsStreamExtension*) reset members to default
/// - int soap_read_tt__AudioAnalyticsStreamExtension(soap*, tt__AudioAnalyticsStreamExtension*) deserialize from a source
/// - int soap_write_tt__AudioAnalyticsStreamExtension(soap*, tt__AudioAnalyticsStreamExtension*) serialize to a sink
/// - tt__AudioAnalyticsStreamExtension* soap_dup_tt__AudioAnalyticsStreamExtension(soap*, tt__AudioAnalyticsStreamExtension* dst, tt__AudioAnalyticsStreamExtension *src) returns deep copy of tt__AudioAnalyticsStreamExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioAnalyticsStreamExtension(tt__AudioAnalyticsStreamExtension*) deep deletes tt__AudioAnalyticsStreamExtension data members, use only on dst after soap_dup_tt__AudioAnalyticsStreamExtension(NULL, tt__AudioAnalyticsStreamExtension *dst, tt__AudioAnalyticsStreamExtension *src) (use soapcpp2 -Ed)
struct tt__AudioAnalyticsStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
///
/// struct tt__VideoAnalyticsStream operations:
/// - soap_default_tt__VideoAnalyticsStream(soap*, tt__VideoAnalyticsStream*) reset members to default
/// - int soap_read_tt__VideoAnalyticsStream(soap*, tt__VideoAnalyticsStream*) deserialize from a source
/// - int soap_write_tt__VideoAnalyticsStream(soap*, tt__VideoAnalyticsStream*) serialize to a sink
/// - tt__VideoAnalyticsStream* soap_dup_tt__VideoAnalyticsStream(soap*, tt__VideoAnalyticsStream* dst, tt__VideoAnalyticsStream *src) returns deep copy of tt__VideoAnalyticsStream src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoAnalyticsStream(tt__VideoAnalyticsStream*) deep deletes tt__VideoAnalyticsStream data members, use only on dst after soap_dup_tt__VideoAnalyticsStream(NULL, tt__VideoAnalyticsStream *dst, tt__VideoAnalyticsStream *src) (use soapcpp2 -Ed)
struct tt__VideoAnalyticsStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    struct __tt__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _tt__union_VideoAnalyticsStream selector: set to SOAP_UNION__tt__union_VideoAnalyticsStream_<fieldname> or 0 to omit
/// Union for choice in tt__VideoAnalyticsStream.
    union _tt__union_VideoAnalyticsStream
    {
/// Element "Frame" of XSD type "http://www.onvif.org/ver10/schema":Frame.
    struct tt__Frame*                    Frame                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    struct tt__VideoAnalyticsStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
///
/// struct tt__VideoAnalyticsStreamExtension operations:
/// - soap_default_tt__VideoAnalyticsStreamExtension(soap*, tt__VideoAnalyticsStreamExtension*) reset members to default
/// - int soap_read_tt__VideoAnalyticsStreamExtension(soap*, tt__VideoAnalyticsStreamExtension*) deserialize from a source
/// - int soap_write_tt__VideoAnalyticsStreamExtension(soap*, tt__VideoAnalyticsStreamExtension*) serialize to a sink
/// - tt__VideoAnalyticsStreamExtension* soap_dup_tt__VideoAnalyticsStreamExtension(soap*, tt__VideoAnalyticsStreamExtension* dst, tt__VideoAnalyticsStreamExtension *src) returns deep copy of tt__VideoAnalyticsStreamExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoAnalyticsStreamExtension(tt__VideoAnalyticsStreamExtension*) deep deletes tt__VideoAnalyticsStreamExtension data members, use only on dst after soap_dup_tt__VideoAnalyticsStreamExtension(NULL, tt__VideoAnalyticsStreamExtension *dst, tt__VideoAnalyticsStreamExtension *src) (use soapcpp2 -Ed)
struct tt__VideoAnalyticsStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
///
/// struct tt__PTZStream operations:
/// - soap_default_tt__PTZStream(soap*, tt__PTZStream*) reset members to default
/// - int soap_read_tt__PTZStream(soap*, tt__PTZStream*) deserialize from a source
/// - int soap_write_tt__PTZStream(soap*, tt__PTZStream*) serialize to a sink
/// - tt__PTZStream* soap_dup_tt__PTZStream(soap*, tt__PTZStream* dst, tt__PTZStream *src) returns deep copy of tt__PTZStream src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStream(tt__PTZStream*) deep deletes tt__PTZStream data members, use only on dst after soap_dup_tt__PTZStream(NULL, tt__PTZStream *dst, tt__PTZStream *src) (use soapcpp2 -Ed)
struct tt__PTZStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    struct __tt__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _tt__union_PTZStream selector: set to SOAP_UNION__tt__union_PTZStream_<fieldname> or 0 to omit
/// Union for choice in tt__PTZStream.
    union _tt__union_PTZStream
    {
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    struct tt__PTZStreamExtension*       Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
///
/// struct tt__PTZStreamExtension operations:
/// - soap_default_tt__PTZStreamExtension(soap*, tt__PTZStreamExtension*) reset members to default
/// - int soap_read_tt__PTZStreamExtension(soap*, tt__PTZStreamExtension*) deserialize from a source
/// - int soap_write_tt__PTZStreamExtension(soap*, tt__PTZStreamExtension*) serialize to a sink
/// - tt__PTZStreamExtension* soap_dup_tt__PTZStreamExtension(soap*, tt__PTZStreamExtension* dst, tt__PTZStreamExtension *src) returns deep copy of tt__PTZStreamExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZStreamExtension(tt__PTZStreamExtension*) deep deletes tt__PTZStreamExtension data members, use only on dst after soap_dup_tt__PTZStreamExtension(NULL, tt__PTZStreamExtension *dst, tt__PTZStreamExtension *src) (use soapcpp2 -Ed)
struct tt__PTZStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EventStream is a complexType.
///
/// struct tt__EventStream operations:
/// - soap_default_tt__EventStream(soap*, tt__EventStream*) reset members to default
/// - int soap_read_tt__EventStream(soap*, tt__EventStream*) deserialize from a source
/// - int soap_write_tt__EventStream(soap*, tt__EventStream*) serialize to a sink
/// - tt__EventStream* soap_dup_tt__EventStream(soap*, tt__EventStream* dst, tt__EventStream *src) returns deep copy of tt__EventStream src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventStream(tt__EventStream*) deep deletes tt__EventStream data members, use only on dst after soap_dup_tt__EventStream(NULL, tt__EventStream *dst, tt__EventStream *src) (use soapcpp2 -Ed)
struct tt__EventStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    struct __tt__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _tt__union_EventStream selector: set to SOAP_UNION__tt__union_EventStream_<fieldname> or 0 to omit
/// Union for choice in tt__EventStream.
    union _tt__union_EventStream
    {
/// Element reference "http://www.onvif.org/ver10/schema:""http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    struct wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    struct tt__EventStreamExtension*     Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
///
/// struct tt__EventStreamExtension operations:
/// - soap_default_tt__EventStreamExtension(soap*, tt__EventStreamExtension*) reset members to default
/// - int soap_read_tt__EventStreamExtension(soap*, tt__EventStreamExtension*) deserialize from a source
/// - int soap_write_tt__EventStreamExtension(soap*, tt__EventStreamExtension*) serialize to a sink
/// - tt__EventStreamExtension* soap_dup_tt__EventStreamExtension(soap*, tt__EventStreamExtension* dst, tt__EventStreamExtension *src) returns deep copy of tt__EventStreamExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventStreamExtension(tt__EventStreamExtension*) deep deletes tt__EventStreamExtension data members, use only on dst after soap_dup_tt__EventStreamExtension(NULL, tt__EventStreamExtension *dst, tt__EventStreamExtension *src) (use soapcpp2 -Ed)
struct tt__EventStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration of the streaming and coding settings of a Video window.
/// </BLOCKQUOTE></PRE>
/// struct tt__PaneConfiguration operations:
/// - soap_default_tt__PaneConfiguration(soap*, tt__PaneConfiguration*) reset members to default
/// - int soap_read_tt__PaneConfiguration(soap*, tt__PaneConfiguration*) deserialize from a source
/// - int soap_write_tt__PaneConfiguration(soap*, tt__PaneConfiguration*) serialize to a sink
/// - tt__PaneConfiguration* soap_dup_tt__PaneConfiguration(soap*, tt__PaneConfiguration* dst, tt__PaneConfiguration *src) returns deep copy of tt__PaneConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneConfiguration(tt__PaneConfiguration*) deep deletes tt__PaneConfiguration data members, use only on dst after soap_dup_tt__PaneConfiguration(NULL, tt__PaneConfiguration *dst, tt__PaneConfiguration *src) (use soapcpp2 -Ed)
struct tt__PaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Optional name of the pane configuration.
/// </BLOCKQUOTE></PRE>
/// Element "PaneName" of XSD type xs:string.
    char*                                PaneName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
///   can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
///   The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
///   DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the audio encoder including codec, bitrate
///   and sample rate.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A pointer to a Receiver that has the necessary information to receive
///   data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
///   GetReceivers command of the Receiver Service.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A unique identifier in the display device.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
/// </BLOCKQUOTE></PRE>
/// struct tt__PaneLayout operations:
/// - soap_default_tt__PaneLayout(soap*, tt__PaneLayout*) reset members to default
/// - int soap_read_tt__PaneLayout(soap*, tt__PaneLayout*) deserialize from a source
/// - int soap_write_tt__PaneLayout(soap*, tt__PaneLayout*) serialize to a sink
/// - tt__PaneLayout* soap_dup_tt__PaneLayout(soap*, tt__PaneLayout* dst, tt__PaneLayout *src) returns deep copy of tt__PaneLayout src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneLayout(tt__PaneLayout*) deep deletes tt__PaneLayout data members, use only on dst after soap_dup_tt__PaneLayout(NULL, tt__PaneLayout *dst, tt__PaneLayout *src) (use soapcpp2 -Ed)
struct tt__PaneLayout
{
/// <PRE><BLOCKQUOTE>
///   Reference to the configuration of the streaming and coding parameters.
/// </BLOCKQUOTE></PRE>
/// Element "Pane" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Element "Area" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Area                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Layout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A layout describes a set of Video windows that are displayed simultaniously on a display.
/// </BLOCKQUOTE></PRE>
/// struct tt__Layout operations:
/// - soap_default_tt__Layout(soap*, tt__Layout*) reset members to default
/// - int soap_read_tt__Layout(soap*, tt__Layout*) deserialize from a source
/// - int soap_write_tt__Layout(soap*, tt__Layout*) serialize to a sink
/// - tt__Layout* soap_dup_tt__Layout(soap*, tt__Layout* dst, tt__Layout *src) returns deep copy of tt__Layout src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Layout(tt__Layout*) deep deletes tt__Layout data members, use only on dst after soap_dup_tt__Layout(NULL, tt__Layout *dst, tt__Layout *src) (use soapcpp2 -Ed)
struct tt__Layout
{
/// <PRE><BLOCKQUOTE>
///   List of panes assembling the display layout.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneLayout* is 1..unbounded.
   $int                                  __sizePaneLayout               1;
/// Array struct tt__PaneLayout* of size 1..unbounded.
    struct tt__PaneLayout*               PaneLayout                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutExtension.
    struct tt__LayoutExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
///
/// struct tt__LayoutExtension operations:
/// - soap_default_tt__LayoutExtension(soap*, tt__LayoutExtension*) reset members to default
/// - int soap_read_tt__LayoutExtension(soap*, tt__LayoutExtension*) deserialize from a source
/// - int soap_write_tt__LayoutExtension(soap*, tt__LayoutExtension*) serialize to a sink
/// - tt__LayoutExtension* soap_dup_tt__LayoutExtension(soap*, tt__LayoutExtension* dst, tt__LayoutExtension *src) returns deep copy of tt__LayoutExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LayoutExtension(tt__LayoutExtension*) deep deletes tt__LayoutExtension data members, use only on dst after soap_dup_tt__LayoutExtension(NULL, tt__LayoutExtension *dst, tt__LayoutExtension *src) (use soapcpp2 -Ed)
struct tt__LayoutExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   This type contains the Audio and Video coding capabilities of a display service.
/// </BLOCKQUOTE></PRE>
/// struct tt__CodingCapabilities operations:
/// - soap_default_tt__CodingCapabilities(soap*, tt__CodingCapabilities*) reset members to default
/// - int soap_read_tt__CodingCapabilities(soap*, tt__CodingCapabilities*) deserialize from a source
/// - int soap_write_tt__CodingCapabilities(soap*, tt__CodingCapabilities*) serialize to a sink
/// - tt__CodingCapabilities* soap_dup_tt__CodingCapabilities(soap*, tt__CodingCapabilities* dst, tt__CodingCapabilities *src) returns deep copy of tt__CodingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CodingCapabilities(tt__CodingCapabilities*) deep deletes tt__CodingCapabilities data members, use only on dst after soap_dup_tt__CodingCapabilities(NULL, tt__CodingCapabilities *dst, tt__CodingCapabilities *src) (use soapcpp2 -Ed)
struct tt__CodingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   If the device supports audio encoding this section describes the supported codecs and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    struct tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device supports audio decoding this section describes the supported codecs and their settings.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    struct tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This section describes the supported video codesc and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "VideoDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    struct tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The options supported for a display layout.
/// </BLOCKQUOTE></PRE>
/// struct tt__LayoutOptions operations:
/// - soap_default_tt__LayoutOptions(soap*, tt__LayoutOptions*) reset members to default
/// - int soap_read_tt__LayoutOptions(soap*, tt__LayoutOptions*) deserialize from a source
/// - int soap_write_tt__LayoutOptions(soap*, tt__LayoutOptions*) serialize to a sink
/// - tt__LayoutOptions* soap_dup_tt__LayoutOptions(soap*, tt__LayoutOptions* dst, tt__LayoutOptions *src) returns deep copy of tt__LayoutOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LayoutOptions(tt__LayoutOptions*) deep deletes tt__LayoutOptions data members, use only on dst after soap_dup_tt__LayoutOptions(NULL, tt__LayoutOptions *dst, tt__LayoutOptions *src) (use soapcpp2 -Ed)
struct tt__LayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   Lists the possible Pane Layouts of the Video Output
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneLayoutOptions* is 1..unbounded.
   $int                                  __sizePaneLayoutOptions        1;
/// Array struct tt__PaneLayoutOptions* of size 1..unbounded.
    struct tt__PaneLayoutOptions*        PaneLayoutOptions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    struct tt__LayoutOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
///
/// struct tt__LayoutOptionsExtension operations:
/// - soap_default_tt__LayoutOptionsExtension(soap*, tt__LayoutOptionsExtension*) reset members to default
/// - int soap_read_tt__LayoutOptionsExtension(soap*, tt__LayoutOptionsExtension*) deserialize from a source
/// - int soap_write_tt__LayoutOptionsExtension(soap*, tt__LayoutOptionsExtension*) serialize to a sink
/// - tt__LayoutOptionsExtension* soap_dup_tt__LayoutOptionsExtension(soap*, tt__LayoutOptionsExtension* dst, tt__LayoutOptionsExtension *src) returns deep copy of tt__LayoutOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LayoutOptionsExtension(tt__LayoutOptionsExtension*) deep deletes tt__LayoutOptionsExtension data members, use only on dst after soap_dup_tt__LayoutOptionsExtension(NULL, tt__LayoutOptionsExtension *dst, tt__LayoutOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__LayoutOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a pane layout describing a complete display layout.
/// </BLOCKQUOTE></PRE>
/// struct tt__PaneLayoutOptions operations:
/// - soap_default_tt__PaneLayoutOptions(soap*, tt__PaneLayoutOptions*) reset members to default
/// - int soap_read_tt__PaneLayoutOptions(soap*, tt__PaneLayoutOptions*) deserialize from a source
/// - int soap_write_tt__PaneLayoutOptions(soap*, tt__PaneLayoutOptions*) serialize to a sink
/// - tt__PaneLayoutOptions* soap_dup_tt__PaneLayoutOptions(soap*, tt__PaneLayoutOptions* dst, tt__PaneLayoutOptions *src) returns deep copy of tt__PaneLayoutOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneLayoutOptions(tt__PaneLayoutOptions*) deep deletes tt__PaneLayoutOptions data members, use only on dst after soap_dup_tt__PaneLayoutOptions(NULL, tt__PaneLayoutOptions *dst, tt__PaneLayoutOptions *src) (use soapcpp2 -Ed)
struct tt__PaneLayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Rectangle* is 1..unbounded.
   $int                                  __sizeArea                     1;
/// Array struct tt__Rectangle* of size 1..unbounded.
    struct tt__Rectangle*                Area                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    struct tt__PaneOptionExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
///
/// struct tt__PaneOptionExtension operations:
/// - soap_default_tt__PaneOptionExtension(soap*, tt__PaneOptionExtension*) reset members to default
/// - int soap_read_tt__PaneOptionExtension(soap*, tt__PaneOptionExtension*) deserialize from a source
/// - int soap_write_tt__PaneOptionExtension(soap*, tt__PaneOptionExtension*) serialize to a sink
/// - tt__PaneOptionExtension* soap_dup_tt__PaneOptionExtension(soap*, tt__PaneOptionExtension* dst, tt__PaneOptionExtension *src) returns deep copy of tt__PaneOptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PaneOptionExtension(tt__PaneOptionExtension*) deep deletes tt__PaneOptionExtension data members, use only on dst after soap_dup_tt__PaneOptionExtension(NULL, tt__PaneOptionExtension *dst, tt__PaneOptionExtension *src) (use soapcpp2 -Ed)
struct tt__PaneOptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Receiver is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a receiver, including its token and configuration.
/// </BLOCKQUOTE></PRE>
/// struct tt__Receiver operations:
/// - soap_default_tt__Receiver(soap*, tt__Receiver*) reset members to default
/// - int soap_read_tt__Receiver(soap*, tt__Receiver*) deserialize from a source
/// - int soap_write_tt__Receiver(soap*, tt__Receiver*) serialize to a sink
/// - tt__Receiver* soap_dup_tt__Receiver(soap*, tt__Receiver* dst, tt__Receiver *src) returns deep copy of tt__Receiver src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Receiver(tt__Receiver*) deep deletes tt__Receiver data members, use only on dst after soap_dup_tt__Receiver(NULL, tt__Receiver *dst, tt__Receiver *src) (use soapcpp2 -Ed)
struct tt__Receiver
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of a receiver.
/// </BLOCKQUOTE></PRE>
/// struct tt__ReceiverConfiguration operations:
/// - soap_default_tt__ReceiverConfiguration(soap*, tt__ReceiverConfiguration*) reset members to default
/// - int soap_read_tt__ReceiverConfiguration(soap*, tt__ReceiverConfiguration*) deserialize from a source
/// - int soap_write_tt__ReceiverConfiguration(soap*, tt__ReceiverConfiguration*) serialize to a sink
/// - tt__ReceiverConfiguration* soap_dup_tt__ReceiverConfiguration(soap*, tt__ReceiverConfiguration* dst, tt__ReceiverConfiguration *src) returns deep copy of tt__ReceiverConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReceiverConfiguration(tt__ReceiverConfiguration*) deep deletes tt__ReceiverConfiguration data members, use only on dst after soap_dup_tt__ReceiverConfiguration(NULL, tt__ReceiverConfiguration *dst, tt__ReceiverConfiguration *src) (use soapcpp2 -Ed)
struct tt__ReceiverConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following connection modes are defined:
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Details of the URI to which the receiver should connect.
/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Stream connection parameters.
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contains information about a receiver's current state.
/// </BLOCKQUOTE></PRE>
/// struct tt__ReceiverStateInformation operations:
/// - soap_default_tt__ReceiverStateInformation(soap*, tt__ReceiverStateInformation*) reset members to default
/// - int soap_read_tt__ReceiverStateInformation(soap*, tt__ReceiverStateInformation*) deserialize from a source
/// - int soap_write_tt__ReceiverStateInformation(soap*, tt__ReceiverStateInformation*) serialize to a sink
/// - tt__ReceiverStateInformation* soap_dup_tt__ReceiverStateInformation(soap*, tt__ReceiverStateInformation* dst, tt__ReceiverStateInformation *src) returns deep copy of tt__ReceiverStateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReceiverStateInformation(tt__ReceiverStateInformation*) deep deletes tt__ReceiverStateInformation data members, use only on dst after soap_dup_tt__ReceiverStateInformation(NULL, tt__ReceiverStateInformation *dst, tt__ReceiverStateInformation *src) (use soapcpp2 -Ed)
struct tt__ReceiverStateInformation
{
/// <PRE><BLOCKQUOTE>
///   The connection state of the receiver may have one of the following states:
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the receiver was created automatically.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreated" of XSD type xs:boolean.
    enum xsd__boolean                    AutoCreated                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
///
/// struct tt__SourceReference operations:
/// - soap_default_tt__SourceReference(soap*, tt__SourceReference*) reset members to default
/// - int soap_read_tt__SourceReference(soap*, tt__SourceReference*) deserialize from a source
/// - int soap_write_tt__SourceReference(soap*, tt__SourceReference*) serialize to a sink
/// - tt__SourceReference* soap_dup_tt__SourceReference(soap*, tt__SourceReference* dst, tt__SourceReference *src) returns deep copy of tt__SourceReference src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SourceReference(tt__SourceReference*) deep deletes tt__SourceReference data members, use only on dst after soap_dup_tt__SourceReference(NULL, tt__SourceReference *dst, tt__SourceReference *src) (use soapcpp2 -Ed)
struct tt__SourceReference
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Type" of XSD type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default attribute value="http://www.onvif.org/ver10/schema/Receiver".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
/// struct tt__DateTimeRange operations:
/// - soap_default_tt__DateTimeRange(soap*, tt__DateTimeRange*) reset members to default
/// - int soap_read_tt__DateTimeRange(soap*, tt__DateTimeRange*) deserialize from a source
/// - int soap_write_tt__DateTimeRange(soap*, tt__DateTimeRange*) serialize to a sink
/// - tt__DateTimeRange* soap_dup_tt__DateTimeRange(soap*, tt__DateTimeRange* dst, tt__DateTimeRange *src) returns deep copy of tt__DateTimeRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DateTimeRange(tt__DateTimeRange*) deep deletes tt__DateTimeRange data members, use only on dst after soap_dup_tt__DateTimeRange(NULL, tt__DateTimeRange *dst, tt__DateTimeRange *src) (use soapcpp2 -Ed)
struct tt__DateTimeRange
{
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
///
/// struct tt__RecordingSummary operations:
/// - soap_default_tt__RecordingSummary(soap*, tt__RecordingSummary*) reset members to default
/// - int soap_read_tt__RecordingSummary(soap*, tt__RecordingSummary*) deserialize from a source
/// - int soap_write_tt__RecordingSummary(soap*, tt__RecordingSummary*) serialize to a sink
/// - tt__RecordingSummary* soap_dup_tt__RecordingSummary(soap*, tt__RecordingSummary* dst, tt__RecordingSummary *src) returns deep copy of tt__RecordingSummary src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingSummary(tt__RecordingSummary*) deep deletes tt__RecordingSummary data members, use only on dst after soap_dup_tt__RecordingSummary(NULL, tt__RecordingSummary *dst, tt__RecordingSummary *src) (use soapcpp2 -Ed)
struct tt__RecordingSummary
{
/// <PRE><BLOCKQUOTE>
///   The earliest point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The most recent point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataUntil" of XSD type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device contains this many recordings.
/// </BLOCKQUOTE></PRE>
/// Element "NumberRecordings" of XSD type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A structure for defining a limited scope when searching in recorded data.
/// </BLOCKQUOTE></PRE>
/// struct tt__SearchScope operations:
/// - soap_default_tt__SearchScope(soap*, tt__SearchScope*) reset members to default
/// - int soap_read_tt__SearchScope(soap*, tt__SearchScope*) deserialize from a source
/// - int soap_write_tt__SearchScope(soap*, tt__SearchScope*) serialize to a sink
/// - tt__SearchScope* soap_dup_tt__SearchScope(soap*, tt__SearchScope* dst, tt__SearchScope *src) returns deep copy of tt__SearchScope src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SearchScope(tt__SearchScope*) deep deletes tt__SearchScope data members, use only on dst after soap_dup_tt__SearchScope(NULL, tt__SearchScope *dst, tt__SearchScope *src) (use soapcpp2 -Ed)
struct tt__SearchScope
{
/// <PRE><BLOCKQUOTE>
///   A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__SourceReference* is 0..unbounded.
   $int                                  __sizeIncludedSources          0;
/// Array struct tt__SourceReference* of size 0..unbounded.
    struct tt__SourceReference*          IncludedSources                0;
/// <PRE><BLOCKQUOTE>
///   A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__RecordingReference* is 0..unbounded.
   $int                                  __sizeIncludedRecordings       0;
/// Array tt__RecordingReference* of size 0..unbounded.
    tt__RecordingReference*              IncludedRecordings             0;
/// <PRE><BLOCKQUOTE>
///   An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingInformationFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  RecordingInformationFilter     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extension point
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    struct tt__SearchScopeExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
///
/// struct tt__SearchScopeExtension operations:
/// - soap_default_tt__SearchScopeExtension(soap*, tt__SearchScopeExtension*) reset members to default
/// - int soap_read_tt__SearchScopeExtension(soap*, tt__SearchScopeExtension*) deserialize from a source
/// - int soap_write_tt__SearchScopeExtension(soap*, tt__SearchScopeExtension*) serialize to a sink
/// - tt__SearchScopeExtension* soap_dup_tt__SearchScopeExtension(soap*, tt__SearchScopeExtension* dst, tt__SearchScopeExtension *src) returns deep copy of tt__SearchScopeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SearchScopeExtension(tt__SearchScopeExtension*) deep deletes tt__SearchScopeExtension data members, use only on dst after soap_dup_tt__SearchScopeExtension(NULL, tt__SearchScopeExtension *dst, tt__SearchScopeExtension *src) (use soapcpp2 -Ed)
struct tt__SearchScopeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
///
/// struct tt__PTZPositionFilter operations:
/// - soap_default_tt__PTZPositionFilter(soap*, tt__PTZPositionFilter*) reset members to default
/// - int soap_read_tt__PTZPositionFilter(soap*, tt__PTZPositionFilter*) deserialize from a source
/// - int soap_write_tt__PTZPositionFilter(soap*, tt__PTZPositionFilter*) serialize to a sink
/// - tt__PTZPositionFilter* soap_dup_tt__PTZPositionFilter(soap*, tt__PTZPositionFilter* dst, tt__PTZPositionFilter *src) returns deep copy of tt__PTZPositionFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPositionFilter(tt__PTZPositionFilter*) deep deletes tt__PTZPositionFilter data members, use only on dst after soap_dup_tt__PTZPositionFilter(NULL, tt__PTZPositionFilter *dst, tt__PTZPositionFilter *src) (use soapcpp2 -Ed)
struct tt__PTZPositionFilter
{
/// <PRE><BLOCKQUOTE>
///   The lower boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MinPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MinPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The upper boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MaxPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MaxPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, search for when entering the specified PTZ volume.
/// </BLOCKQUOTE></PRE>
/// Element "EnterOrExit" of XSD type xs:boolean.
    enum xsd__boolean                    EnterOrExit                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
///
/// struct tt__MetadataFilter operations:
/// - soap_default_tt__MetadataFilter(soap*, tt__MetadataFilter*) reset members to default
/// - int soap_read_tt__MetadataFilter(soap*, tt__MetadataFilter*) deserialize from a source
/// - int soap_write_tt__MetadataFilter(soap*, tt__MetadataFilter*) serialize to a sink
/// - tt__MetadataFilter* soap_dup_tt__MetadataFilter(soap*, tt__MetadataFilter* dst, tt__MetadataFilter *src) returns deep copy of tt__MetadataFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataFilter(tt__MetadataFilter*) deep deletes tt__MetadataFilter data members, use only on dst after soap_dup_tt__MetadataFilter(NULL, tt__MetadataFilter *dst, tt__MetadataFilter *src) (use soapcpp2 -Ed)
struct tt__MetadataFilter
{
/// Element "MetadataStreamFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
///
/// struct tt__FindRecordingResultList operations:
/// - soap_default_tt__FindRecordingResultList(soap*, tt__FindRecordingResultList*) reset members to default
/// - int soap_read_tt__FindRecordingResultList(soap*, tt__FindRecordingResultList*) deserialize from a source
/// - int soap_write_tt__FindRecordingResultList(soap*, tt__FindRecordingResultList*) serialize to a sink
/// - tt__FindRecordingResultList* soap_dup_tt__FindRecordingResultList(soap*, tt__FindRecordingResultList* dst, tt__FindRecordingResultList *src) returns deep copy of tt__FindRecordingResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindRecordingResultList(tt__FindRecordingResultList*) deep deletes tt__FindRecordingResultList data members, use only on dst after soap_dup_tt__FindRecordingResultList(NULL, tt__FindRecordingResultList *dst, tt__FindRecordingResultList *src) (use soapcpp2 -Ed)
struct tt__FindRecordingResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A RecordingInformation structure for each found recording matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingInformation* is 0..unbounded.
   $int                                  __sizeRecordingInformation     0;
/// Array struct tt__RecordingInformation* of size 0..unbounded.
    struct tt__RecordingInformation*     RecordingInformation           0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
///
/// struct tt__FindEventResultList operations:
/// - soap_default_tt__FindEventResultList(soap*, tt__FindEventResultList*) reset members to default
/// - int soap_read_tt__FindEventResultList(soap*, tt__FindEventResultList*) deserialize from a source
/// - int soap_write_tt__FindEventResultList(soap*, tt__FindEventResultList*) serialize to a sink
/// - tt__FindEventResultList* soap_dup_tt__FindEventResultList(soap*, tt__FindEventResultList* dst, tt__FindEventResultList *src) returns deep copy of tt__FindEventResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindEventResultList(tt__FindEventResultList*) deep deletes tt__FindEventResultList data members, use only on dst after soap_dup_tt__FindEventResultList(NULL, tt__FindEventResultList *dst, tt__FindEventResultList *src) (use soapcpp2 -Ed)
struct tt__FindEventResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindEventResult structure for each found event matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindEventResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindEventResult* of size 0..unbounded.
    struct tt__FindEventResult*          Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
///
/// struct tt__FindEventResult operations:
/// - soap_default_tt__FindEventResult(soap*, tt__FindEventResult*) reset members to default
/// - int soap_read_tt__FindEventResult(soap*, tt__FindEventResult*) deserialize from a source
/// - int soap_write_tt__FindEventResult(soap*, tt__FindEventResult*) serialize to a sink
/// - tt__FindEventResult* soap_dup_tt__FindEventResult(soap*, tt__FindEventResult* dst, tt__FindEventResult *src) returns deep copy of tt__FindEventResult src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindEventResult(tt__FindEventResult*) deep deletes tt__FindEventResult data members, use only on dst after soap_dup_tt__FindEventResult(NULL, tt__FindEventResult *dst, tt__FindEventResult *src) (use soapcpp2 -Ed)
struct tt__FindEventResult
{
/// <PRE><BLOCKQUOTE>
///   The recording where this event was found. Empty string if no recording is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the track where this event was found. Empty string if no track is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the event occured.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The description of the event.
/// </BLOCKQUOTE></PRE>
/// Element "Event" of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    struct wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// </BLOCKQUOTE></PRE>
/// Element "StartStateEvent" of XSD type xs:boolean.
    enum xsd__boolean                    StartStateEvent                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
///
/// struct tt__FindPTZPositionResultList operations:
/// - soap_default_tt__FindPTZPositionResultList(soap*, tt__FindPTZPositionResultList*) reset members to default
/// - int soap_read_tt__FindPTZPositionResultList(soap*, tt__FindPTZPositionResultList*) deserialize from a source
/// - int soap_write_tt__FindPTZPositionResultList(soap*, tt__FindPTZPositionResultList*) serialize to a sink
/// - tt__FindPTZPositionResultList* soap_dup_tt__FindPTZPositionResultList(soap*, tt__FindPTZPositionResultList* dst, tt__FindPTZPositionResultList *src) returns deep copy of tt__FindPTZPositionResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindPTZPositionResultList(tt__FindPTZPositionResultList*) deep deletes tt__FindPTZPositionResultList data members, use only on dst after soap_dup_tt__FindPTZPositionResultList(NULL, tt__FindPTZPositionResultList *dst, tt__FindPTZPositionResultList *src) (use soapcpp2 -Ed)
struct tt__FindPTZPositionResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindPTZPositionResult structure for each found PTZ position matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindPTZPositionResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindPTZPositionResult* of size 0..unbounded.
    struct tt__FindPTZPositionResult*    Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
///
/// struct tt__FindPTZPositionResult operations:
/// - soap_default_tt__FindPTZPositionResult(soap*, tt__FindPTZPositionResult*) reset members to default
/// - int soap_read_tt__FindPTZPositionResult(soap*, tt__FindPTZPositionResult*) deserialize from a source
/// - int soap_write_tt__FindPTZPositionResult(soap*, tt__FindPTZPositionResult*) serialize to a sink
/// - tt__FindPTZPositionResult* soap_dup_tt__FindPTZPositionResult(soap*, tt__FindPTZPositionResult* dst, tt__FindPTZPositionResult *src) returns deep copy of tt__FindPTZPositionResult src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindPTZPositionResult(tt__FindPTZPositionResult*) deep deletes tt__FindPTZPositionResult data members, use only on dst after soap_dup_tt__FindPTZPositionResult(NULL, tt__FindPTZPositionResult *dst, tt__FindPTZPositionResult *src) (use soapcpp2 -Ed)
struct tt__FindPTZPositionResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the PTZ position was valid.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
///
/// struct tt__FindMetadataResultList operations:
/// - soap_default_tt__FindMetadataResultList(soap*, tt__FindMetadataResultList*) reset members to default
/// - int soap_read_tt__FindMetadataResultList(soap*, tt__FindMetadataResultList*) deserialize from a source
/// - int soap_write_tt__FindMetadataResultList(soap*, tt__FindMetadataResultList*) serialize to a sink
/// - tt__FindMetadataResultList* soap_dup_tt__FindMetadataResultList(soap*, tt__FindMetadataResultList* dst, tt__FindMetadataResultList *src) returns deep copy of tt__FindMetadataResultList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindMetadataResultList(tt__FindMetadataResultList*) deep deletes tt__FindMetadataResultList data members, use only on dst after soap_dup_tt__FindMetadataResultList(NULL, tt__FindMetadataResultList *dst, tt__FindMetadataResultList *src) (use soapcpp2 -Ed)
struct tt__FindMetadataResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindMetadataResult structure for each found set of Metadata matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindMetadataResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindMetadataResult* of size 0..unbounded.
    struct tt__FindMetadataResult*       Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
///
/// struct tt__FindMetadataResult operations:
/// - soap_default_tt__FindMetadataResult(soap*, tt__FindMetadataResult*) reset members to default
/// - int soap_read_tt__FindMetadataResult(soap*, tt__FindMetadataResult*) deserialize from a source
/// - int soap_write_tt__FindMetadataResult(soap*, tt__FindMetadataResult*) serialize to a sink
/// - tt__FindMetadataResult* soap_dup_tt__FindMetadataResult(soap*, tt__FindMetadataResult* dst, tt__FindMetadataResult *src) returns deep copy of tt__FindMetadataResult src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FindMetadataResult(tt__FindMetadataResult*) deep deletes tt__FindMetadataResult data members, use only on dst after soap_dup_tt__FindMetadataResult(NULL, tt__FindMetadataResult *dst, tt__FindMetadataResult *src) (use soapcpp2 -Ed)
struct tt__FindMetadataResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the metadata.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the matching metadata.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point in time when the matching metadata occurs in the metadata track.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
///
/// struct tt__RecordingInformation operations:
/// - soap_default_tt__RecordingInformation(soap*, tt__RecordingInformation*) reset members to default
/// - int soap_read_tt__RecordingInformation(soap*, tt__RecordingInformation*) deserialize from a source
/// - int soap_write_tt__RecordingInformation(soap*, tt__RecordingInformation*) serialize to a sink
/// - tt__RecordingInformation* soap_dup_tt__RecordingInformation(soap*, tt__RecordingInformation* dst, tt__RecordingInformation *src) returns deep copy of tt__RecordingInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingInformation(tt__RecordingInformation*) deep deletes tt__RecordingInformation data members, use only on dst after soap_dup_tt__RecordingInformation(NULL, tt__RecordingInformation *dst, tt__RecordingInformation *src) (use soapcpp2 -Ed)
struct tt__RecordingInformation
{
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
///   recording is intended to record related material, there is just one source. It is indicates the physical location or the
///   major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// Element "EarliestRecording" of XSD type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element "LatestRecording" of XSD type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__TrackInformation* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__TrackInformation* of size 0..unbounded.
    struct tt__TrackInformation*         Track                          0;
/// Element "RecordingStatus" of XSD type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
/// </BLOCKQUOTE></PRE>
/// struct tt__RecordingSourceInformation operations:
/// - soap_default_tt__RecordingSourceInformation(soap*, tt__RecordingSourceInformation*) reset members to default
/// - int soap_read_tt__RecordingSourceInformation(soap*, tt__RecordingSourceInformation*) deserialize from a source
/// - int soap_write_tt__RecordingSourceInformation(soap*, tt__RecordingSourceInformation*) serialize to a sink
/// - tt__RecordingSourceInformation* soap_dup_tt__RecordingSourceInformation(soap*, tt__RecordingSourceInformation* dst, tt__RecordingSourceInformation *src) returns deep copy of tt__RecordingSourceInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingSourceInformation(tt__RecordingSourceInformation*) deep deletes tt__RecordingSourceInformation data members, use only on dst after soap_dup_tt__RecordingSourceInformation(NULL, tt__RecordingSourceInformation *dst, tt__RecordingSourceInformation *src) (use soapcpp2 -Ed)
struct tt__RecordingSourceInformation
{
/// <PRE><BLOCKQUOTE>
///   Identifier for the source chosen by the client that creates the structure.
///   This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "SourceId" of XSD type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the physical location of the source, e.g. the coordinates on a map.
/// </BLOCKQUOTE></PRE>
/// Element "Location" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
///
/// struct tt__TrackInformation operations:
/// - soap_default_tt__TrackInformation(soap*, tt__TrackInformation*) reset members to default
/// - int soap_read_tt__TrackInformation(soap*, tt__TrackInformation*) deserialize from a source
/// - int soap_write_tt__TrackInformation(soap*, tt__TrackInformation*) serialize to a sink
/// - tt__TrackInformation* soap_dup_tt__TrackInformation(soap*, tt__TrackInformation* dst, tt__TrackInformation *src) returns deep copy of tt__TrackInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackInformation(tt__TrackInformation*) deep deletes tt__TrackInformation data members, use only on dst after soap_dup_tt__TrackInformation(NULL, tt__TrackInformation *dst, tt__TrackInformation *src) (use soapcpp2 -Ed)
struct tt__TrackInformation
{
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of the track: "Video", "Audio" or "Metadata".
///   The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the contents of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date and time of the oldest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The stop date and time of the newest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataTo" of XSD type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media attributes valid for a recording at a point in time or for a time interval.
/// </BLOCKQUOTE></PRE>
/// struct tt__MediaAttributes operations:
/// - soap_default_tt__MediaAttributes(soap*, tt__MediaAttributes*) reset members to default
/// - int soap_read_tt__MediaAttributes(soap*, tt__MediaAttributes*) deserialize from a source
/// - int soap_write_tt__MediaAttributes(soap*, tt__MediaAttributes*) serialize to a sink
/// - tt__MediaAttributes* soap_dup_tt__MediaAttributes(soap*, tt__MediaAttributes* dst, tt__MediaAttributes *src) returns deep copy of tt__MediaAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaAttributes(tt__MediaAttributes*) deep deletes tt__MediaAttributes data members, use only on dst after soap_dup_tt__MediaAttributes(NULL, tt__MediaAttributes *dst, tt__MediaAttributes *src) (use soapcpp2 -Ed)
struct tt__MediaAttributes
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording that has these attributes.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A set of attributes for each track.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__TrackAttributes* is 0..unbounded.
   $int                                  __sizeTrackAttributes          0;
/// Array struct tt__TrackAttributes* of size 0..unbounded.
    struct tt__TrackAttributes*          TrackAttributes                0;
/// <PRE><BLOCKQUOTE>
///   The attributes are valid from this point in time in the recording.
/// </BLOCKQUOTE></PRE>
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// </BLOCKQUOTE></PRE>
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
///
/// struct tt__TrackAttributes operations:
/// - soap_default_tt__TrackAttributes(soap*, tt__TrackAttributes*) reset members to default
/// - int soap_read_tt__TrackAttributes(soap*, tt__TrackAttributes*) deserialize from a source
/// - int soap_write_tt__TrackAttributes(soap*, tt__TrackAttributes*) serialize to a sink
/// - tt__TrackAttributes* soap_dup_tt__TrackAttributes(soap*, tt__TrackAttributes* dst, tt__TrackAttributes *src) returns deep copy of tt__TrackAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackAttributes(tt__TrackAttributes*) deep deletes tt__TrackAttributes data members, use only on dst after soap_dup_tt__TrackAttributes(NULL, tt__TrackAttributes *dst, tt__TrackAttributes *src) (use soapcpp2 -Ed)
struct tt__TrackAttributes
{
/// <PRE><BLOCKQUOTE>
///   The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Element "TrackInformation" of XSD type "http://www.onvif.org/ver10/schema":TrackInformation.
    struct tt__TrackInformation*         TrackInformation               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAttributes" of XSD type "http://www.onvif.org/ver10/schema":VideoAttributes.
    struct tt__VideoAttributes*          VideoAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// </BLOCKQUOTE></PRE>
/// Element "AudioAttributes" of XSD type "http://www.onvif.org/ver10/schema":AudioAttributes.
    struct tt__AudioAttributes*          AudioAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataAttributes" of XSD type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    struct tt__MetadataAttributes*       MetadataAttributes             0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    struct tt__TrackAttributesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
///
/// struct tt__TrackAttributesExtension operations:
/// - soap_default_tt__TrackAttributesExtension(soap*, tt__TrackAttributesExtension*) reset members to default
/// - int soap_read_tt__TrackAttributesExtension(soap*, tt__TrackAttributesExtension*) deserialize from a source
/// - int soap_write_tt__TrackAttributesExtension(soap*, tt__TrackAttributesExtension*) serialize to a sink
/// - tt__TrackAttributesExtension* soap_dup_tt__TrackAttributesExtension(soap*, tt__TrackAttributesExtension* dst, tt__TrackAttributesExtension *src) returns deep copy of tt__TrackAttributesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackAttributesExtension(tt__TrackAttributesExtension*) deep deletes tt__TrackAttributesExtension data members, use only on dst after soap_dup_tt__TrackAttributesExtension(NULL, tt__TrackAttributesExtension *dst, tt__TrackAttributesExtension *src) (use soapcpp2 -Ed)
struct tt__TrackAttributesExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
///
/// struct tt__VideoAttributes operations:
/// - soap_default_tt__VideoAttributes(soap*, tt__VideoAttributes*) reset members to default
/// - int soap_read_tt__VideoAttributes(soap*, tt__VideoAttributes*) deserialize from a source
/// - int soap_write_tt__VideoAttributes(soap*, tt__VideoAttributes*) serialize to a sink
/// - tt__VideoAttributes* soap_dup_tt__VideoAttributes(soap*, tt__VideoAttributes* dst, tt__VideoAttributes *src) returns deep copy of tt__VideoAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoAttributes(tt__VideoAttributes*) deep deletes tt__VideoAttributes data members, use only on dst after soap_dup_tt__VideoAttributes(NULL, tt__VideoAttributes *dst, tt__VideoAttributes *src) (use soapcpp2 -Ed)
struct tt__VideoAttributes
{
/// <PRE><BLOCKQUOTE>
///   Average bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The width of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The height of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Average framerate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
///
/// struct tt__AudioAttributes operations:
/// - soap_default_tt__AudioAttributes(soap*, tt__AudioAttributes*) reset members to default
/// - int soap_read_tt__AudioAttributes(soap*, tt__AudioAttributes*) deserialize from a source
/// - int soap_write_tt__AudioAttributes(soap*, tt__AudioAttributes*) serialize to a sink
/// - tt__AudioAttributes* soap_dup_tt__AudioAttributes(soap*, tt__AudioAttributes* dst, tt__AudioAttributes *src) returns deep copy of tt__AudioAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioAttributes(tt__AudioAttributes*) deep deletes tt__AudioAttributes data members, use only on dst after soap_dup_tt__AudioAttributes(NULL, tt__AudioAttributes *dst, tt__AudioAttributes *src) (use soapcpp2 -Ed)
struct tt__AudioAttributes
{
/// <PRE><BLOCKQUOTE>
///   The bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "Samplerate" of XSD type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
///
/// struct tt__MetadataAttributes operations:
/// - soap_default_tt__MetadataAttributes(soap*, tt__MetadataAttributes*) reset members to default
/// - int soap_read_tt__MetadataAttributes(soap*, tt__MetadataAttributes*) deserialize from a source
/// - int soap_write_tt__MetadataAttributes(soap*, tt__MetadataAttributes*) serialize to a sink
/// - tt__MetadataAttributes* soap_dup_tt__MetadataAttributes(soap*, tt__MetadataAttributes* dst, tt__MetadataAttributes *src) returns deep copy of tt__MetadataAttributes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataAttributes(tt__MetadataAttributes*) deep deletes tt__MetadataAttributes data members, use only on dst after soap_dup_tt__MetadataAttributes(NULL, tt__MetadataAttributes *dst, tt__MetadataAttributes *src) (use soapcpp2 -Ed)
struct tt__MetadataAttributes
{
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainPTZ" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainPTZ                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be analytics data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainAnalytics" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainAnalytics            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be notifications in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainNotifications" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainNotifications        1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type.
/// </BLOCKQUOTE></PRE>
/// Attribute "PtzSpaces" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   PtzSpaces                      0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
///
/// struct tt__RecordingConfiguration operations:
/// - soap_default_tt__RecordingConfiguration(soap*, tt__RecordingConfiguration*) reset members to default
/// - int soap_read_tt__RecordingConfiguration(soap*, tt__RecordingConfiguration*) deserialize from a source
/// - int soap_write_tt__RecordingConfiguration(soap*, tt__RecordingConfiguration*) serialize to a sink
/// - tt__RecordingConfiguration* soap_dup_tt__RecordingConfiguration(soap*, tt__RecordingConfiguration* dst, tt__RecordingConfiguration *src) returns deep copy of tt__RecordingConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingConfiguration(tt__RecordingConfiguration*) deep deletes tt__RecordingConfiguration data members, use only on dst after soap_dup_tt__RecordingConfiguration(NULL, tt__RecordingConfiguration *dst, tt__RecordingConfiguration *src) (use soapcpp2 -Ed)
struct tt__RecordingConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Sspecifies the maximum time that data in any track within the
///   recording shall be stored. The device shall delete any data older than the maximum retention
///   time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
///   the device shall not limit the retention time of stored data, except by resource constraints.
///   Whatever the value of MaximumRetentionTime, the device may automatically delete
///   recordings to free up storage space for new recordings.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRetentionTime" of XSD type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
///
/// struct tt__TrackConfiguration operations:
/// - soap_default_tt__TrackConfiguration(soap*, tt__TrackConfiguration*) reset members to default
/// - int soap_read_tt__TrackConfiguration(soap*, tt__TrackConfiguration*) deserialize from a source
/// - int soap_write_tt__TrackConfiguration(soap*, tt__TrackConfiguration*) serialize to a sink
/// - tt__TrackConfiguration* soap_dup_tt__TrackConfiguration(soap*, tt__TrackConfiguration* dst, tt__TrackConfiguration *src) returns deep copy of tt__TrackConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TrackConfiguration(tt__TrackConfiguration*) deep deletes tt__TrackConfiguration data members, use only on dst after soap_dup_tt__TrackConfiguration(NULL, tt__TrackConfiguration *dst, tt__TrackConfiguration *src) (use soapcpp2 -Ed)
struct tt__TrackConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Type of the track. It shall be equal to the strings Video,
///   Audio or Metadata. The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
///
/// struct tt__GetRecordingsResponseItem operations:
/// - soap_default_tt__GetRecordingsResponseItem(soap*, tt__GetRecordingsResponseItem*) reset members to default
/// - int soap_read_tt__GetRecordingsResponseItem(soap*, tt__GetRecordingsResponseItem*) deserialize from a source
/// - int soap_write_tt__GetRecordingsResponseItem(soap*, tt__GetRecordingsResponseItem*) serialize to a sink
/// - tt__GetRecordingsResponseItem* soap_dup_tt__GetRecordingsResponseItem(soap*, tt__GetRecordingsResponseItem* dst, tt__GetRecordingsResponseItem *src) returns deep copy of tt__GetRecordingsResponseItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetRecordingsResponseItem(tt__GetRecordingsResponseItem*) deep deletes tt__GetRecordingsResponseItem data members, use only on dst after soap_dup_tt__GetRecordingsResponseItem(NULL, tt__GetRecordingsResponseItem *dst, tt__GetRecordingsResponseItem *src) (use soapcpp2 -Ed)
struct tt__GetRecordingsResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    struct tt__RecordingConfiguration*   Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of tracks.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    struct tt__GetTracksResponseList*    Tracks                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
///
/// struct tt__GetTracksResponseList operations:
/// - soap_default_tt__GetTracksResponseList(soap*, tt__GetTracksResponseList*) reset members to default
/// - int soap_read_tt__GetTracksResponseList(soap*, tt__GetTracksResponseList*) deserialize from a source
/// - int soap_write_tt__GetTracksResponseList(soap*, tt__GetTracksResponseList*) serialize to a sink
/// - tt__GetTracksResponseList* soap_dup_tt__GetTracksResponseList(soap*, tt__GetTracksResponseList* dst, tt__GetTracksResponseList *src) returns deep copy of tt__GetTracksResponseList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetTracksResponseList(tt__GetTracksResponseList*) deep deletes tt__GetTracksResponseList data members, use only on dst after soap_dup_tt__GetTracksResponseList(NULL, tt__GetTracksResponseList *dst, tt__GetTracksResponseList *src) (use soapcpp2 -Ed)
struct tt__GetTracksResponseList
{
/// <PRE><BLOCKQUOTE>
///   Configuration of a track.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__GetTracksResponseItem* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__GetTracksResponseItem* of size 0..unbounded.
    struct tt__GetTracksResponseItem*    Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
///
/// struct tt__GetTracksResponseItem operations:
/// - soap_default_tt__GetTracksResponseItem(soap*, tt__GetTracksResponseItem*) reset members to default
/// - int soap_read_tt__GetTracksResponseItem(soap*, tt__GetTracksResponseItem*) deserialize from a source
/// - int soap_write_tt__GetTracksResponseItem(soap*, tt__GetTracksResponseItem*) serialize to a sink
/// - tt__GetTracksResponseItem* soap_dup_tt__GetTracksResponseItem(soap*, tt__GetTracksResponseItem* dst, tt__GetTracksResponseItem *src) returns deep copy of tt__GetTracksResponseItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetTracksResponseItem(tt__GetTracksResponseItem*) deep deletes tt__GetTracksResponseItem data members, use only on dst after soap_dup_tt__GetTracksResponseItem(NULL, tt__GetTracksResponseItem *dst, tt__GetTracksResponseItem *src) (use soapcpp2 -Ed)
struct tt__GetTracksResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    struct tt__TrackConfiguration*       Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
///
/// struct tt__RecordingJobConfiguration operations:
/// - soap_default_tt__RecordingJobConfiguration(soap*, tt__RecordingJobConfiguration*) reset members to default
/// - int soap_read_tt__RecordingJobConfiguration(soap*, tt__RecordingJobConfiguration*) deserialize from a source
/// - int soap_write_tt__RecordingJobConfiguration(soap*, tt__RecordingJobConfiguration*) serialize to a sink
/// - tt__RecordingJobConfiguration* soap_dup_tt__RecordingJobConfiguration(soap*, tt__RecordingJobConfiguration* dst, tt__RecordingJobConfiguration *src) returns deep copy of tt__RecordingJobConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobConfiguration(tt__RecordingJobConfiguration*) deep deletes tt__RecordingJobConfiguration data members, use only on dst after soap_dup_tt__RecordingJobConfiguration(NULL, tt__RecordingJobConfiguration *dst, tt__RecordingJobConfiguration *src) (use soapcpp2 -Ed)
struct tt__RecordingJobConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which this job shall store the received data.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
///   to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/>
///   The only valid values for Mode shall be Idle and Active.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This shall be a non-negative number. If there are multiple recording jobs that store data to
///   the same track, the device will only store the data for the recording job with the highest
///   priority. The priority is specified per recording job, but the device shall determine the priority
///   of each track individually. If there are two recording jobs with the same priority, the device
///   shall record the data corresponding to the recording job that was activated the latest.
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type xs:int.
    int                                  Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Source of the recording.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobSource* is 0..unbounded.
   $int                                  __sizeSource                   0;
/// Array struct tt__RecordingJobSource* of size 0..unbounded.
    struct tt__RecordingJobSource*       Source                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    struct tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
///
/// struct tt__RecordingJobConfigurationExtension operations:
/// - soap_default_tt__RecordingJobConfigurationExtension(soap*, tt__RecordingJobConfigurationExtension*) reset members to default
/// - int soap_read_tt__RecordingJobConfigurationExtension(soap*, tt__RecordingJobConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__RecordingJobConfigurationExtension(soap*, tt__RecordingJobConfigurationExtension*) serialize to a sink
/// - tt__RecordingJobConfigurationExtension* soap_dup_tt__RecordingJobConfigurationExtension(soap*, tt__RecordingJobConfigurationExtension* dst, tt__RecordingJobConfigurationExtension *src) returns deep copy of tt__RecordingJobConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobConfigurationExtension(tt__RecordingJobConfigurationExtension*) deep deletes tt__RecordingJobConfigurationExtension data members, use only on dst after soap_dup_tt__RecordingJobConfigurationExtension(NULL, tt__RecordingJobConfigurationExtension *dst, tt__RecordingJobConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__RecordingJobConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
///
/// struct tt__RecordingJobSource operations:
/// - soap_default_tt__RecordingJobSource(soap*, tt__RecordingJobSource*) reset members to default
/// - int soap_read_tt__RecordingJobSource(soap*, tt__RecordingJobSource*) deserialize from a source
/// - int soap_write_tt__RecordingJobSource(soap*, tt__RecordingJobSource*) serialize to a sink
/// - tt__RecordingJobSource* soap_dup_tt__RecordingJobSource(soap*, tt__RecordingJobSource* dst, tt__RecordingJobSource *src) returns deep copy of tt__RecordingJobSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobSource(tt__RecordingJobSource*) deep deletes tt__RecordingJobSource data members, use only on dst after soap_dup_tt__RecordingJobSource(NULL, tt__RecordingJobSource *dst, tt__RecordingJobSource *src) (use soapcpp2 -Ed)
struct tt__RecordingJobSource
{
/// <PRE><BLOCKQUOTE>
///   This field shall be a reference to the source of the data. The type of the source
///   is determined by the attribute Type in the SourceToken structure. If Type is
///   http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
///   the device shall receive the data over the network. If Type is
///   http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
///   device to obtain data from a profile that exists on the local device.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If this field is TRUE, and if the SourceToken is omitted, the device
///   shall create a receiver object (through the receiver service) and assign the
///   ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
///   from the device, the AutoCreateReceiver field shall never be present.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreateReceiver" of XSD type xs:boolean.
    enum xsd__boolean*                   AutoCreateReceiver             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of tracks associated with the recording.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobTrack* is 0..unbounded.
   $int                                  __sizeTracks                   0;
/// Array struct tt__RecordingJobTrack* of size 0..unbounded.
    struct tt__RecordingJobTrack*        Tracks                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    struct tt__RecordingJobSourceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
///
/// struct tt__RecordingJobSourceExtension operations:
/// - soap_default_tt__RecordingJobSourceExtension(soap*, tt__RecordingJobSourceExtension*) reset members to default
/// - int soap_read_tt__RecordingJobSourceExtension(soap*, tt__RecordingJobSourceExtension*) deserialize from a source
/// - int soap_write_tt__RecordingJobSourceExtension(soap*, tt__RecordingJobSourceExtension*) serialize to a sink
/// - tt__RecordingJobSourceExtension* soap_dup_tt__RecordingJobSourceExtension(soap*, tt__RecordingJobSourceExtension* dst, tt__RecordingJobSourceExtension *src) returns deep copy of tt__RecordingJobSourceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobSourceExtension(tt__RecordingJobSourceExtension*) deep deletes tt__RecordingJobSourceExtension data members, use only on dst after soap_dup_tt__RecordingJobSourceExtension(NULL, tt__RecordingJobSourceExtension *dst, tt__RecordingJobSourceExtension *src) (use soapcpp2 -Ed)
struct tt__RecordingJobSourceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
///
/// struct tt__RecordingJobTrack operations:
/// - soap_default_tt__RecordingJobTrack(soap*, tt__RecordingJobTrack*) reset members to default
/// - int soap_read_tt__RecordingJobTrack(soap*, tt__RecordingJobTrack*) deserialize from a source
/// - int soap_write_tt__RecordingJobTrack(soap*, tt__RecordingJobTrack*) serialize to a sink
/// - tt__RecordingJobTrack* soap_dup_tt__RecordingJobTrack(soap*, tt__RecordingJobTrack* dst, tt__RecordingJobTrack *src) returns deep copy of tt__RecordingJobTrack src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobTrack(tt__RecordingJobTrack*) deep deletes tt__RecordingJobTrack data members, use only on dst after soap_dup_tt__RecordingJobTrack(NULL, tt__RecordingJobTrack *dst, tt__RecordingJobTrack *src) (use soapcpp2 -Ed)
struct tt__RecordingJobTrack
{
/// <PRE><BLOCKQUOTE>
///   If the received RTSP stream contains multiple tracks of the same type, the
///   SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The destination is the tracktoken of the track to which the device shall store the
///   received data.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
///
/// struct tt__RecordingJobStateInformation operations:
/// - soap_default_tt__RecordingJobStateInformation(soap*, tt__RecordingJobStateInformation*) reset members to default
/// - int soap_read_tt__RecordingJobStateInformation(soap*, tt__RecordingJobStateInformation*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateInformation(soap*, tt__RecordingJobStateInformation*) serialize to a sink
/// - tt__RecordingJobStateInformation* soap_dup_tt__RecordingJobStateInformation(soap*, tt__RecordingJobStateInformation* dst, tt__RecordingJobStateInformation *src) returns deep copy of tt__RecordingJobStateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateInformation(tt__RecordingJobStateInformation*) deep deletes tt__RecordingJobStateInformation data members, use only on dst after soap_dup_tt__RecordingJobStateInformation(NULL, tt__RecordingJobStateInformation *dst, tt__RecordingJobStateInformation *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Identification of the recording that the recording job records to.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over the whole RecordingJobInformation structure.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobStateSource* is 0..unbounded.
   $int                                  __sizeSources                  0;
/// Array struct tt__RecordingJobStateSource* of size 0..unbounded.
    struct tt__RecordingJobStateSource*  Sources                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    struct tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
///
/// struct tt__RecordingJobStateInformationExtension operations:
/// - soap_default_tt__RecordingJobStateInformationExtension(soap*, tt__RecordingJobStateInformationExtension*) reset members to default
/// - int soap_read_tt__RecordingJobStateInformationExtension(soap*, tt__RecordingJobStateInformationExtension*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateInformationExtension(soap*, tt__RecordingJobStateInformationExtension*) serialize to a sink
/// - tt__RecordingJobStateInformationExtension* soap_dup_tt__RecordingJobStateInformationExtension(soap*, tt__RecordingJobStateInformationExtension* dst, tt__RecordingJobStateInformationExtension *src) returns deep copy of tt__RecordingJobStateInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateInformationExtension(tt__RecordingJobStateInformationExtension*) deep deletes tt__RecordingJobStateInformationExtension data members, use only on dst after soap_dup_tt__RecordingJobStateInformationExtension(NULL, tt__RecordingJobStateInformationExtension *dst, tt__RecordingJobStateInformationExtension *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
///
/// struct tt__RecordingJobStateSource operations:
/// - soap_default_tt__RecordingJobStateSource(soap*, tt__RecordingJobStateSource*) reset members to default
/// - int soap_read_tt__RecordingJobStateSource(soap*, tt__RecordingJobStateSource*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateSource(soap*, tt__RecordingJobStateSource*) serialize to a sink
/// - tt__RecordingJobStateSource* soap_dup_tt__RecordingJobStateSource(soap*, tt__RecordingJobStateSource* dst, tt__RecordingJobStateSource *src) returns deep copy of tt__RecordingJobStateSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateSource(tt__RecordingJobStateSource*) deep deletes tt__RecordingJobStateSource data members, use only on dst after soap_dup_tt__RecordingJobStateSource(NULL, tt__RecordingJobStateSource *dst, tt__RecordingJobStateSource *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateSource
{
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over all substructures of RecordingJobStateSource.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of track items.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    struct tt__RecordingJobStateTracks*  Tracks                         1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
///
/// struct tt__RecordingJobStateTracks operations:
/// - soap_default_tt__RecordingJobStateTracks(soap*, tt__RecordingJobStateTracks*) reset members to default
/// - int soap_read_tt__RecordingJobStateTracks(soap*, tt__RecordingJobStateTracks*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateTracks(soap*, tt__RecordingJobStateTracks*) serialize to a sink
/// - tt__RecordingJobStateTracks* soap_dup_tt__RecordingJobStateTracks(soap*, tt__RecordingJobStateTracks* dst, tt__RecordingJobStateTracks *src) returns deep copy of tt__RecordingJobStateTracks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateTracks(tt__RecordingJobStateTracks*) deep deletes tt__RecordingJobStateTracks data members, use only on dst after soap_dup_tt__RecordingJobStateTracks(NULL, tt__RecordingJobStateTracks *dst, tt__RecordingJobStateTracks *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateTracks
{
/// Size of array of struct tt__RecordingJobStateTrack* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__RecordingJobStateTrack* of size 0..unbounded.
    struct tt__RecordingJobStateTrack*   Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
///
/// struct tt__RecordingJobStateTrack operations:
/// - soap_default_tt__RecordingJobStateTrack(soap*, tt__RecordingJobStateTrack*) reset members to default
/// - int soap_read_tt__RecordingJobStateTrack(soap*, tt__RecordingJobStateTrack*) deserialize from a source
/// - int soap_write_tt__RecordingJobStateTrack(soap*, tt__RecordingJobStateTrack*) serialize to a sink
/// - tt__RecordingJobStateTrack* soap_dup_tt__RecordingJobStateTrack(soap*, tt__RecordingJobStateTrack* dst, tt__RecordingJobStateTrack *src) returns deep copy of tt__RecordingJobStateTrack src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingJobStateTrack(tt__RecordingJobStateTrack*) deep deletes tt__RecordingJobStateTrack data members, use only on dst after soap_dup_tt__RecordingJobStateTrack(NULL, tt__RecordingJobStateTrack *dst, tt__RecordingJobStateTrack *src) (use soapcpp2 -Ed)
struct tt__RecordingJobStateTrack
{
/// <PRE><BLOCKQUOTE>
///   Identifies the track of the data source that provides the data.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the destination track.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optionally holds an implementation defined string value that describes the error.
///   The string should be in the English language.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Provides the job state of the track. The valid
///   values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
///
/// struct tt__GetRecordingJobsResponseItem operations:
/// - soap_default_tt__GetRecordingJobsResponseItem(soap*, tt__GetRecordingJobsResponseItem*) reset members to default
/// - int soap_read_tt__GetRecordingJobsResponseItem(soap*, tt__GetRecordingJobsResponseItem*) deserialize from a source
/// - int soap_write_tt__GetRecordingJobsResponseItem(soap*, tt__GetRecordingJobsResponseItem*) serialize to a sink
/// - tt__GetRecordingJobsResponseItem* soap_dup_tt__GetRecordingJobsResponseItem(soap*, tt__GetRecordingJobsResponseItem* dst, tt__GetRecordingJobsResponseItem *src) returns deep copy of tt__GetRecordingJobsResponseItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GetRecordingJobsResponseItem(tt__GetRecordingJobsResponseItem*) deep deletes tt__GetRecordingJobsResponseItem data members, use only on dst after soap_dup_tt__GetRecordingJobsResponseItem(NULL, tt__GetRecordingJobsResponseItem *dst, tt__GetRecordingJobsResponseItem *src) (use soapcpp2 -Ed)
struct tt__GetRecordingJobsResponseItem
{
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration parameters for the replay service.
/// </BLOCKQUOTE></PRE>
/// struct tt__ReplayConfiguration operations:
/// - soap_default_tt__ReplayConfiguration(soap*, tt__ReplayConfiguration*) reset members to default
/// - int soap_read_tt__ReplayConfiguration(soap*, tt__ReplayConfiguration*) deserialize from a source
/// - int soap_write_tt__ReplayConfiguration(soap*, tt__ReplayConfiguration*) serialize to a sink
/// - tt__ReplayConfiguration* soap_dup_tt__ReplayConfiguration(soap*, tt__ReplayConfiguration* dst, tt__ReplayConfiguration *src) returns deep copy of tt__ReplayConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReplayConfiguration(tt__ReplayConfiguration*) deep deletes tt__ReplayConfiguration data members, use only on dst after soap_dup_tt__ReplayConfiguration(NULL, tt__ReplayConfiguration *dst, tt__ReplayConfiguration *src) (use soapcpp2 -Ed)
struct tt__ReplayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The RTSP session timeout.
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
///
/// struct tt__AnalyticsDeviceEngineConfiguration operations:
/// - soap_default_tt__AnalyticsDeviceEngineConfiguration(soap*, tt__AnalyticsDeviceEngineConfiguration*) reset members to default
/// - int soap_read_tt__AnalyticsDeviceEngineConfiguration(soap*, tt__AnalyticsDeviceEngineConfiguration*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceEngineConfiguration(soap*, tt__AnalyticsDeviceEngineConfiguration*) serialize to a sink
/// - tt__AnalyticsDeviceEngineConfiguration* soap_dup_tt__AnalyticsDeviceEngineConfiguration(soap*, tt__AnalyticsDeviceEngineConfiguration* dst, tt__AnalyticsDeviceEngineConfiguration *src) returns deep copy of tt__AnalyticsDeviceEngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceEngineConfiguration(tt__AnalyticsDeviceEngineConfiguration*) deep deletes tt__AnalyticsDeviceEngineConfiguration data members, use only on dst after soap_dup_tt__AnalyticsDeviceEngineConfiguration(NULL, tt__AnalyticsDeviceEngineConfiguration *dst, tt__AnalyticsDeviceEngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceEngineConfiguration
{
/// Size of array of struct tt__EngineConfiguration* is 1..unbounded.
   $int                                  __sizeEngineConfiguration      1;
/// Array struct tt__EngineConfiguration* of size 1..unbounded.
    struct tt__EngineConfiguration*      EngineConfiguration            1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    struct tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
///
/// struct tt__AnalyticsDeviceEngineConfigurationExtension operations:
/// - soap_default_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) reset members to default
/// - int soap_read_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) serialize to a sink
/// - tt__AnalyticsDeviceEngineConfigurationExtension* soap_dup_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, tt__AnalyticsDeviceEngineConfigurationExtension* dst, tt__AnalyticsDeviceEngineConfigurationExtension *src) returns deep copy of tt__AnalyticsDeviceEngineConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceEngineConfigurationExtension(tt__AnalyticsDeviceEngineConfigurationExtension*) deep deletes tt__AnalyticsDeviceEngineConfigurationExtension data members, use only on dst after soap_dup_tt__AnalyticsDeviceEngineConfigurationExtension(NULL, tt__AnalyticsDeviceEngineConfigurationExtension *dst, tt__AnalyticsDeviceEngineConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
///
/// struct tt__EngineConfiguration operations:
/// - soap_default_tt__EngineConfiguration(soap*, tt__EngineConfiguration*) reset members to default
/// - int soap_read_tt__EngineConfiguration(soap*, tt__EngineConfiguration*) deserialize from a source
/// - int soap_write_tt__EngineConfiguration(soap*, tt__EngineConfiguration*) serialize to a sink
/// - tt__EngineConfiguration* soap_dup_tt__EngineConfiguration(soap*, tt__EngineConfiguration* dst, tt__EngineConfiguration *src) returns deep copy of tt__EngineConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EngineConfiguration(tt__EngineConfiguration*) deep deletes tt__EngineConfiguration data members, use only on dst after soap_dup_tt__EngineConfiguration(NULL, tt__EngineConfiguration *dst, tt__EngineConfiguration *src) (use soapcpp2 -Ed)
struct tt__EngineConfiguration
{
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    1;	///< Required element.
/// Element "AnalyticsEngineInputInfo" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    struct tt__AnalyticsEngineInputInfo*  AnalyticsEngineInputInfo       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
///
/// struct tt__AnalyticsEngineInputInfo operations:
/// - soap_default_tt__AnalyticsEngineInputInfo(soap*, tt__AnalyticsEngineInputInfo*) reset members to default
/// - int soap_read_tt__AnalyticsEngineInputInfo(soap*, tt__AnalyticsEngineInputInfo*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineInputInfo(soap*, tt__AnalyticsEngineInputInfo*) serialize to a sink
/// - tt__AnalyticsEngineInputInfo* soap_dup_tt__AnalyticsEngineInputInfo(soap*, tt__AnalyticsEngineInputInfo* dst, tt__AnalyticsEngineInputInfo *src) returns deep copy of tt__AnalyticsEngineInputInfo src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineInputInfo(tt__AnalyticsEngineInputInfo*) deep deletes tt__AnalyticsEngineInputInfo data members, use only on dst after soap_dup_tt__AnalyticsEngineInputInfo(NULL, tt__AnalyticsEngineInputInfo *dst, tt__AnalyticsEngineInputInfo *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineInputInfo
{
/// Element "InputInfo" of XSD type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   InputInfo                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    struct tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
///
/// struct tt__AnalyticsEngineInputInfoExtension operations:
/// - soap_default_tt__AnalyticsEngineInputInfoExtension(soap*, tt__AnalyticsEngineInputInfoExtension*) reset members to default
/// - int soap_read_tt__AnalyticsEngineInputInfoExtension(soap*, tt__AnalyticsEngineInputInfoExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineInputInfoExtension(soap*, tt__AnalyticsEngineInputInfoExtension*) serialize to a sink
/// - tt__AnalyticsEngineInputInfoExtension* soap_dup_tt__AnalyticsEngineInputInfoExtension(soap*, tt__AnalyticsEngineInputInfoExtension* dst, tt__AnalyticsEngineInputInfoExtension *src) returns deep copy of tt__AnalyticsEngineInputInfoExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineInputInfoExtension(tt__AnalyticsEngineInputInfoExtension*) deep deletes tt__AnalyticsEngineInputInfoExtension data members, use only on dst after soap_dup_tt__AnalyticsEngineInputInfoExtension(NULL, tt__AnalyticsEngineInputInfoExtension *dst, tt__AnalyticsEngineInputInfoExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineInputInfoExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
///
/// struct tt__SourceIdentification operations:
/// - soap_default_tt__SourceIdentification(soap*, tt__SourceIdentification*) reset members to default
/// - int soap_read_tt__SourceIdentification(soap*, tt__SourceIdentification*) deserialize from a source
/// - int soap_write_tt__SourceIdentification(soap*, tt__SourceIdentification*) serialize to a sink
/// - tt__SourceIdentification* soap_dup_tt__SourceIdentification(soap*, tt__SourceIdentification* dst, tt__SourceIdentification *src) returns deep copy of tt__SourceIdentification src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SourceIdentification(tt__SourceIdentification*) deep deletes tt__SourceIdentification data members, use only on dst after soap_dup_tt__SourceIdentification(NULL, tt__SourceIdentification *dst, tt__SourceIdentification *src) (use soapcpp2 -Ed)
struct tt__SourceIdentification
{
/// Element "Name" of XSD type xs:string.
    char*                                Name                           1;	///< Required element.
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  Token                          1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    struct tt__SourceIdentificationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
///
/// struct tt__SourceIdentificationExtension operations:
/// - soap_default_tt__SourceIdentificationExtension(soap*, tt__SourceIdentificationExtension*) reset members to default
/// - int soap_read_tt__SourceIdentificationExtension(soap*, tt__SourceIdentificationExtension*) deserialize from a source
/// - int soap_write_tt__SourceIdentificationExtension(soap*, tt__SourceIdentificationExtension*) serialize to a sink
/// - tt__SourceIdentificationExtension* soap_dup_tt__SourceIdentificationExtension(soap*, tt__SourceIdentificationExtension* dst, tt__SourceIdentificationExtension *src) returns deep copy of tt__SourceIdentificationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SourceIdentificationExtension(tt__SourceIdentificationExtension*) deep deletes tt__SourceIdentificationExtension data members, use only on dst after soap_dup_tt__SourceIdentificationExtension(NULL, tt__SourceIdentificationExtension *dst, tt__SourceIdentificationExtension *src) (use soapcpp2 -Ed)
struct tt__SourceIdentificationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
///
/// struct tt__MetadataInput operations:
/// - soap_default_tt__MetadataInput(soap*, tt__MetadataInput*) reset members to default
/// - int soap_read_tt__MetadataInput(soap*, tt__MetadataInput*) deserialize from a source
/// - int soap_write_tt__MetadataInput(soap*, tt__MetadataInput*) serialize to a sink
/// - tt__MetadataInput* soap_dup_tt__MetadataInput(soap*, tt__MetadataInput* dst, tt__MetadataInput *src) returns deep copy of tt__MetadataInput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataInput(tt__MetadataInput*) deep deletes tt__MetadataInput data members, use only on dst after soap_dup_tt__MetadataInput(NULL, tt__MetadataInput *dst, tt__MetadataInput *src) (use soapcpp2 -Ed)
struct tt__MetadataInput
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeMetadataConfig           0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   MetadataConfig                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    struct tt__MetadataInputExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
///
/// struct tt__MetadataInputExtension operations:
/// - soap_default_tt__MetadataInputExtension(soap*, tt__MetadataInputExtension*) reset members to default
/// - int soap_read_tt__MetadataInputExtension(soap*, tt__MetadataInputExtension*) deserialize from a source
/// - int soap_write_tt__MetadataInputExtension(soap*, tt__MetadataInputExtension*) serialize to a sink
/// - tt__MetadataInputExtension* soap_dup_tt__MetadataInputExtension(soap*, tt__MetadataInputExtension* dst, tt__MetadataInputExtension *src) returns deep copy of tt__MetadataInputExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataInputExtension(tt__MetadataInputExtension*) deep deletes tt__MetadataInputExtension data members, use only on dst after soap_dup_tt__MetadataInputExtension(NULL, tt__MetadataInputExtension *dst, tt__MetadataInputExtension *src) (use soapcpp2 -Ed)
struct tt__MetadataInputExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
///
/// struct tt__AnalyticsStateInformation operations:
/// - soap_default_tt__AnalyticsStateInformation(soap*, tt__AnalyticsStateInformation*) reset members to default
/// - int soap_read_tt__AnalyticsStateInformation(soap*, tt__AnalyticsStateInformation*) deserialize from a source
/// - int soap_write_tt__AnalyticsStateInformation(soap*, tt__AnalyticsStateInformation*) serialize to a sink
/// - tt__AnalyticsStateInformation* soap_dup_tt__AnalyticsStateInformation(soap*, tt__AnalyticsStateInformation* dst, tt__AnalyticsStateInformation *src) returns deep copy of tt__AnalyticsStateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsStateInformation(tt__AnalyticsStateInformation*) deep deletes tt__AnalyticsStateInformation data members, use only on dst after soap_dup_tt__AnalyticsStateInformation(NULL, tt__AnalyticsStateInformation *dst, tt__AnalyticsStateInformation *src) (use soapcpp2 -Ed)
struct tt__AnalyticsStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Token of the control object whose status is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsEngineControlToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsState.
    struct tt__AnalyticsState*           State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
///
/// struct tt__AnalyticsState operations:
/// - soap_default_tt__AnalyticsState(soap*, tt__AnalyticsState*) reset members to default
/// - int soap_read_tt__AnalyticsState(soap*, tt__AnalyticsState*) deserialize from a source
/// - int soap_write_tt__AnalyticsState(soap*, tt__AnalyticsState*) serialize to a sink
/// - tt__AnalyticsState* soap_dup_tt__AnalyticsState(soap*, tt__AnalyticsState* dst, tt__AnalyticsState *src) returns deep copy of tt__AnalyticsState src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsState(tt__AnalyticsState*) deep deletes tt__AnalyticsState data members, use only on dst after soap_dup_tt__AnalyticsState(NULL, tt__AnalyticsState *dst, tt__AnalyticsState *src) (use soapcpp2 -Ed)
struct tt__AnalyticsState
{
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "State" of XSD type xs:string.
    char*                                State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
/// </BLOCKQUOTE></PRE>
/// struct tt__ActionEngineEventPayload operations:
/// - soap_default_tt__ActionEngineEventPayload(soap*, tt__ActionEngineEventPayload*) reset members to default
/// - int soap_read_tt__ActionEngineEventPayload(soap*, tt__ActionEngineEventPayload*) deserialize from a source
/// - int soap_write_tt__ActionEngineEventPayload(soap*, tt__ActionEngineEventPayload*) serialize to a sink
/// - tt__ActionEngineEventPayload* soap_dup_tt__ActionEngineEventPayload(soap*, tt__ActionEngineEventPayload* dst, tt__ActionEngineEventPayload *src) returns deep copy of tt__ActionEngineEventPayload src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ActionEngineEventPayload(tt__ActionEngineEventPayload*) deep deletes tt__ActionEngineEventPayload data members, use only on dst after soap_dup_tt__ActionEngineEventPayload(NULL, tt__ActionEngineEventPayload *dst, tt__ActionEngineEventPayload *src) (use soapcpp2 -Ed)
struct tt__ActionEngineEventPayload
{
/// <PRE><BLOCKQUOTE>
///   Request Message
/// </BLOCKQUOTE></PRE>
/// Element "RequestInfo" of XSD type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           RequestInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Response Message
/// </BLOCKQUOTE></PRE>
/// Element "ResponseInfo" of XSD type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           ResponseInfo                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Fault Message
/// </BLOCKQUOTE></PRE>
/// Element "Fault" of XSD type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    struct tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
///
/// struct tt__ActionEngineEventPayloadExtension operations:
/// - soap_default_tt__ActionEngineEventPayloadExtension(soap*, tt__ActionEngineEventPayloadExtension*) reset members to default
/// - int soap_read_tt__ActionEngineEventPayloadExtension(soap*, tt__ActionEngineEventPayloadExtension*) deserialize from a source
/// - int soap_write_tt__ActionEngineEventPayloadExtension(soap*, tt__ActionEngineEventPayloadExtension*) serialize to a sink
/// - tt__ActionEngineEventPayloadExtension* soap_dup_tt__ActionEngineEventPayloadExtension(soap*, tt__ActionEngineEventPayloadExtension* dst, tt__ActionEngineEventPayloadExtension *src) returns deep copy of tt__ActionEngineEventPayloadExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ActionEngineEventPayloadExtension(tt__ActionEngineEventPayloadExtension*) deep deletes tt__ActionEngineEventPayloadExtension data members, use only on dst after soap_dup_tt__ActionEngineEventPayloadExtension(NULL, tt__ActionEngineEventPayloadExtension *dst, tt__ActionEngineEventPayloadExtension *src) (use soapcpp2 -Ed)
struct tt__ActionEngineEventPayloadExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassCandidate is a complexType.
///
/// struct tt__AudioClassCandidate operations:
/// - soap_default_tt__AudioClassCandidate(soap*, tt__AudioClassCandidate*) reset members to default
/// - int soap_read_tt__AudioClassCandidate(soap*, tt__AudioClassCandidate*) deserialize from a source
/// - int soap_write_tt__AudioClassCandidate(soap*, tt__AudioClassCandidate*) serialize to a sink
/// - tt__AudioClassCandidate* soap_dup_tt__AudioClassCandidate(soap*, tt__AudioClassCandidate* dst, tt__AudioClassCandidate *src) returns deep copy of tt__AudioClassCandidate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioClassCandidate(tt__AudioClassCandidate*) deep deletes tt__AudioClassCandidate data members, use only on dst after soap_dup_tt__AudioClassCandidate(NULL, tt__AudioClassCandidate *dst, tt__AudioClassCandidate *src) (use soapcpp2 -Ed)
struct tt__AudioClassCandidate
{
/// <PRE><BLOCKQUOTE>
///   Indicates audio class label
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":AudioClassType.
    tt__AudioClassType                   Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptor is a complexType.
///
/// struct tt__AudioClassDescriptor operations:
/// - soap_default_tt__AudioClassDescriptor(soap*, tt__AudioClassDescriptor*) reset members to default
/// - int soap_read_tt__AudioClassDescriptor(soap*, tt__AudioClassDescriptor*) deserialize from a source
/// - int soap_write_tt__AudioClassDescriptor(soap*, tt__AudioClassDescriptor*) serialize to a sink
/// - tt__AudioClassDescriptor* soap_dup_tt__AudioClassDescriptor(soap*, tt__AudioClassDescriptor* dst, tt__AudioClassDescriptor *src) returns deep copy of tt__AudioClassDescriptor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioClassDescriptor(tt__AudioClassDescriptor*) deep deletes tt__AudioClassDescriptor data members, use only on dst after soap_dup_tt__AudioClassDescriptor(NULL, tt__AudioClassDescriptor *dst, tt__AudioClassDescriptor *src) (use soapcpp2 -Ed)
struct tt__AudioClassDescriptor
{
/// <PRE><BLOCKQUOTE>
///   Array of audio class label and class probability
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioClassCandidate* is 0..unbounded.
   $int                                  __sizeClassCandidate           0;
/// Array struct tt__AudioClassCandidate* of size 0..unbounded.
    struct tt__AudioClassCandidate*      ClassCandidate                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension.
    struct tt__AudioClassDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is a complexType.
///
/// struct tt__AudioClassDescriptorExtension operations:
/// - soap_default_tt__AudioClassDescriptorExtension(soap*, tt__AudioClassDescriptorExtension*) reset members to default
/// - int soap_read_tt__AudioClassDescriptorExtension(soap*, tt__AudioClassDescriptorExtension*) deserialize from a source
/// - int soap_write_tt__AudioClassDescriptorExtension(soap*, tt__AudioClassDescriptorExtension*) serialize to a sink
/// - tt__AudioClassDescriptorExtension* soap_dup_tt__AudioClassDescriptorExtension(soap*, tt__AudioClassDescriptorExtension* dst, tt__AudioClassDescriptorExtension *src) returns deep copy of tt__AudioClassDescriptorExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioClassDescriptorExtension(tt__AudioClassDescriptorExtension*) deep deletes tt__AudioClassDescriptorExtension data members, use only on dst after soap_dup_tt__AudioClassDescriptorExtension(NULL, tt__AudioClassDescriptorExtension *dst, tt__AudioClassDescriptorExtension *src) (use soapcpp2 -Ed)
struct tt__AudioClassDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfiguration is a complexType.
///
/// struct tt__OSDPosConfiguration operations:
/// - soap_default_tt__OSDPosConfiguration(soap*, tt__OSDPosConfiguration*) reset members to default
/// - int soap_read_tt__OSDPosConfiguration(soap*, tt__OSDPosConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDPosConfiguration(soap*, tt__OSDPosConfiguration*) serialize to a sink
/// - tt__OSDPosConfiguration* soap_dup_tt__OSDPosConfiguration(soap*, tt__OSDPosConfiguration* dst, tt__OSDPosConfiguration *src) returns deep copy of tt__OSDPosConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDPosConfiguration(tt__OSDPosConfiguration*) deep deletes tt__OSDPosConfiguration data members, use only on dst after soap_dup_tt__OSDPosConfiguration(NULL, tt__OSDPosConfiguration *dst, tt__OSDPosConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDPosConfiguration
{
/// <PRE><BLOCKQUOTE>
///   For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// Element "Pos" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Pos                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension.
    struct tt__OSDPosConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is a complexType.
///
/// struct tt__OSDPosConfigurationExtension operations:
/// - soap_default_tt__OSDPosConfigurationExtension(soap*, tt__OSDPosConfigurationExtension*) reset members to default
/// - int soap_read_tt__OSDPosConfigurationExtension(soap*, tt__OSDPosConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDPosConfigurationExtension(soap*, tt__OSDPosConfigurationExtension*) serialize to a sink
/// - tt__OSDPosConfigurationExtension* soap_dup_tt__OSDPosConfigurationExtension(soap*, tt__OSDPosConfigurationExtension* dst, tt__OSDPosConfigurationExtension *src) returns deep copy of tt__OSDPosConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDPosConfigurationExtension(tt__OSDPosConfigurationExtension*) deep deletes tt__OSDPosConfigurationExtension data members, use only on dst after soap_dup_tt__OSDPosConfigurationExtension(NULL, tt__OSDPosConfigurationExtension *dst, tt__OSDPosConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDPosConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColor is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.
/// </BLOCKQUOTE></PRE>
/// struct tt__OSDColor operations:
/// - soap_default_tt__OSDColor(soap*, tt__OSDColor*) reset members to default
/// - int soap_read_tt__OSDColor(soap*, tt__OSDColor*) deserialize from a source
/// - int soap_write_tt__OSDColor(soap*, tt__OSDColor*) serialize to a sink
/// - tt__OSDColor* soap_dup_tt__OSDColor(soap*, tt__OSDColor* dst, tt__OSDColor *src) returns deep copy of tt__OSDColor src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDColor(tt__OSDColor*) deep deletes tt__OSDColor data members, use only on dst after soap_dup_tt__OSDColor(NULL, tt__OSDColor *dst, tt__OSDColor *src) (use soapcpp2 -Ed)
struct tt__OSDColor
{
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Attribute "Transparent" of XSD type xs:int.
   @int*                                 Transparent                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfiguration is a complexType.
///
/// struct tt__OSDTextConfiguration operations:
/// - soap_default_tt__OSDTextConfiguration(soap*, tt__OSDTextConfiguration*) reset members to default
/// - int soap_read_tt__OSDTextConfiguration(soap*, tt__OSDTextConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDTextConfiguration(soap*, tt__OSDTextConfiguration*) serialize to a sink
/// - tt__OSDTextConfiguration* soap_dup_tt__OSDTextConfiguration(soap*, tt__OSDTextConfiguration* dst, tt__OSDTextConfiguration *src) returns deep copy of tt__OSDTextConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextConfiguration(tt__OSDTextConfiguration*) deep deletes tt__OSDTextConfiguration data members, use only on dst after soap_dup_tt__OSDTextConfiguration(NULL, tt__OSDTextConfiguration *dst, tt__OSDTextConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDTextConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following OSD Text Type are defined:<ul>
///   <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
///   <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
///   <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
///   <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul>
///   <li>M/d/yyyy - e.g. 3/6/2013</li>
///   <li>MM/dd/yyyy - e.g. 03/06/2013</li>
///   <li>dd/MM/yyyy - e.g. 06/03/2013</li>
///   <li>yyyy/MM/dd - e.g. 2013/03/06</li>
///   <li>yyyy-MM-dd - e.g. 2013-06-03</li>
///   <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
///   <li>MMMM dd, yyyy - e.g. March 06, 2013</li>
///   <li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "DateFormat" of XSD type xs:string.
    char*                                DateFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul>
///   <li>h:mm:ss tt - e.g. 2:14:21 PM</li>
///   <li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
///   <li>H:mm:ss - e.g. 14:14:21</li>
///   <li>HH:mm:ss - e.g. 14:14:21</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "TimeFormat" of XSD type xs:string.
    char*                                TimeFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font size of the text in pt.
/// </BLOCKQUOTE></PRE>
/// Element "FontSize" of XSD type xs:int.
    int*                                 FontSize                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font color of the text.
/// </BLOCKQUOTE></PRE>
/// Element "FontColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Background color of the text.
/// </BLOCKQUOTE></PRE>
/// Element "BackgroundColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 BackgroundColor                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The content of text to be displayed.
/// </BLOCKQUOTE></PRE>
/// Element "PlainText" of XSD type xs:string.
    char*                                PlainText                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension.
    struct tt__OSDTextConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is a complexType.
///
/// struct tt__OSDTextConfigurationExtension operations:
/// - soap_default_tt__OSDTextConfigurationExtension(soap*, tt__OSDTextConfigurationExtension*) reset members to default
/// - int soap_read_tt__OSDTextConfigurationExtension(soap*, tt__OSDTextConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDTextConfigurationExtension(soap*, tt__OSDTextConfigurationExtension*) serialize to a sink
/// - tt__OSDTextConfigurationExtension* soap_dup_tt__OSDTextConfigurationExtension(soap*, tt__OSDTextConfigurationExtension* dst, tt__OSDTextConfigurationExtension *src) returns deep copy of tt__OSDTextConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextConfigurationExtension(tt__OSDTextConfigurationExtension*) deep deletes tt__OSDTextConfigurationExtension data members, use only on dst after soap_dup_tt__OSDTextConfigurationExtension(NULL, tt__OSDTextConfigurationExtension *dst, tt__OSDTextConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDTextConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfiguration is a complexType.
///
/// struct tt__OSDImgConfiguration operations:
/// - soap_default_tt__OSDImgConfiguration(soap*, tt__OSDImgConfiguration*) reset members to default
/// - int soap_read_tt__OSDImgConfiguration(soap*, tt__OSDImgConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDImgConfiguration(soap*, tt__OSDImgConfiguration*) serialize to a sink
/// - tt__OSDImgConfiguration* soap_dup_tt__OSDImgConfiguration(soap*, tt__OSDImgConfiguration* dst, tt__OSDImgConfiguration *src) returns deep copy of tt__OSDImgConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgConfiguration(tt__OSDImgConfiguration*) deep deletes tt__OSDImgConfiguration data members, use only on dst after soap_dup_tt__OSDImgConfiguration(NULL, tt__OSDImgConfiguration *dst, tt__OSDImgConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDImgConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The URI of the image which to be displayed.
/// </BLOCKQUOTE></PRE>
/// Element "ImgPath" of XSD type xs:anyURI.
    xsd__anyURI                          ImgPath                        1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension.
    struct tt__OSDImgConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is a complexType.
///
/// struct tt__OSDImgConfigurationExtension operations:
/// - soap_default_tt__OSDImgConfigurationExtension(soap*, tt__OSDImgConfigurationExtension*) reset members to default
/// - int soap_read_tt__OSDImgConfigurationExtension(soap*, tt__OSDImgConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDImgConfigurationExtension(soap*, tt__OSDImgConfigurationExtension*) serialize to a sink
/// - tt__OSDImgConfigurationExtension* soap_dup_tt__OSDImgConfigurationExtension(soap*, tt__OSDImgConfigurationExtension* dst, tt__OSDImgConfigurationExtension *src) returns deep copy of tt__OSDImgConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgConfigurationExtension(tt__OSDImgConfigurationExtension*) deep deletes tt__OSDImgConfigurationExtension data members, use only on dst after soap_dup_tt__OSDImgConfigurationExtension(NULL, tt__OSDImgConfigurationExtension *dst, tt__OSDImgConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDImgConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorspaceRange is a complexType.
///
/// struct tt__ColorspaceRange operations:
/// - soap_default_tt__ColorspaceRange(soap*, tt__ColorspaceRange*) reset members to default
/// - int soap_read_tt__ColorspaceRange(soap*, tt__ColorspaceRange*) deserialize from a source
/// - int soap_write_tt__ColorspaceRange(soap*, tt__ColorspaceRange*) serialize to a sink
/// - tt__ColorspaceRange* soap_dup_tt__ColorspaceRange(soap*, tt__ColorspaceRange* dst, tt__ColorspaceRange *src) returns deep copy of tt__ColorspaceRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorspaceRange(tt__ColorspaceRange*) deep deletes tt__ColorspaceRange data members, use only on dst after soap_dup_tt__ColorspaceRange(NULL, tt__ColorspaceRange *dst, tt__ColorspaceRange *src) (use soapcpp2 -Ed)
struct tt__ColorspaceRange
{
/// Element "X" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               X                              1;	///< Required element.
/// Element "Y" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Y                              1;	///< Required element.
/// Element "Z" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Z                              1;	///< Required element.
/// Element "Colorspace" of XSD type xs:anyURI.
    xsd__anyURI                          Colorspace                     1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color supported. Either list each color or define the range of color value. The following values are acceptable for Colourspace attribute.<ul><li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr colourspace</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
///   <li>http://www.onvif.org/ver10/colorspace/HSV - HSV colourspace</li></ul>
/// </BLOCKQUOTE></PRE>
/// struct tt__ColorOptions operations:
/// - soap_default_tt__ColorOptions(soap*, tt__ColorOptions*) reset members to default
/// - int soap_read_tt__ColorOptions(soap*, tt__ColorOptions*) deserialize from a source
/// - int soap_write_tt__ColorOptions(soap*, tt__ColorOptions*) serialize to a sink
/// - tt__ColorOptions* soap_dup_tt__ColorOptions(soap*, tt__ColorOptions* dst, tt__ColorOptions *src) returns deep copy of tt__ColorOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ColorOptions(tt__ColorOptions*) deep deletes tt__ColorOptions data members, use only on dst after soap_dup_tt__ColorOptions(NULL, tt__ColorOptions *dst, tt__ColorOptions *src) (use soapcpp2 -Ed)
struct tt__ColorOptions
{
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with one ore more elements with maxOccurs>1 (ColorList) prevents the use of a union. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// <PRE><BLOCKQUOTE>
///   List the supported color.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Color* is 1..unbounded.
   $int                                  __sizeColorList                0;
/// Array struct tt__Color* of size 1..unbounded.
    struct tt__Color*                    ColorList                     ;
/// <PRE><BLOCKQUOTE>
///   Define the rang of color supported.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__ColorspaceRange* is 1..unbounded.
   $int                                  __sizeColorspaceRange          0;
/// Array struct tt__ColorspaceRange* of size 1..unbounded.
    struct tt__ColorspaceRange*          ColorspaceRange               ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color and its transparency.
/// </BLOCKQUOTE></PRE>
/// struct tt__OSDColorOptions operations:
/// - soap_default_tt__OSDColorOptions(soap*, tt__OSDColorOptions*) reset members to default
/// - int soap_read_tt__OSDColorOptions(soap*, tt__OSDColorOptions*) deserialize from a source
/// - int soap_write_tt__OSDColorOptions(soap*, tt__OSDColorOptions*) serialize to a sink
/// - tt__OSDColorOptions* soap_dup_tt__OSDColorOptions(soap*, tt__OSDColorOptions* dst, tt__OSDColorOptions *src) returns deep copy of tt__OSDColorOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDColorOptions(tt__OSDColorOptions*) deep deletes tt__OSDColorOptions data members, use only on dst after soap_dup_tt__OSDColorOptions(NULL, tt__OSDColorOptions *dst, tt__OSDColorOptions *src) (use soapcpp2 -Ed)
struct tt__OSDColorOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional list of supported colors.
/// </BLOCKQUOTE></PRE>
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":ColorOptions.
    struct tt__ColorOptions*             Color                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Range of the transparent level. Larger means more tranparent.
/// </BLOCKQUOTE></PRE>
/// Element "Transparent" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 Transparent                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension.
    struct tt__OSDColorOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is a complexType.
///
/// struct tt__OSDColorOptionsExtension operations:
/// - soap_default_tt__OSDColorOptionsExtension(soap*, tt__OSDColorOptionsExtension*) reset members to default
/// - int soap_read_tt__OSDColorOptionsExtension(soap*, tt__OSDColorOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDColorOptionsExtension(soap*, tt__OSDColorOptionsExtension*) serialize to a sink
/// - tt__OSDColorOptionsExtension* soap_dup_tt__OSDColorOptionsExtension(soap*, tt__OSDColorOptionsExtension* dst, tt__OSDColorOptionsExtension *src) returns deep copy of tt__OSDColorOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDColorOptionsExtension(tt__OSDColorOptionsExtension*) deep deletes tt__OSDColorOptionsExtension data members, use only on dst after soap_dup_tt__OSDColorOptionsExtension(NULL, tt__OSDColorOptionsExtension *dst, tt__OSDColorOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDColorOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptions is a complexType.
///
/// struct tt__OSDTextOptions operations:
/// - soap_default_tt__OSDTextOptions(soap*, tt__OSDTextOptions*) reset members to default
/// - int soap_read_tt__OSDTextOptions(soap*, tt__OSDTextOptions*) deserialize from a source
/// - int soap_write_tt__OSDTextOptions(soap*, tt__OSDTextOptions*) serialize to a sink
/// - tt__OSDTextOptions* soap_dup_tt__OSDTextOptions(soap*, tt__OSDTextOptions* dst, tt__OSDTextOptions *src) returns deep copy of tt__OSDTextOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextOptions(tt__OSDTextOptions*) deep deletes tt__OSDTextOptions data members, use only on dst after soap_dup_tt__OSDTextOptions(NULL, tt__OSDTextOptions *dst, tt__OSDTextOptions *src) (use soapcpp2 -Ed)
struct tt__OSDTextOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeType                     1;
/// Array char** of size 1..unbounded.
    char**                               Type                           1;
/// <PRE><BLOCKQUOTE>
///   Range of the font size value.
/// </BLOCKQUOTE></PRE>
/// Element "FontSizeRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FontSizeRange                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported date format.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeDateFormat               0;
/// Array char** of size 0..unbounded.
    char**                               DateFormat                     0;
/// <PRE><BLOCKQUOTE>
///   List of supported time format.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeTimeFormat               0;
/// Array char** of size 0..unbounded.
    char**                               TimeFormat                     0;
/// <PRE><BLOCKQUOTE>
///   List of supported font color.
/// </BLOCKQUOTE></PRE>
/// Element "FontColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported background color.
/// </BLOCKQUOTE></PRE>
/// Element "BackgroundColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          BackgroundColor                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension.
    struct tt__OSDTextOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is a complexType.
///
/// struct tt__OSDTextOptionsExtension operations:
/// - soap_default_tt__OSDTextOptionsExtension(soap*, tt__OSDTextOptionsExtension*) reset members to default
/// - int soap_read_tt__OSDTextOptionsExtension(soap*, tt__OSDTextOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDTextOptionsExtension(soap*, tt__OSDTextOptionsExtension*) serialize to a sink
/// - tt__OSDTextOptionsExtension* soap_dup_tt__OSDTextOptionsExtension(soap*, tt__OSDTextOptionsExtension* dst, tt__OSDTextOptionsExtension *src) returns deep copy of tt__OSDTextOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDTextOptionsExtension(tt__OSDTextOptionsExtension*) deep deletes tt__OSDTextOptionsExtension data members, use only on dst after soap_dup_tt__OSDTextOptionsExtension(NULL, tt__OSDTextOptionsExtension *dst, tt__OSDTextOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDTextOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptions is a complexType.
///
/// struct tt__OSDImgOptions operations:
/// - soap_default_tt__OSDImgOptions(soap*, tt__OSDImgOptions*) reset members to default
/// - int soap_read_tt__OSDImgOptions(soap*, tt__OSDImgOptions*) deserialize from a source
/// - int soap_write_tt__OSDImgOptions(soap*, tt__OSDImgOptions*) serialize to a sink
/// - tt__OSDImgOptions* soap_dup_tt__OSDImgOptions(soap*, tt__OSDImgOptions* dst, tt__OSDImgOptions *src) returns deep copy of tt__OSDImgOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgOptions(tt__OSDImgOptions*) deep deletes tt__OSDImgOptions data members, use only on dst after soap_dup_tt__OSDImgOptions(NULL, tt__OSDImgOptions *dst, tt__OSDImgOptions *src) (use soapcpp2 -Ed)
struct tt__OSDImgOptions
{
/// <PRE><BLOCKQUOTE>
///   List of avaiable uris of image.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeImagePath                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ImagePath                      1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension.
    struct tt__OSDImgOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is a complexType.
///
/// struct tt__OSDImgOptionsExtension operations:
/// - soap_default_tt__OSDImgOptionsExtension(soap*, tt__OSDImgOptionsExtension*) reset members to default
/// - int soap_read_tt__OSDImgOptionsExtension(soap*, tt__OSDImgOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDImgOptionsExtension(soap*, tt__OSDImgOptionsExtension*) serialize to a sink
/// - tt__OSDImgOptionsExtension* soap_dup_tt__OSDImgOptionsExtension(soap*, tt__OSDImgOptionsExtension* dst, tt__OSDImgOptionsExtension *src) returns deep copy of tt__OSDImgOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDImgOptionsExtension(tt__OSDImgOptionsExtension*) deep deletes tt__OSDImgOptionsExtension data members, use only on dst after soap_dup_tt__OSDImgOptionsExtension(NULL, tt__OSDImgOptionsExtension *dst, tt__OSDImgOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDImgOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is a complexType.
///
/// struct tt__OSDConfigurationExtension operations:
/// - soap_default_tt__OSDConfigurationExtension(soap*, tt__OSDConfigurationExtension*) reset members to default
/// - int soap_read_tt__OSDConfigurationExtension(soap*, tt__OSDConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__OSDConfigurationExtension(soap*, tt__OSDConfigurationExtension*) serialize to a sink
/// - tt__OSDConfigurationExtension* soap_dup_tt__OSDConfigurationExtension(soap*, tt__OSDConfigurationExtension* dst, tt__OSDConfigurationExtension *src) returns deep copy of tt__OSDConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfigurationExtension(tt__OSDConfigurationExtension*) deep deletes tt__OSDConfigurationExtension data members, use only on dst after soap_dup_tt__OSDConfigurationExtension(NULL, tt__OSDConfigurationExtension *dst, tt__OSDConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__OSDConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is a complexType.
///
/// struct tt__MaximumNumberOfOSDs operations:
/// - soap_default_tt__MaximumNumberOfOSDs(soap*, tt__MaximumNumberOfOSDs*) reset members to default
/// - int soap_read_tt__MaximumNumberOfOSDs(soap*, tt__MaximumNumberOfOSDs*) deserialize from a source
/// - int soap_write_tt__MaximumNumberOfOSDs(soap*, tt__MaximumNumberOfOSDs*) serialize to a sink
/// - tt__MaximumNumberOfOSDs* soap_dup_tt__MaximumNumberOfOSDs(soap*, tt__MaximumNumberOfOSDs* dst, tt__MaximumNumberOfOSDs *src) returns deep copy of tt__MaximumNumberOfOSDs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MaximumNumberOfOSDs(tt__MaximumNumberOfOSDs*) deep deletes tt__MaximumNumberOfOSDs data members, use only on dst after soap_dup_tt__MaximumNumberOfOSDs(NULL, tt__MaximumNumberOfOSDs *dst, tt__MaximumNumberOfOSDs *src) (use soapcpp2 -Ed)
struct tt__MaximumNumberOfOSDs
{
/// Attribute "Total" of XSD type xs:int.
   @int                                  Total                          1;	///< Required attribute.
/// Attribute "Image" of XSD type xs:int.
   @int*                                 Image                          0;	///< Optional attribute.
/// Attribute "PlainText" of XSD type xs:int.
   @int*                                 PlainText                      0;	///< Optional attribute.
/// Attribute "Date" of XSD type xs:int.
   @int*                                 Date                           0;	///< Optional attribute.
/// Attribute "Time" of XSD type xs:int.
   @int*                                 Time                           0;	///< Optional attribute.
/// Attribute "DateAndTime" of XSD type xs:int.
   @int*                                 DateAndTime                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is a complexType.
///
/// struct tt__OSDConfigurationOptions operations:
/// - soap_default_tt__OSDConfigurationOptions(soap*, tt__OSDConfigurationOptions*) reset members to default
/// - int soap_read_tt__OSDConfigurationOptions(soap*, tt__OSDConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__OSDConfigurationOptions(soap*, tt__OSDConfigurationOptions*) serialize to a sink
/// - tt__OSDConfigurationOptions* soap_dup_tt__OSDConfigurationOptions(soap*, tt__OSDConfigurationOptions* dst, tt__OSDConfigurationOptions *src) returns deep copy of tt__OSDConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfigurationOptions(tt__OSDConfigurationOptions*) deep deletes tt__OSDConfigurationOptions data members, use only on dst after soap_dup_tt__OSDConfigurationOptions(NULL, tt__OSDConfigurationOptions *dst, tt__OSDConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__OSDConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   The maximum number of OSD configurations supported for the specificate video source configuration. If a device limits the number of instances by OSDType, it should indicate the supported number via the related attribute.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfOSDs" of XSD type "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs.
    struct tt__MaximumNumberOfOSDs*      MaximumNumberOfOSDs            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__OSDType* is 1..unbounded.
   $int                                  __sizeType                     1;
/// Array enum tt__OSDType* of size 1..unbounded.
    enum tt__OSDType*                    Type                           1;
/// <PRE><BLOCKQUOTE>
///   List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizePositionOption           1;
/// Array char** of size 1..unbounded.
    char**                               PositionOption                 1;
/// <PRE><BLOCKQUOTE>
///   Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.
/// </BLOCKQUOTE></PRE>
/// Element "TextOption" of XSD type "http://www.onvif.org/ver10/schema":OSDTextOptions.
    struct tt__OSDTextOptions*           TextOption                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.
/// </BLOCKQUOTE></PRE>
/// Element "ImageOption" of XSD type "http://www.onvif.org/ver10/schema":OSDImgOptions.
    struct tt__OSDImgOptions*            ImageOption                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension.
    struct tt__OSDConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is a complexType.
///
/// struct tt__OSDConfigurationOptionsExtension operations:
/// - soap_default_tt__OSDConfigurationOptionsExtension(soap*, tt__OSDConfigurationOptionsExtension*) reset members to default
/// - int soap_read_tt__OSDConfigurationOptionsExtension(soap*, tt__OSDConfigurationOptionsExtension*) deserialize from a source
/// - int soap_write_tt__OSDConfigurationOptionsExtension(soap*, tt__OSDConfigurationOptionsExtension*) serialize to a sink
/// - tt__OSDConfigurationOptionsExtension* soap_dup_tt__OSDConfigurationOptionsExtension(soap*, tt__OSDConfigurationOptionsExtension* dst, tt__OSDConfigurationOptionsExtension *src) returns deep copy of tt__OSDConfigurationOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfigurationOptionsExtension(tt__OSDConfigurationOptionsExtension*) deep deletes tt__OSDConfigurationOptionsExtension data members, use only on dst after soap_dup_tt__OSDConfigurationOptionsExtension(NULL, tt__OSDConfigurationOptionsExtension *dst, tt__OSDConfigurationOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__OSDConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FileProgress is a complexType.
///
/// struct tt__FileProgress operations:
/// - soap_default_tt__FileProgress(soap*, tt__FileProgress*) reset members to default
/// - int soap_read_tt__FileProgress(soap*, tt__FileProgress*) deserialize from a source
/// - int soap_write_tt__FileProgress(soap*, tt__FileProgress*) serialize to a sink
/// - tt__FileProgress* soap_dup_tt__FileProgress(soap*, tt__FileProgress* dst, tt__FileProgress *src) returns deep copy of tt__FileProgress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FileProgress(tt__FileProgress*) deep deletes tt__FileProgress data members, use only on dst after soap_dup_tt__FileProgress(NULL, tt__FileProgress *dst, tt__FileProgress *src) (use soapcpp2 -Ed)
struct tt__FileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name
/// </BLOCKQUOTE></PRE>
/// Element "FileName" of XSD type xs:string.
    char*                                FileName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Normalized percentage completion for uploading the exported file
/// </BLOCKQUOTE></PRE>
/// Element "Progress" of XSD type xs:float.
    float                                Progress                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is a complexType.
///
/// struct tt__ArrayOfFileProgress operations:
/// - soap_default_tt__ArrayOfFileProgress(soap*, tt__ArrayOfFileProgress*) reset members to default
/// - int soap_read_tt__ArrayOfFileProgress(soap*, tt__ArrayOfFileProgress*) deserialize from a source
/// - int soap_write_tt__ArrayOfFileProgress(soap*, tt__ArrayOfFileProgress*) serialize to a sink
/// - tt__ArrayOfFileProgress* soap_dup_tt__ArrayOfFileProgress(soap*, tt__ArrayOfFileProgress* dst, tt__ArrayOfFileProgress *src) returns deep copy of tt__ArrayOfFileProgress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ArrayOfFileProgress(tt__ArrayOfFileProgress*) deep deletes tt__ArrayOfFileProgress data members, use only on dst after soap_dup_tt__ArrayOfFileProgress(NULL, tt__ArrayOfFileProgress *dst, tt__ArrayOfFileProgress *src) (use soapcpp2 -Ed)
struct tt__ArrayOfFileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name and export progress information
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FileProgress* is 0..unbounded.
   $int                                  __sizeFileProgress             0;
/// Array struct tt__FileProgress* of size 0..unbounded.
    struct tt__FileProgress*             FileProgress                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension.
    struct tt__ArrayOfFileProgressExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is a complexType.
///
/// struct tt__ArrayOfFileProgressExtension operations:
/// - soap_default_tt__ArrayOfFileProgressExtension(soap*, tt__ArrayOfFileProgressExtension*) reset members to default
/// - int soap_read_tt__ArrayOfFileProgressExtension(soap*, tt__ArrayOfFileProgressExtension*) deserialize from a source
/// - int soap_write_tt__ArrayOfFileProgressExtension(soap*, tt__ArrayOfFileProgressExtension*) serialize to a sink
/// - tt__ArrayOfFileProgressExtension* soap_dup_tt__ArrayOfFileProgressExtension(soap*, tt__ArrayOfFileProgressExtension* dst, tt__ArrayOfFileProgressExtension *src) returns deep copy of tt__ArrayOfFileProgressExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ArrayOfFileProgressExtension(tt__ArrayOfFileProgressExtension*) deep deletes tt__ArrayOfFileProgressExtension data members, use only on dst after soap_dup_tt__ArrayOfFileProgressExtension(NULL, tt__ArrayOfFileProgressExtension *dst, tt__ArrayOfFileProgressExtension *src) (use soapcpp2 -Ed)
struct tt__ArrayOfFileProgressExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePath is a complexType.
///
/// struct tt__StorageReferencePath operations:
/// - soap_default_tt__StorageReferencePath(soap*, tt__StorageReferencePath*) reset members to default
/// - int soap_read_tt__StorageReferencePath(soap*, tt__StorageReferencePath*) deserialize from a source
/// - int soap_write_tt__StorageReferencePath(soap*, tt__StorageReferencePath*) serialize to a sink
/// - tt__StorageReferencePath* soap_dup_tt__StorageReferencePath(soap*, tt__StorageReferencePath* dst, tt__StorageReferencePath *src) returns deep copy of tt__StorageReferencePath src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__StorageReferencePath(tt__StorageReferencePath*) deep deletes tt__StorageReferencePath data members, use only on dst after soap_dup_tt__StorageReferencePath(NULL, tt__StorageReferencePath *dst, tt__StorageReferencePath *src) (use soapcpp2 -Ed)
struct tt__StorageReferencePath
{
/// <PRE><BLOCKQUOTE>
///   identifier of an existing Storage Configuration.
/// </BLOCKQUOTE></PRE>
/// Element "StorageToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   StorageToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gives the relative directory path on the storage
/// </BLOCKQUOTE></PRE>
/// Element "RelativePath" of XSD type xs:string.
    char*                                RelativePath                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":StorageReferencePathExtension.
    struct tt__StorageReferencePathExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is a complexType.
///
/// struct tt__StorageReferencePathExtension operations:
/// - soap_default_tt__StorageReferencePathExtension(soap*, tt__StorageReferencePathExtension*) reset members to default
/// - int soap_read_tt__StorageReferencePathExtension(soap*, tt__StorageReferencePathExtension*) deserialize from a source
/// - int soap_write_tt__StorageReferencePathExtension(soap*, tt__StorageReferencePathExtension*) serialize to a sink
/// - tt__StorageReferencePathExtension* soap_dup_tt__StorageReferencePathExtension(soap*, tt__StorageReferencePathExtension* dst, tt__StorageReferencePathExtension *src) returns deep copy of tt__StorageReferencePathExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__StorageReferencePathExtension(tt__StorageReferencePathExtension*) deep deletes tt__StorageReferencePathExtension data members, use only on dst after soap_dup_tt__StorageReferencePathExtension(NULL, tt__StorageReferencePathExtension *dst, tt__StorageReferencePathExtension *src) (use soapcpp2 -Ed)
struct tt__StorageReferencePathExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
/// @brief "http://www.onvif.org/ver10/schema":Message is a complexType.
///
/// struct _tt__Message operations:
/// - soap_default__tt__Message(soap*, _tt__Message*) reset members to default
/// - int soap_read__tt__Message(soap*, _tt__Message*) deserialize from a source
/// - int soap_write__tt__Message(soap*, _tt__Message*) serialize to a sink
/// - _tt__Message* soap_dup__tt__Message(soap*, _tt__Message* dst, _tt__Message *src) returns deep copy of _tt__Message src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__Message(_tt__Message*) deep deletes _tt__Message data members, use only on dst after soap_dup__tt__Message(NULL, _tt__Message *dst, _tt__Message *src) (use soapcpp2 -Ed)
struct _tt__Message
{
/// <PRE><BLOCKQUOTE>
///   Token value pairs that triggered this message. Typically only one item is present.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Source                         0;	///< Optional element.
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Key                            0;	///< Optional element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageExtension.
    struct tt__MessageExtension*         Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute "PropertyOperation" of XSD type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
/// struct wsnt__QueryExpressionType operations:
/// - soap_default_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType*) reset members to default
/// - int soap_read_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType*) deserialize from a source
/// - int soap_write_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType*) serialize to a sink
/// - wsnt__QueryExpressionType* soap_dup_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType* dst, wsnt__QueryExpressionType *src) returns deep copy of wsnt__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__QueryExpressionType(wsnt__QueryExpressionType*) deep deletes wsnt__QueryExpressionType data members, use only on dst after soap_dup_wsnt__QueryExpressionType(NULL, wsnt__QueryExpressionType *dst, wsnt__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__QueryExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
/// struct wsnt__TopicExpressionType operations:
/// - soap_default_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType*) reset members to default
/// - int soap_read_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType*) serialize to a sink
/// - wsnt__TopicExpressionType* soap_dup_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType* dst, wsnt__TopicExpressionType *src) returns deep copy of wsnt__TopicExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionType(wsnt__TopicExpressionType*) deep deletes wsnt__TopicExpressionType data members, use only on dst after soap_dup_wsnt__TopicExpressionType(NULL, wsnt__TopicExpressionType *dst, wsnt__TopicExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// struct wsnt__FilterType operations:
/// - soap_default_wsnt__FilterType(soap*, wsnt__FilterType*) reset members to default
/// - int soap_read_wsnt__FilterType(soap*, wsnt__FilterType*) deserialize from a source
/// - int soap_write_wsnt__FilterType(soap*, wsnt__FilterType*) serialize to a sink
/// - wsnt__FilterType* soap_dup_wsnt__FilterType(soap*, wsnt__FilterType* dst, wsnt__FilterType *src) returns deep copy of wsnt__FilterType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__FilterType(wsnt__FilterType*) deep deletes wsnt__FilterType data members, use only on dst after soap_dup_wsnt__FilterType(NULL, wsnt__FilterType *dst, wsnt__FilterType *src) (use soapcpp2 -Ed)
struct wsnt__FilterType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
/// struct wsnt__SubscriptionPolicyType operations:
/// - soap_default_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType*) reset members to default
/// - int soap_read_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType*) deserialize from a source
/// - int soap_write_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType*) serialize to a sink
/// - wsnt__SubscriptionPolicyType* soap_dup_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType* dst, wsnt__SubscriptionPolicyType *src) returns deep copy of wsnt__SubscriptionPolicyType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscriptionPolicyType(wsnt__SubscriptionPolicyType*) deep deletes wsnt__SubscriptionPolicyType data members, use only on dst after soap_dup_wsnt__SubscriptionPolicyType(NULL, wsnt__SubscriptionPolicyType *dst, wsnt__SubscriptionPolicyType *src) (use soapcpp2 -Ed)
struct wsnt__SubscriptionPolicyType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
/// struct wsnt__NotificationMessageHolderType operations:
/// - soap_default_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType*) reset members to default
/// - int soap_read_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType*) deserialize from a source
/// - int soap_write_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType*) serialize to a sink
/// - wsnt__NotificationMessageHolderType* soap_dup_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType* dst, wsnt__NotificationMessageHolderType *src) returns deep copy of wsnt__NotificationMessageHolderType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotificationMessageHolderType(wsnt__NotificationMessageHolderType*) deep deletes wsnt__NotificationMessageHolderType data members, use only on dst after soap_dup_wsnt__NotificationMessageHolderType(NULL, wsnt__NotificationMessageHolderType *dst, wsnt__NotificationMessageHolderType *src) (use soapcpp2 -Ed)
struct wsnt__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Topic.
    struct wsnt__TopicExpressionType*    Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// struct _wsnt__NotificationMessageHolderType_Message operations:
/// - soap_default__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message*) reset members to default
/// - int soap_read__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message*) deserialize from a source
/// - int soap_write__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message*) serialize to a sink
/// - _wsnt__NotificationMessageHolderType_Message* soap_dup__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message* dst, _wsnt__NotificationMessageHolderType_Message *src) returns deep copy of _wsnt__NotificationMessageHolderType_Message src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationMessageHolderType_Message(_wsnt__NotificationMessageHolderType_Message*) deep deletes _wsnt__NotificationMessageHolderType_Message data members, use only on dst after soap_dup__wsnt__NotificationMessageHolderType_Message(NULL, _wsnt__NotificationMessageHolderType_Message *dst, _wsnt__NotificationMessageHolderType_Message *src) (use soapcpp2 -Ed)
    struct _wsnt__NotificationMessageHolderType_Message
    {
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                    Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
/// struct _wsnt__NotificationProducerRP operations:
/// - soap_default__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP*) reset members to default
/// - int soap_read__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP*) deserialize from a source
/// - int soap_write__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP*) serialize to a sink
/// - _wsnt__NotificationProducerRP* soap_dup__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP* dst, _wsnt__NotificationProducerRP *src) returns deep copy of _wsnt__NotificationProducerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationProducerRP(_wsnt__NotificationProducerRP*) deep deletes _wsnt__NotificationProducerRP data members, use only on dst after soap_dup__wsnt__NotificationProducerRP(NULL, _wsnt__NotificationProducerRP *dst, _wsnt__NotificationProducerRP *src) (use soapcpp2 -Ed)
struct _wsnt__NotificationProducerRP
{
/// Size of the dynamic array of struct wsnt__TopicExpressionType* is 0..unbounded.
   $int                                  __sizeTopicExpression          0;
/// Array struct wsnt__TopicExpressionType* of size 0..unbounded.
    struct wsnt__TopicExpressionType*    TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    enum xsd__boolean                    FixedTopicSet                  0;	///< Default element value="true".
/// Size of the dynamic array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeTopicExpressionDialect   0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
/// struct _wsnt__SubscriptionManagerRP operations:
/// - soap_default__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP*) reset members to default
/// - int soap_read__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP*) deserialize from a source
/// - int soap_write__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP*) serialize to a sink
/// - _wsnt__SubscriptionManagerRP* soap_dup__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP* dst, _wsnt__SubscriptionManagerRP *src) returns deep copy of _wsnt__SubscriptionManagerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscriptionManagerRP(_wsnt__SubscriptionManagerRP*) deep deletes _wsnt__SubscriptionManagerRP data members, use only on dst after soap_dup__wsnt__SubscriptionManagerRP(NULL, _wsnt__SubscriptionManagerRP *dst, _wsnt__SubscriptionManagerRP *src) (use soapcpp2 -Ed)
struct _wsnt__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Filter.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    struct wsnt__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
/// struct _wsnt__Notify operations:
/// - soap_default__wsnt__Notify(soap*, _wsnt__Notify*) reset members to default
/// - int soap_read__wsnt__Notify(soap*, _wsnt__Notify*) deserialize from a source
/// - int soap_write__wsnt__Notify(soap*, _wsnt__Notify*) serialize to a sink
/// - _wsnt__Notify* soap_dup__wsnt__Notify(soap*, _wsnt__Notify* dst, _wsnt__Notify *src) returns deep copy of _wsnt__Notify src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Notify(_wsnt__Notify*) deep deletes _wsnt__Notify data members, use only on dst after soap_dup__wsnt__Notify(NULL, _wsnt__Notify *dst, _wsnt__Notify *src) (use soapcpp2 -Ed)
struct _wsnt__Notify
{
/// Size of the dynamic array of struct wsnt__NotificationMessageHolderType* is 1..unbounded.
   $int                                  __sizeNotificationMessage      1;
/// Array struct wsnt__NotificationMessageHolderType* of size 1..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage            1;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
/// struct _wsnt__UseRaw operations:
/// - soap_default__wsnt__UseRaw(soap*, _wsnt__UseRaw*) reset members to default
/// - int soap_read__wsnt__UseRaw(soap*, _wsnt__UseRaw*) deserialize from a source
/// - int soap_write__wsnt__UseRaw(soap*, _wsnt__UseRaw*) serialize to a sink
/// - _wsnt__UseRaw* soap_dup__wsnt__UseRaw(soap*, _wsnt__UseRaw* dst, _wsnt__UseRaw *src) returns deep copy of _wsnt__UseRaw src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UseRaw(_wsnt__UseRaw*) deep deletes _wsnt__UseRaw data members, use only on dst after soap_dup__wsnt__UseRaw(NULL, _wsnt__UseRaw *dst, _wsnt__UseRaw *src) (use soapcpp2 -Ed)
struct _wsnt__UseRaw
{
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
/// struct _wsnt__Subscribe operations:
/// - soap_default__wsnt__Subscribe(soap*, _wsnt__Subscribe*) reset members to default
/// - int soap_read__wsnt__Subscribe(soap*, _wsnt__Subscribe*) deserialize from a source
/// - int soap_write__wsnt__Subscribe(soap*, _wsnt__Subscribe*) serialize to a sink
/// - _wsnt__Subscribe* soap_dup__wsnt__Subscribe(soap*, _wsnt__Subscribe* dst, _wsnt__Subscribe *src) returns deep copy of _wsnt__Subscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe(_wsnt__Subscribe*) deep deletes _wsnt__Subscribe data members, use only on dst after soap_dup__wsnt__Subscribe(NULL, _wsnt__Subscribe *dst, _wsnt__Subscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Subscribe
{
/// Element "ConsumerReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Optional element.
/// struct _wsnt__Subscribe_SubscriptionPolicy operations:
/// - soap_default__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy*) reset members to default
/// - int soap_read__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy*) serialize to a sink
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_dup__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy* dst, _wsnt__Subscribe_SubscriptionPolicy *src) returns deep copy of _wsnt__Subscribe_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe_SubscriptionPolicy(_wsnt__Subscribe_SubscriptionPolicy*) deep deletes _wsnt__Subscribe_SubscriptionPolicy data members, use only on dst after soap_dup__wsnt__Subscribe_SubscriptionPolicy(NULL, _wsnt__Subscribe_SubscriptionPolicy *dst, _wsnt__Subscribe_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _wsnt__Subscribe_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
/// struct _wsnt__SubscribeResponse operations:
/// - soap_default__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse*) reset members to default
/// - int soap_read__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse*) serialize to a sink
/// - _wsnt__SubscribeResponse* soap_dup__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse* dst, _wsnt__SubscribeResponse *src) returns deep copy of _wsnt__SubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeResponse(_wsnt__SubscribeResponse*) deep deletes _wsnt__SubscribeResponse data members, use only on dst after soap_dup__wsnt__SubscribeResponse(NULL, _wsnt__SubscribeResponse *dst, _wsnt__SubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__SubscribeResponse
{
/// Element "SubscriptionReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
/// struct _wsnt__GetCurrentMessage operations:
/// - soap_default__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage*) reset members to default
/// - int soap_read__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage*) serialize to a sink
/// - _wsnt__GetCurrentMessage* soap_dup__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage* dst, _wsnt__GetCurrentMessage *src) returns deep copy of _wsnt__GetCurrentMessage src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessage(_wsnt__GetCurrentMessage*) deep deletes _wsnt__GetCurrentMessage data members, use only on dst after soap_dup__wsnt__GetCurrentMessage(NULL, _wsnt__GetCurrentMessage *dst, _wsnt__GetCurrentMessage *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessage
{
/// Element "Topic" of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct wsnt__TopicExpressionType*    Topic                          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
/// struct _wsnt__GetCurrentMessageResponse operations:
/// - soap_default__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse*) reset members to default
/// - int soap_read__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse*) serialize to a sink
/// - _wsnt__GetCurrentMessageResponse* soap_dup__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse* dst, _wsnt__GetCurrentMessageResponse *src) returns deep copy of _wsnt__GetCurrentMessageResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessageResponse(_wsnt__GetCurrentMessageResponse*) deep deletes _wsnt__GetCurrentMessageResponse data members, use only on dst after soap_dup__wsnt__GetCurrentMessageResponse(NULL, _wsnt__GetCurrentMessageResponse *dst, _wsnt__GetCurrentMessageResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessageResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
/// struct _wsnt__GetMessages operations:
/// - soap_default__wsnt__GetMessages(soap*, _wsnt__GetMessages*) reset members to default
/// - int soap_read__wsnt__GetMessages(soap*, _wsnt__GetMessages*) deserialize from a source
/// - int soap_write__wsnt__GetMessages(soap*, _wsnt__GetMessages*) serialize to a sink
/// - _wsnt__GetMessages* soap_dup__wsnt__GetMessages(soap*, _wsnt__GetMessages* dst, _wsnt__GetMessages *src) returns deep copy of _wsnt__GetMessages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessages(_wsnt__GetMessages*) deep deletes _wsnt__GetMessages data members, use only on dst after soap_dup__wsnt__GetMessages(NULL, _wsnt__GetMessages *dst, _wsnt__GetMessages *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessages
{
/// Element "MaximumNumber" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaximumNumber                  0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
/// struct _wsnt__GetMessagesResponse operations:
/// - soap_default__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse*) reset members to default
/// - int soap_read__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse*) deserialize from a source
/// - int soap_write__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse*) serialize to a sink
/// - _wsnt__GetMessagesResponse* soap_dup__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse* dst, _wsnt__GetMessagesResponse *src) returns deep copy of _wsnt__GetMessagesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessagesResponse(_wsnt__GetMessagesResponse*) deep deletes _wsnt__GetMessagesResponse data members, use only on dst after soap_dup__wsnt__GetMessagesResponse(NULL, _wsnt__GetMessagesResponse *dst, _wsnt__GetMessagesResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessagesResponse
{
/// Size of the dynamic array of struct wsnt__NotificationMessageHolderType* is 0..unbounded.
   $int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage            0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
/// struct _wsnt__DestroyPullPoint operations:
/// - soap_default__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint*) reset members to default
/// - int soap_read__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint*) serialize to a sink
/// - _wsnt__DestroyPullPoint* soap_dup__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint* dst, _wsnt__DestroyPullPoint *src) returns deep copy of _wsnt__DestroyPullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPoint(_wsnt__DestroyPullPoint*) deep deletes _wsnt__DestroyPullPoint data members, use only on dst after soap_dup__wsnt__DestroyPullPoint(NULL, _wsnt__DestroyPullPoint *dst, _wsnt__DestroyPullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPoint
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
/// struct _wsnt__DestroyPullPointResponse operations:
/// - soap_default__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse*) reset members to default
/// - int soap_read__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse*) serialize to a sink
/// - _wsnt__DestroyPullPointResponse* soap_dup__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse* dst, _wsnt__DestroyPullPointResponse *src) returns deep copy of _wsnt__DestroyPullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPointResponse(_wsnt__DestroyPullPointResponse*) deep deletes _wsnt__DestroyPullPointResponse data members, use only on dst after soap_dup__wsnt__DestroyPullPointResponse(NULL, _wsnt__DestroyPullPointResponse *dst, _wsnt__DestroyPullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPointResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
/// struct _wsnt__CreatePullPoint operations:
/// - soap_default__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint*) reset members to default
/// - int soap_read__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint*) serialize to a sink
/// - _wsnt__CreatePullPoint* soap_dup__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint* dst, _wsnt__CreatePullPoint *src) returns deep copy of _wsnt__CreatePullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPoint(_wsnt__CreatePullPoint*) deep deletes _wsnt__CreatePullPoint data members, use only on dst after soap_dup__wsnt__CreatePullPoint(NULL, _wsnt__CreatePullPoint *dst, _wsnt__CreatePullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPoint
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
/// struct _wsnt__CreatePullPointResponse operations:
/// - soap_default__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse*) reset members to default
/// - int soap_read__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse*) serialize to a sink
/// - _wsnt__CreatePullPointResponse* soap_dup__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse* dst, _wsnt__CreatePullPointResponse *src) returns deep copy of _wsnt__CreatePullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPointResponse(_wsnt__CreatePullPointResponse*) deep deletes _wsnt__CreatePullPointResponse data members, use only on dst after soap_dup__wsnt__CreatePullPointResponse(NULL, _wsnt__CreatePullPointResponse *dst, _wsnt__CreatePullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPointResponse
{
/// Element "PullPoint" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
/// struct _wsnt__Renew operations:
/// - soap_default__wsnt__Renew(soap*, _wsnt__Renew*) reset members to default
/// - int soap_read__wsnt__Renew(soap*, _wsnt__Renew*) deserialize from a source
/// - int soap_write__wsnt__Renew(soap*, _wsnt__Renew*) serialize to a sink
/// - _wsnt__Renew* soap_dup__wsnt__Renew(soap*, _wsnt__Renew* dst, _wsnt__Renew *src) returns deep copy of _wsnt__Renew src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Renew(_wsnt__Renew*) deep deletes _wsnt__Renew data members, use only on dst after soap_dup__wsnt__Renew(NULL, _wsnt__Renew *dst, _wsnt__Renew *src) (use soapcpp2 -Ed)
struct _wsnt__Renew
{
/// Element "TerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     TerminationTime                1;	///< Optional (xsi:nil when NULL) element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
/// struct _wsnt__RenewResponse operations:
/// - soap_default__wsnt__RenewResponse(soap*, _wsnt__RenewResponse*) reset members to default
/// - int soap_read__wsnt__RenewResponse(soap*, _wsnt__RenewResponse*) deserialize from a source
/// - int soap_write__wsnt__RenewResponse(soap*, _wsnt__RenewResponse*) serialize to a sink
/// - _wsnt__RenewResponse* soap_dup__wsnt__RenewResponse(soap*, _wsnt__RenewResponse* dst, _wsnt__RenewResponse *src) returns deep copy of _wsnt__RenewResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__RenewResponse(_wsnt__RenewResponse*) deep deletes _wsnt__RenewResponse data members, use only on dst after soap_dup__wsnt__RenewResponse(NULL, _wsnt__RenewResponse *dst, _wsnt__RenewResponse *src) (use soapcpp2 -Ed)
struct _wsnt__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Optional (xsi:nil when NULL) element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
/// struct _wsnt__Unsubscribe operations:
/// - soap_default__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe*) reset members to default
/// - int soap_read__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe*) deserialize from a source
/// - int soap_write__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe*) serialize to a sink
/// - _wsnt__Unsubscribe* soap_dup__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe* dst, _wsnt__Unsubscribe *src) returns deep copy of _wsnt__Unsubscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Unsubscribe(_wsnt__Unsubscribe*) deep deletes _wsnt__Unsubscribe data members, use only on dst after soap_dup__wsnt__Unsubscribe(NULL, _wsnt__Unsubscribe *dst, _wsnt__Unsubscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Unsubscribe
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
/// struct _wsnt__UnsubscribeResponse operations:
/// - soap_default__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse*) reset members to default
/// - int soap_read__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse*) serialize to a sink
/// - _wsnt__UnsubscribeResponse* soap_dup__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse* dst, _wsnt__UnsubscribeResponse *src) returns deep copy of _wsnt__UnsubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsubscribeResponse(_wsnt__UnsubscribeResponse*) deep deletes _wsnt__UnsubscribeResponse data members, use only on dst after soap_dup__wsnt__UnsubscribeResponse(NULL, _wsnt__UnsubscribeResponse *dst, _wsnt__UnsubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__UnsubscribeResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
/// struct _wsnt__PauseSubscription operations:
/// - soap_default__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription*) reset members to default
/// - int soap_read__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription*) serialize to a sink
/// - _wsnt__PauseSubscription* soap_dup__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription* dst, _wsnt__PauseSubscription *src) returns deep copy of _wsnt__PauseSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscription(_wsnt__PauseSubscription*) deep deletes _wsnt__PauseSubscription data members, use only on dst after soap_dup__wsnt__PauseSubscription(NULL, _wsnt__PauseSubscription *dst, _wsnt__PauseSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscription
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
/// struct _wsnt__PauseSubscriptionResponse operations:
/// - soap_default__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse*) reset members to default
/// - int soap_read__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse*) serialize to a sink
/// - _wsnt__PauseSubscriptionResponse* soap_dup__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse* dst, _wsnt__PauseSubscriptionResponse *src) returns deep copy of _wsnt__PauseSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscriptionResponse(_wsnt__PauseSubscriptionResponse*) deep deletes _wsnt__PauseSubscriptionResponse data members, use only on dst after soap_dup__wsnt__PauseSubscriptionResponse(NULL, _wsnt__PauseSubscriptionResponse *dst, _wsnt__PauseSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscriptionResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
/// struct _wsnt__ResumeSubscription operations:
/// - soap_default__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription*) reset members to default
/// - int soap_read__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription*) serialize to a sink
/// - _wsnt__ResumeSubscription* soap_dup__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription* dst, _wsnt__ResumeSubscription *src) returns deep copy of _wsnt__ResumeSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscription(_wsnt__ResumeSubscription*) deep deletes _wsnt__ResumeSubscription data members, use only on dst after soap_dup__wsnt__ResumeSubscription(NULL, _wsnt__ResumeSubscription *dst, _wsnt__ResumeSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscription
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
/// struct _wsnt__ResumeSubscriptionResponse operations:
/// - soap_default__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse*) reset members to default
/// - int soap_read__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse*) serialize to a sink
/// - _wsnt__ResumeSubscriptionResponse* soap_dup__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse* dst, _wsnt__ResumeSubscriptionResponse *src) returns deep copy of _wsnt__ResumeSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscriptionResponse(_wsnt__ResumeSubscriptionResponse*) deep deletes _wsnt__ResumeSubscriptionResponse data members, use only on dst after soap_dup__wsnt__ResumeSubscriptionResponse(NULL, _wsnt__ResumeSubscriptionResponse *dst, _wsnt__ResumeSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscriptionResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
/// struct wsrfbf__BaseFaultType operations:
/// - soap_default_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType*) reset members to default
/// - int soap_read_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType*) deserialize from a source
/// - int soap_write_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType*) serialize to a sink
/// - wsrfbf__BaseFaultType* soap_dup_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType* dst, wsrfbf__BaseFaultType *src) returns deep copy of wsrfbf__BaseFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfbf__BaseFaultType(wsrfbf__BaseFaultType*) deep deletes wsrfbf__BaseFaultType data members, use only on dst after soap_dup_wsrfbf__BaseFaultType(NULL, wsrfbf__BaseFaultType *dst, wsrfbf__BaseFaultType *src) (use soapcpp2 -Ed)
struct wsrfbf__BaseFaultType
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// struct _wsrfbf__BaseFaultType_ErrorCode operations:
/// - soap_default__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode*) serialize to a sink
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_dup__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode* dst, _wsrfbf__BaseFaultType_ErrorCode *src) returns deep copy of _wsrfbf__BaseFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_ErrorCode(_wsrfbf__BaseFaultType_ErrorCode*) deep deletes _wsrfbf__BaseFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_ErrorCode(NULL, _wsrfbf__BaseFaultType_ErrorCode *dst, _wsrfbf__BaseFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsrfbf__BaseFaultType_Description operations:
/// - soap_default__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description*) reset members to default
/// - int soap_read__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description*) serialize to a sink
/// - _wsrfbf__BaseFaultType_Description* soap_dup__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description* dst, _wsrfbf__BaseFaultType_Description *src) returns deep copy of _wsrfbf__BaseFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_Description(_wsrfbf__BaseFaultType_Description*) deep deletes _wsrfbf__BaseFaultType_Description data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_Description(NULL, _wsrfbf__BaseFaultType_Description *dst, _wsrfbf__BaseFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
/// struct _wsrfbf__BaseFaultType_FaultCause operations:
/// - soap_default__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause*) reset members to default
/// - int soap_read__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause*) serialize to a sink
/// - _wsrfbf__BaseFaultType_FaultCause* soap_dup__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause* dst, _wsrfbf__BaseFaultType_FaultCause *src) returns deep copy of _wsrfbf__BaseFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_FaultCause(_wsrfbf__BaseFaultType_FaultCause*) deep deletes _wsrfbf__BaseFaultType_FaultCause data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_FaultCause(NULL, _wsrfbf__BaseFaultType_FaultCause *dst, _wsrfbf__BaseFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
/// struct wstop__Documentation operations:
/// - soap_default_wstop__Documentation(soap*, wstop__Documentation*) reset members to default
/// - int soap_read_wstop__Documentation(soap*, wstop__Documentation*) deserialize from a source
/// - int soap_write_wstop__Documentation(soap*, wstop__Documentation*) serialize to a sink
/// - wstop__Documentation* soap_dup_wstop__Documentation(soap*, wstop__Documentation* dst, wstop__Documentation *src) returns deep copy of wstop__Documentation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__Documentation(wstop__Documentation*) deep deletes wstop__Documentation data members, use only on dst after soap_dup_wstop__Documentation(NULL, wstop__Documentation *dst, wstop__Documentation *src) (use soapcpp2 -Ed)
struct wstop__Documentation
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
/// struct wstop__ExtensibleDocumented operations:
/// - soap_default_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented*) reset members to default
/// - int soap_read_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented*) deserialize from a source
/// - int soap_write_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented*) serialize to a sink
/// - wstop__ExtensibleDocumented* soap_dup_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented* dst, wstop__ExtensibleDocumented *src) returns deep copy of wstop__ExtensibleDocumented src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__ExtensibleDocumented(wstop__ExtensibleDocumented*) deep deletes wstop__ExtensibleDocumented data members, use only on dst after soap_dup_wstop__ExtensibleDocumented(NULL, wstop__ExtensibleDocumented *dst, wstop__ExtensibleDocumented *src) (use soapcpp2 -Ed)
struct wstop__ExtensibleDocumented
{
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
/// struct wstop__QueryExpressionType operations:
/// - soap_default_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType*) reset members to default
/// - int soap_read_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType*) deserialize from a source
/// - int soap_write_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType*) serialize to a sink
/// - wstop__QueryExpressionType* soap_dup_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType* dst, wstop__QueryExpressionType *src) returns deep copy of wstop__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__QueryExpressionType(wstop__QueryExpressionType*) deep deletes wstop__QueryExpressionType data members, use only on dst after soap_dup_wstop__QueryExpressionType(NULL, wstop__QueryExpressionType *dst, wstop__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wstop__QueryExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/media/wsdl":Capabilities2 is a complexType.
///
/// struct tr2__Capabilities2 operations:
/// - soap_default_tr2__Capabilities2(soap*, tr2__Capabilities2*) reset members to default
/// - int soap_read_tr2__Capabilities2(soap*, tr2__Capabilities2*) deserialize from a source
/// - int soap_write_tr2__Capabilities2(soap*, tr2__Capabilities2*) serialize to a sink
/// - tr2__Capabilities2* soap_dup_tr2__Capabilities2(soap*, tr2__Capabilities2* dst, tr2__Capabilities2 *src) returns deep copy of tr2__Capabilities2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__Capabilities2(tr2__Capabilities2*) deep deletes tr2__Capabilities2 data members, use only on dst after soap_dup_tr2__Capabilities2(NULL, tr2__Capabilities2 *dst, tr2__Capabilities2 *src) (use soapcpp2 -Ed)
struct tr2__Capabilities2
{
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver20/media/wsdl":ProfileCapabilities.
    struct tr2__ProfileCapabilities*     ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver20/media/wsdl":StreamingCapabilities.
    struct tr2__StreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "SnapshotUri" of XSD type xs:boolean.
   @enum xsd__boolean*                   SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "Rotation" of XSD type xs:boolean.
   @enum xsd__boolean*                   Rotation                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for changing video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "VideoSourceMode" of XSD type xs:boolean.
   @enum xsd__boolean*                   VideoSourceMode                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if OSD is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "OSD" of XSD type xs:boolean.
   @enum xsd__boolean*                   OSD                            0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":ProfileCapabilities is a complexType.
///
/// struct tr2__ProfileCapabilities operations:
/// - soap_default_tr2__ProfileCapabilities(soap*, tr2__ProfileCapabilities*) reset members to default
/// - int soap_read_tr2__ProfileCapabilities(soap*, tr2__ProfileCapabilities*) deserialize from a source
/// - int soap_write_tr2__ProfileCapabilities(soap*, tr2__ProfileCapabilities*) serialize to a sink
/// - tr2__ProfileCapabilities* soap_dup_tr2__ProfileCapabilities(soap*, tr2__ProfileCapabilities* dst, tr2__ProfileCapabilities *src) returns deep copy of tr2__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__ProfileCapabilities(tr2__ProfileCapabilities*) deep deletes tr2__ProfileCapabilities data members, use only on dst after soap_dup_tr2__ProfileCapabilities(NULL, tr2__ProfileCapabilities *dst, tr2__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct tr2__ProfileCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfProfiles" of XSD type xs:int.
   @int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Enumerates the configurations supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "ConfigurationsSupported" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   ConfigurationsSupported        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":StreamingCapabilities is a complexType.
///
/// struct tr2__StreamingCapabilities operations:
/// - soap_default_tr2__StreamingCapabilities(soap*, tr2__StreamingCapabilities*) reset members to default
/// - int soap_read_tr2__StreamingCapabilities(soap*, tr2__StreamingCapabilities*) deserialize from a source
/// - int soap_write_tr2__StreamingCapabilities(soap*, tr2__StreamingCapabilities*) serialize to a sink
/// - tr2__StreamingCapabilities* soap_dup_tr2__StreamingCapabilities(soap*, tr2__StreamingCapabilities* dst, tr2__StreamingCapabilities *src) returns deep copy of tr2__StreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__StreamingCapabilities(tr2__StreamingCapabilities*) deep deletes tr2__StreamingCapabilities data members, use only on dst after soap_dup_tr2__StreamingCapabilities(NULL, tr2__StreamingCapabilities *dst, tr2__StreamingCapabilities *src) (use soapcpp2 -Ed)
struct tr2__StreamingCapabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates support for live media streaming via RTSP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTSPStreaming" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTSPStreaming                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTPMulticast" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_RTSP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
/// Attribute "NonAggregateControl" of XSD type xs:boolean.
   @enum xsd__boolean*                   NonAggregateControl            0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":ConfigurationRef is a complexType.
///
/// struct tr2__ConfigurationRef operations:
/// - soap_default_tr2__ConfigurationRef(soap*, tr2__ConfigurationRef*) reset members to default
/// - int soap_read_tr2__ConfigurationRef(soap*, tr2__ConfigurationRef*) deserialize from a source
/// - int soap_write_tr2__ConfigurationRef(soap*, tr2__ConfigurationRef*) serialize to a sink
/// - tr2__ConfigurationRef* soap_dup_tr2__ConfigurationRef(soap*, tr2__ConfigurationRef* dst, tr2__ConfigurationRef *src) returns deep copy of tr2__ConfigurationRef src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__ConfigurationRef(tr2__ConfigurationRef*) deep deletes tr2__ConfigurationRef data members, use only on dst after soap_dup_tr2__ConfigurationRef(NULL, tr2__ConfigurationRef *dst, tr2__ConfigurationRef *src) (use soapcpp2 -Ed)
struct tr2__ConfigurationRef
{
/// <PRE><BLOCKQUOTE>
///   Type of the configuration as defined by tr2:ConfigurationEnumeration.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference token of an existing configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":ConfigurationSet is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media configurations.
/// </BLOCKQUOTE></PRE>
/// struct tr2__ConfigurationSet operations:
/// - soap_default_tr2__ConfigurationSet(soap*, tr2__ConfigurationSet*) reset members to default
/// - int soap_read_tr2__ConfigurationSet(soap*, tr2__ConfigurationSet*) deserialize from a source
/// - int soap_write_tr2__ConfigurationSet(soap*, tr2__ConfigurationSet*) serialize to a sink
/// - tr2__ConfigurationSet* soap_dup_tr2__ConfigurationSet(soap*, tr2__ConfigurationSet* dst, tr2__ConfigurationSet *src) returns deep copy of tr2__ConfigurationSet src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__ConfigurationSet(tr2__ConfigurationSet*) deep deletes tr2__ConfigurationSet data members, use only on dst after soap_dup_tr2__ConfigurationSet(NULL, tr2__ConfigurationSet *dst, tr2__ConfigurationSet *src) (use soapcpp2 -Ed)
struct tr2__ConfigurationSet
{
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSource" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSource                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSource" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSource                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
/// Element "VideoEncoder" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration.
    struct tt__VideoEncoder2Configuration*  VideoEncoder                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoder" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration.
    struct tt__AudioEncoder2Configuration*  AudioEncoder                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
    struct tt__ConfigurationEntity*      Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZ                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
/// Element "Metadata" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Metadata                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutput" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutput                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecoder" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  AudioDecoder                   0;	///< Optional element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":MediaProfile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations.
/// </BLOCKQUOTE></PRE>
/// struct tr2__MediaProfile operations:
/// - soap_default_tr2__MediaProfile(soap*, tr2__MediaProfile*) reset members to default
/// - int soap_read_tr2__MediaProfile(soap*, tr2__MediaProfile*) deserialize from a source
/// - int soap_write_tr2__MediaProfile(soap*, tr2__MediaProfile*) serialize to a sink
/// - tr2__MediaProfile* soap_dup_tr2__MediaProfile(soap*, tr2__MediaProfile* dst, tr2__MediaProfile *src) returns deep copy of tr2__MediaProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__MediaProfile(tr2__MediaProfile*) deep deletes tr2__MediaProfile data members, use only on dst after soap_dup_tr2__MediaProfile(NULL, tr2__MediaProfile *dst, tr2__MediaProfile *src) (use soapcpp2 -Ed)
struct tr2__MediaProfile
{
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The configurations assigned to the profile.
/// </BLOCKQUOTE></PRE>
/// Element "Configurations" of XSD type "http://www.onvif.org/ver20/media/wsdl":ConfigurationSet.
    struct tr2__ConfigurationSet*        Configurations                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "fixed" of XSD type xs:boolean.
   @enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":GetConfiguration is a complexType.
///
/// struct tr2__GetConfiguration operations:
/// - soap_default_tr2__GetConfiguration(soap*, tr2__GetConfiguration*) reset members to default
/// - int soap_read_tr2__GetConfiguration(soap*, tr2__GetConfiguration*) deserialize from a source
/// - int soap_write_tr2__GetConfiguration(soap*, tr2__GetConfiguration*) serialize to a sink
/// - tr2__GetConfiguration* soap_dup_tr2__GetConfiguration(soap*, tr2__GetConfiguration* dst, tr2__GetConfiguration *src) returns deep copy of tr2__GetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__GetConfiguration(tr2__GetConfiguration*) deep deletes tr2__GetConfiguration data members, use only on dst after soap_dup_tr2__GetConfiguration(NULL, tr2__GetConfiguration *dst, tr2__GetConfiguration *src) (use soapcpp2 -Ed)
struct tr2__GetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Token of the requested configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreaming is a complexType.
///
/// struct tr2__StartStopMulticastStreaming operations:
/// - soap_default_tr2__StartStopMulticastStreaming(soap*, tr2__StartStopMulticastStreaming*) reset members to default
/// - int soap_read_tr2__StartStopMulticastStreaming(soap*, tr2__StartStopMulticastStreaming*) deserialize from a source
/// - int soap_write_tr2__StartStopMulticastStreaming(soap*, tr2__StartStopMulticastStreaming*) serialize to a sink
/// - tr2__StartStopMulticastStreaming* soap_dup_tr2__StartStopMulticastStreaming(soap*, tr2__StartStopMulticastStreaming* dst, tr2__StartStopMulticastStreaming *src) returns deep copy of tr2__StartStopMulticastStreaming src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__StartStopMulticastStreaming(tr2__StartStopMulticastStreaming*) deep deletes tr2__StartStopMulticastStreaming data members, use only on dst after soap_dup_tr2__StartStopMulticastStreaming(NULL, tr2__StartStopMulticastStreaming *dst, tr2__StartStopMulticastStreaming *src) (use soapcpp2 -Ed)
struct tr2__StartStopMulticastStreaming
{
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":VideoSourceMode is a complexType.
///
/// struct tr2__VideoSourceMode operations:
/// - soap_default_tr2__VideoSourceMode(soap*, tr2__VideoSourceMode*) reset members to default
/// - int soap_read_tr2__VideoSourceMode(soap*, tr2__VideoSourceMode*) deserialize from a source
/// - int soap_write_tr2__VideoSourceMode(soap*, tr2__VideoSourceMode*) serialize to a sink
/// - tr2__VideoSourceMode* soap_dup_tr2__VideoSourceMode(soap*, tr2__VideoSourceMode* dst, tr2__VideoSourceMode *src) returns deep copy of tr2__VideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__VideoSourceMode(tr2__VideoSourceMode*) deep deletes tr2__VideoSourceMode data members, use only on dst after soap_dup_tr2__VideoSourceMode(NULL, tr2__VideoSourceMode *dst, tr2__VideoSourceMode *src) (use soapcpp2 -Ed)
struct tr2__VideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Max frame rate in frames per second for this video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "MaxFramerate" of XSD type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Max horizontal and vertical resolution for this video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "MaxResolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          MaxResolution                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
/// Element "Encodings" of XSD type "http://www.onvif.org/ver20/media/wsdl":EncodingTypes.
    tr2__EncodingTypes                   Encodings                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// </BLOCKQUOTE></PRE>
/// Element "Reboot" of XSD type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of this video source mode. This field should be described in English.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver20/media/wsdl":VideoSourceModeExtension.
    struct tr2__VideoSourceModeExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicate token for video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// </BLOCKQUOTE></PRE>
/// Attribute "Enabled" of XSD type xs:boolean.
   @enum xsd__boolean*                   Enabled                        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver20/media/wsdl":VideoSourceModeExtension is a complexType.
///
/// struct tr2__VideoSourceModeExtension operations:
/// - soap_default_tr2__VideoSourceModeExtension(soap*, tr2__VideoSourceModeExtension*) reset members to default
/// - int soap_read_tr2__VideoSourceModeExtension(soap*, tr2__VideoSourceModeExtension*) deserialize from a source
/// - int soap_write_tr2__VideoSourceModeExtension(soap*, tr2__VideoSourceModeExtension*) serialize to a sink
/// - tr2__VideoSourceModeExtension* soap_dup_tr2__VideoSourceModeExtension(soap*, tr2__VideoSourceModeExtension* dst, tr2__VideoSourceModeExtension *src) returns deep copy of tr2__VideoSourceModeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tr2__VideoSourceModeExtension(tr2__VideoSourceModeExtension*) deep deletes tr2__VideoSourceModeExtension data members, use only on dst after soap_dup_tr2__VideoSourceModeExtension(NULL, tr2__VideoSourceModeExtension *dst, tr2__VideoSourceModeExtension *src) (use soapcpp2 -Ed)
struct tr2__VideoSourceModeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilities is a complexType.
///
/// struct _tr2__GetServiceCapabilities operations:
/// - soap_default__tr2__GetServiceCapabilities(soap*, _tr2__GetServiceCapabilities*) reset members to default
/// - int soap_read__tr2__GetServiceCapabilities(soap*, _tr2__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tr2__GetServiceCapabilities(soap*, _tr2__GetServiceCapabilities*) serialize to a sink
/// - _tr2__GetServiceCapabilities* soap_dup__tr2__GetServiceCapabilities(soap*, _tr2__GetServiceCapabilities* dst, _tr2__GetServiceCapabilities *src) returns deep copy of _tr2__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetServiceCapabilities(_tr2__GetServiceCapabilities*) deep deletes _tr2__GetServiceCapabilities data members, use only on dst after soap_dup__tr2__GetServiceCapabilities(NULL, _tr2__GetServiceCapabilities *dst, _tr2__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tr2__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilitiesResponse2
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetServiceCapabilitiesResponse2 is a complexType.
///
/// struct _tr2__GetServiceCapabilitiesResponse2 operations:
/// - soap_default__tr2__GetServiceCapabilitiesResponse2(soap*, _tr2__GetServiceCapabilitiesResponse2*) reset members to default
/// - int soap_read__tr2__GetServiceCapabilitiesResponse2(soap*, _tr2__GetServiceCapabilitiesResponse2*) deserialize from a source
/// - int soap_write__tr2__GetServiceCapabilitiesResponse2(soap*, _tr2__GetServiceCapabilitiesResponse2*) serialize to a sink
/// - _tr2__GetServiceCapabilitiesResponse2* soap_dup__tr2__GetServiceCapabilitiesResponse2(soap*, _tr2__GetServiceCapabilitiesResponse2* dst, _tr2__GetServiceCapabilitiesResponse2 *src) returns deep copy of _tr2__GetServiceCapabilitiesResponse2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetServiceCapabilitiesResponse2(_tr2__GetServiceCapabilitiesResponse2*) deep deletes _tr2__GetServiceCapabilitiesResponse2 data members, use only on dst after soap_dup__tr2__GetServiceCapabilitiesResponse2(NULL, _tr2__GetServiceCapabilitiesResponse2 *dst, _tr2__GetServiceCapabilitiesResponse2 *src) (use soapcpp2 -Ed)
struct _tr2__GetServiceCapabilitiesResponse2
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver20/media/wsdl":Capabilities2.
    struct tr2__Capabilities2*           Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateProfile is a complexType.
///
/// struct _tr2__CreateProfile operations:
/// - soap_default__tr2__CreateProfile(soap*, _tr2__CreateProfile*) reset members to default
/// - int soap_read__tr2__CreateProfile(soap*, _tr2__CreateProfile*) deserialize from a source
/// - int soap_write__tr2__CreateProfile(soap*, _tr2__CreateProfile*) serialize to a sink
/// - _tr2__CreateProfile* soap_dup__tr2__CreateProfile(soap*, _tr2__CreateProfile* dst, _tr2__CreateProfile *src) returns deep copy of _tr2__CreateProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__CreateProfile(_tr2__CreateProfile*) deep deletes _tr2__CreateProfile data members, use only on dst after soap_dup__tr2__CreateProfile(NULL, _tr2__CreateProfile *dst, _tr2__CreateProfile *src) (use soapcpp2 -Ed)
struct _tr2__CreateProfile
{
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional set of configurations to be assigned to the profile.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tr2__ConfigurationRef* is 0..unbounded.
   $int                                  __sizeConfiguration            0;
/// Array struct tr2__ConfigurationRef* of size 0..unbounded.
    struct tr2__ConfigurationRef*        Configuration                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateProfileResponse is a complexType.
///
/// struct _tr2__CreateProfileResponse operations:
/// - soap_default__tr2__CreateProfileResponse(soap*, _tr2__CreateProfileResponse*) reset members to default
/// - int soap_read__tr2__CreateProfileResponse(soap*, _tr2__CreateProfileResponse*) deserialize from a source
/// - int soap_write__tr2__CreateProfileResponse(soap*, _tr2__CreateProfileResponse*) serialize to a sink
/// - _tr2__CreateProfileResponse* soap_dup__tr2__CreateProfileResponse(soap*, _tr2__CreateProfileResponse* dst, _tr2__CreateProfileResponse *src) returns deep copy of _tr2__CreateProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__CreateProfileResponse(_tr2__CreateProfileResponse*) deep deletes _tr2__CreateProfileResponse data members, use only on dst after soap_dup__tr2__CreateProfileResponse(NULL, _tr2__CreateProfileResponse *dst, _tr2__CreateProfileResponse *src) (use soapcpp2 -Ed)
struct _tr2__CreateProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   Token assigned by the device for the newly created profile.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetProfiles is a complexType.
///
/// struct _tr2__GetProfiles operations:
/// - soap_default__tr2__GetProfiles(soap*, _tr2__GetProfiles*) reset members to default
/// - int soap_read__tr2__GetProfiles(soap*, _tr2__GetProfiles*) deserialize from a source
/// - int soap_write__tr2__GetProfiles(soap*, _tr2__GetProfiles*) serialize to a sink
/// - _tr2__GetProfiles* soap_dup__tr2__GetProfiles(soap*, _tr2__GetProfiles* dst, _tr2__GetProfiles *src) returns deep copy of _tr2__GetProfiles src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetProfiles(_tr2__GetProfiles*) deep deletes _tr2__GetProfiles data members, use only on dst after soap_dup__tr2__GetProfiles(NULL, _tr2__GetProfiles *dst, _tr2__GetProfiles *src) (use soapcpp2 -Ed)
struct _tr2__GetProfiles
{
/// <PRE><BLOCKQUOTE>
///   Optional token of the requested profile.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The types shall be provided as defined by tr2:ConfigurationEnumeration.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeType                     0;
/// Array char** of size 0..unbounded.
    char**                               Type                           0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetProfilesResponse is a complexType.
///
/// struct _tr2__GetProfilesResponse operations:
/// - soap_default__tr2__GetProfilesResponse(soap*, _tr2__GetProfilesResponse*) reset members to default
/// - int soap_read__tr2__GetProfilesResponse(soap*, _tr2__GetProfilesResponse*) deserialize from a source
/// - int soap_write__tr2__GetProfilesResponse(soap*, _tr2__GetProfilesResponse*) serialize to a sink
/// - _tr2__GetProfilesResponse* soap_dup__tr2__GetProfilesResponse(soap*, _tr2__GetProfilesResponse* dst, _tr2__GetProfilesResponse *src) returns deep copy of _tr2__GetProfilesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetProfilesResponse(_tr2__GetProfilesResponse*) deep deletes _tr2__GetProfilesResponse data members, use only on dst after soap_dup__tr2__GetProfilesResponse(NULL, _tr2__GetProfilesResponse *dst, _tr2__GetProfilesResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   Lists all profiles that exist in the media service. The response provides the requested types of Configurations as far as available. If a profile doesn't contain a type no error shall be provided.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tr2__MediaProfile* is 0..unbounded.
   $int                                  __sizeProfiles                 0;
/// Array struct tr2__MediaProfile* of size 0..unbounded.
    struct tr2__MediaProfile*            Profiles                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":AddConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":AddConfiguration is a complexType.
///
/// struct _tr2__AddConfiguration operations:
/// - soap_default__tr2__AddConfiguration(soap*, _tr2__AddConfiguration*) reset members to default
/// - int soap_read__tr2__AddConfiguration(soap*, _tr2__AddConfiguration*) deserialize from a source
/// - int soap_write__tr2__AddConfiguration(soap*, _tr2__AddConfiguration*) serialize to a sink
/// - _tr2__AddConfiguration* soap_dup__tr2__AddConfiguration(soap*, _tr2__AddConfiguration* dst, _tr2__AddConfiguration *src) returns deep copy of _tr2__AddConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__AddConfiguration(_tr2__AddConfiguration*) deep deletes _tr2__AddConfiguration data members, use only on dst after soap_dup__tr2__AddConfiguration(NULL, _tr2__AddConfiguration *dst, _tr2__AddConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__AddConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional item. If present updates the Name property of the profile.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of configurations to be added. The types shall be provided in the order defined by tr2:ConfigurationEnumeration.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tr2__ConfigurationRef* is 0..unbounded.
   $int                                  __sizeConfiguration            0;
/// Array struct tr2__ConfigurationRef* of size 0..unbounded.
    struct tr2__ConfigurationRef*        Configuration                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":AddConfigurationResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":AddConfigurationResponse is a complexType.
///
/// struct _tr2__AddConfigurationResponse operations:
/// - soap_default__tr2__AddConfigurationResponse(soap*, _tr2__AddConfigurationResponse*) reset members to default
/// - int soap_read__tr2__AddConfigurationResponse(soap*, _tr2__AddConfigurationResponse*) deserialize from a source
/// - int soap_write__tr2__AddConfigurationResponse(soap*, _tr2__AddConfigurationResponse*) serialize to a sink
/// - _tr2__AddConfigurationResponse* soap_dup__tr2__AddConfigurationResponse(soap*, _tr2__AddConfigurationResponse* dst, _tr2__AddConfigurationResponse *src) returns deep copy of _tr2__AddConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__AddConfigurationResponse(_tr2__AddConfigurationResponse*) deep deletes _tr2__AddConfigurationResponse data members, use only on dst after soap_dup__tr2__AddConfigurationResponse(NULL, _tr2__AddConfigurationResponse *dst, _tr2__AddConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tr2__AddConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":RemoveConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":RemoveConfiguration is a complexType.
///
/// struct _tr2__RemoveConfiguration operations:
/// - soap_default__tr2__RemoveConfiguration(soap*, _tr2__RemoveConfiguration*) reset members to default
/// - int soap_read__tr2__RemoveConfiguration(soap*, _tr2__RemoveConfiguration*) deserialize from a source
/// - int soap_write__tr2__RemoveConfiguration(soap*, _tr2__RemoveConfiguration*) serialize to a sink
/// - _tr2__RemoveConfiguration* soap_dup__tr2__RemoveConfiguration(soap*, _tr2__RemoveConfiguration* dst, _tr2__RemoveConfiguration *src) returns deep copy of _tr2__RemoveConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__RemoveConfiguration(_tr2__RemoveConfiguration*) deep deletes _tr2__RemoveConfiguration data members, use only on dst after soap_dup__tr2__RemoveConfiguration(NULL, _tr2__RemoveConfiguration *dst, _tr2__RemoveConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__RemoveConfiguration
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of configurations to be removed. The types shall be provided in the order defined by tr2:ConfigurationEnumeration.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tr2__ConfigurationRef* is 1..unbounded.
   $int                                  __sizeConfiguration            1;
/// Array struct tr2__ConfigurationRef* of size 1..unbounded.
    struct tr2__ConfigurationRef*        Configuration                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":RemoveConfigurationResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":RemoveConfigurationResponse is a complexType.
///
/// struct _tr2__RemoveConfigurationResponse operations:
/// - soap_default__tr2__RemoveConfigurationResponse(soap*, _tr2__RemoveConfigurationResponse*) reset members to default
/// - int soap_read__tr2__RemoveConfigurationResponse(soap*, _tr2__RemoveConfigurationResponse*) deserialize from a source
/// - int soap_write__tr2__RemoveConfigurationResponse(soap*, _tr2__RemoveConfigurationResponse*) serialize to a sink
/// - _tr2__RemoveConfigurationResponse* soap_dup__tr2__RemoveConfigurationResponse(soap*, _tr2__RemoveConfigurationResponse* dst, _tr2__RemoveConfigurationResponse *src) returns deep copy of _tr2__RemoveConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__RemoveConfigurationResponse(_tr2__RemoveConfigurationResponse*) deep deletes _tr2__RemoveConfigurationResponse data members, use only on dst after soap_dup__tr2__RemoveConfigurationResponse(NULL, _tr2__RemoveConfigurationResponse *dst, _tr2__RemoveConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tr2__RemoveConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver20/media/wsdl":DeleteProfile is a complexType.
///
/// struct _tr2__DeleteProfile operations:
/// - soap_default__tr2__DeleteProfile(soap*, _tr2__DeleteProfile*) reset members to default
/// - int soap_read__tr2__DeleteProfile(soap*, _tr2__DeleteProfile*) deserialize from a source
/// - int soap_write__tr2__DeleteProfile(soap*, _tr2__DeleteProfile*) serialize to a sink
/// - _tr2__DeleteProfile* soap_dup__tr2__DeleteProfile(soap*, _tr2__DeleteProfile* dst, _tr2__DeleteProfile *src) returns deep copy of _tr2__DeleteProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__DeleteProfile(_tr2__DeleteProfile*) deep deletes _tr2__DeleteProfile data members, use only on dst after soap_dup__tr2__DeleteProfile(NULL, _tr2__DeleteProfile *dst, _tr2__DeleteProfile *src) (use soapcpp2 -Ed)
struct _tr2__DeleteProfile
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":DeleteProfileResponse is a complexType.
///
/// struct _tr2__DeleteProfileResponse operations:
/// - soap_default__tr2__DeleteProfileResponse(soap*, _tr2__DeleteProfileResponse*) reset members to default
/// - int soap_read__tr2__DeleteProfileResponse(soap*, _tr2__DeleteProfileResponse*) deserialize from a source
/// - int soap_write__tr2__DeleteProfileResponse(soap*, _tr2__DeleteProfileResponse*) serialize to a sink
/// - _tr2__DeleteProfileResponse* soap_dup__tr2__DeleteProfileResponse(soap*, _tr2__DeleteProfileResponse* dst, _tr2__DeleteProfileResponse *src) returns deep copy of _tr2__DeleteProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__DeleteProfileResponse(_tr2__DeleteProfileResponse*) deep deletes _tr2__DeleteProfileResponse data members, use only on dst after soap_dup__tr2__DeleteProfileResponse(NULL, _tr2__DeleteProfileResponse *dst, _tr2__DeleteProfileResponse *src) (use soapcpp2 -Ed)
struct _tr2__DeleteProfileResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
/// struct _tr2__GetVideoEncoderConfigurationsResponse operations:
/// - soap_default__tr2__GetVideoEncoderConfigurationsResponse(soap*, _tr2__GetVideoEncoderConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetVideoEncoderConfigurationsResponse(soap*, _tr2__GetVideoEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetVideoEncoderConfigurationsResponse(soap*, _tr2__GetVideoEncoderConfigurationsResponse*) serialize to a sink
/// - _tr2__GetVideoEncoderConfigurationsResponse* soap_dup__tr2__GetVideoEncoderConfigurationsResponse(soap*, _tr2__GetVideoEncoderConfigurationsResponse* dst, _tr2__GetVideoEncoderConfigurationsResponse *src) returns deep copy of _tr2__GetVideoEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetVideoEncoderConfigurationsResponse(_tr2__GetVideoEncoderConfigurationsResponse*) deep deletes _tr2__GetVideoEncoderConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetVideoEncoderConfigurationsResponse(NULL, _tr2__GetVideoEncoderConfigurationsResponse *dst, _tr2__GetVideoEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetVideoEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoEncoder2Configuration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoEncoder2Configuration* of size 0..unbounded.
    struct tt__VideoEncoder2Configuration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
/// struct _tr2__GetVideoSourceConfigurationsResponse operations:
/// - soap_default__tr2__GetVideoSourceConfigurationsResponse(soap*, _tr2__GetVideoSourceConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetVideoSourceConfigurationsResponse(soap*, _tr2__GetVideoSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetVideoSourceConfigurationsResponse(soap*, _tr2__GetVideoSourceConfigurationsResponse*) serialize to a sink
/// - _tr2__GetVideoSourceConfigurationsResponse* soap_dup__tr2__GetVideoSourceConfigurationsResponse(soap*, _tr2__GetVideoSourceConfigurationsResponse* dst, _tr2__GetVideoSourceConfigurationsResponse *src) returns deep copy of _tr2__GetVideoSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetVideoSourceConfigurationsResponse(_tr2__GetVideoSourceConfigurationsResponse*) deep deletes _tr2__GetVideoSourceConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetVideoSourceConfigurationsResponse(NULL, _tr2__GetVideoSourceConfigurationsResponse *dst, _tr2__GetVideoSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetVideoSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoSourceConfiguration* of size 0..unbounded.
    struct tt__VideoSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
/// struct _tr2__GetAudioEncoderConfigurationsResponse operations:
/// - soap_default__tr2__GetAudioEncoderConfigurationsResponse(soap*, _tr2__GetAudioEncoderConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioEncoderConfigurationsResponse(soap*, _tr2__GetAudioEncoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioEncoderConfigurationsResponse(soap*, _tr2__GetAudioEncoderConfigurationsResponse*) serialize to a sink
/// - _tr2__GetAudioEncoderConfigurationsResponse* soap_dup__tr2__GetAudioEncoderConfigurationsResponse(soap*, _tr2__GetAudioEncoderConfigurationsResponse* dst, _tr2__GetAudioEncoderConfigurationsResponse *src) returns deep copy of _tr2__GetAudioEncoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioEncoderConfigurationsResponse(_tr2__GetAudioEncoderConfigurationsResponse*) deep deletes _tr2__GetAudioEncoderConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetAudioEncoderConfigurationsResponse(NULL, _tr2__GetAudioEncoderConfigurationsResponse *dst, _tr2__GetAudioEncoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioEncoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoder2Configuration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioEncoder2Configuration* of size 0..unbounded.
    struct tt__AudioEncoder2Configuration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
/// struct _tr2__GetAudioSourceConfigurationsResponse operations:
/// - soap_default__tr2__GetAudioSourceConfigurationsResponse(soap*, _tr2__GetAudioSourceConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioSourceConfigurationsResponse(soap*, _tr2__GetAudioSourceConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioSourceConfigurationsResponse(soap*, _tr2__GetAudioSourceConfigurationsResponse*) serialize to a sink
/// - _tr2__GetAudioSourceConfigurationsResponse* soap_dup__tr2__GetAudioSourceConfigurationsResponse(soap*, _tr2__GetAudioSourceConfigurationsResponse* dst, _tr2__GetAudioSourceConfigurationsResponse *src) returns deep copy of _tr2__GetAudioSourceConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioSourceConfigurationsResponse(_tr2__GetAudioSourceConfigurationsResponse*) deep deletes _tr2__GetAudioSourceConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetAudioSourceConfigurationsResponse(NULL, _tr2__GetAudioSourceConfigurationsResponse *dst, _tr2__GetAudioSourceConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioSourceConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioSourceConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioSourceConfiguration* of size 0..unbounded.
    struct tt__AudioSourceConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAnalyticsConfigurationsResponse is a complexType.
///
/// struct _tr2__GetAnalyticsConfigurationsResponse operations:
/// - soap_default__tr2__GetAnalyticsConfigurationsResponse(soap*, _tr2__GetAnalyticsConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetAnalyticsConfigurationsResponse(soap*, _tr2__GetAnalyticsConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAnalyticsConfigurationsResponse(soap*, _tr2__GetAnalyticsConfigurationsResponse*) serialize to a sink
/// - _tr2__GetAnalyticsConfigurationsResponse* soap_dup__tr2__GetAnalyticsConfigurationsResponse(soap*, _tr2__GetAnalyticsConfigurationsResponse* dst, _tr2__GetAnalyticsConfigurationsResponse *src) returns deep copy of _tr2__GetAnalyticsConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAnalyticsConfigurationsResponse(_tr2__GetAnalyticsConfigurationsResponse*) deep deletes _tr2__GetAnalyticsConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetAnalyticsConfigurationsResponse(NULL, _tr2__GetAnalyticsConfigurationsResponse *dst, _tr2__GetAnalyticsConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAnalyticsConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of Analytics configurations.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoAnalyticsConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    struct tt__VideoAnalyticsConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
/// struct _tr2__GetMetadataConfigurationsResponse operations:
/// - soap_default__tr2__GetMetadataConfigurationsResponse(soap*, _tr2__GetMetadataConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetMetadataConfigurationsResponse(soap*, _tr2__GetMetadataConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetMetadataConfigurationsResponse(soap*, _tr2__GetMetadataConfigurationsResponse*) serialize to a sink
/// - _tr2__GetMetadataConfigurationsResponse* soap_dup__tr2__GetMetadataConfigurationsResponse(soap*, _tr2__GetMetadataConfigurationsResponse* dst, _tr2__GetMetadataConfigurationsResponse *src) returns deep copy of _tr2__GetMetadataConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetMetadataConfigurationsResponse(_tr2__GetMetadataConfigurationsResponse*) deep deletes _tr2__GetMetadataConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetMetadataConfigurationsResponse(NULL, _tr2__GetMetadataConfigurationsResponse *dst, _tr2__GetMetadataConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetMetadataConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__MetadataConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__MetadataConfiguration* of size 0..unbounded.
    struct tt__MetadataConfiguration*    Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
/// struct _tr2__GetAudioOutputConfigurationsResponse operations:
/// - soap_default__tr2__GetAudioOutputConfigurationsResponse(soap*, _tr2__GetAudioOutputConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioOutputConfigurationsResponse(soap*, _tr2__GetAudioOutputConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioOutputConfigurationsResponse(soap*, _tr2__GetAudioOutputConfigurationsResponse*) serialize to a sink
/// - _tr2__GetAudioOutputConfigurationsResponse* soap_dup__tr2__GetAudioOutputConfigurationsResponse(soap*, _tr2__GetAudioOutputConfigurationsResponse* dst, _tr2__GetAudioOutputConfigurationsResponse *src) returns deep copy of _tr2__GetAudioOutputConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioOutputConfigurationsResponse(_tr2__GetAudioOutputConfigurationsResponse*) deep deletes _tr2__GetAudioOutputConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetAudioOutputConfigurationsResponse(NULL, _tr2__GetAudioOutputConfigurationsResponse *dst, _tr2__GetAudioOutputConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioOutputConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioOutputConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioOutputConfiguration* of size 0..unbounded.
    struct tt__AudioOutputConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
/// struct _tr2__GetAudioDecoderConfigurationsResponse operations:
/// - soap_default__tr2__GetAudioDecoderConfigurationsResponse(soap*, _tr2__GetAudioDecoderConfigurationsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioDecoderConfigurationsResponse(soap*, _tr2__GetAudioDecoderConfigurationsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioDecoderConfigurationsResponse(soap*, _tr2__GetAudioDecoderConfigurationsResponse*) serialize to a sink
/// - _tr2__GetAudioDecoderConfigurationsResponse* soap_dup__tr2__GetAudioDecoderConfigurationsResponse(soap*, _tr2__GetAudioDecoderConfigurationsResponse* dst, _tr2__GetAudioDecoderConfigurationsResponse *src) returns deep copy of _tr2__GetAudioDecoderConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioDecoderConfigurationsResponse(_tr2__GetAudioDecoderConfigurationsResponse*) deep deletes _tr2__GetAudioDecoderConfigurationsResponse data members, use only on dst after soap_dup__tr2__GetAudioDecoderConfigurationsResponse(NULL, _tr2__GetAudioDecoderConfigurationsResponse *dst, _tr2__GetAudioDecoderConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioDecoderConfigurationsResponse
{
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioDecoderConfiguration* is 0..unbounded.
   $int                                  __sizeConfigurations           0;
/// Array struct tt__AudioDecoderConfiguration* of size 0..unbounded.
    struct tt__AudioDecoderConfiguration*  Configurations                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
/// struct _tr2__SetVideoEncoderConfiguration operations:
/// - soap_default__tr2__SetVideoEncoderConfiguration(soap*, _tr2__SetVideoEncoderConfiguration*) reset members to default
/// - int soap_read__tr2__SetVideoEncoderConfiguration(soap*, _tr2__SetVideoEncoderConfiguration*) deserialize from a source
/// - int soap_write__tr2__SetVideoEncoderConfiguration(soap*, _tr2__SetVideoEncoderConfiguration*) serialize to a sink
/// - _tr2__SetVideoEncoderConfiguration* soap_dup__tr2__SetVideoEncoderConfiguration(soap*, _tr2__SetVideoEncoderConfiguration* dst, _tr2__SetVideoEncoderConfiguration *src) returns deep copy of _tr2__SetVideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetVideoEncoderConfiguration(_tr2__SetVideoEncoderConfiguration*) deep deletes _tr2__SetVideoEncoderConfiguration data members, use only on dst after soap_dup__tr2__SetVideoEncoderConfiguration(NULL, _tr2__SetVideoEncoderConfiguration *dst, _tr2__SetVideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__SetVideoEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration.
    struct tt__VideoEncoder2Configuration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetConfigurationResponse is a complexType.
///
/// struct _tr2__SetConfigurationResponse operations:
/// - soap_default__tr2__SetConfigurationResponse(soap*, _tr2__SetConfigurationResponse*) reset members to default
/// - int soap_read__tr2__SetConfigurationResponse(soap*, _tr2__SetConfigurationResponse*) deserialize from a source
/// - int soap_write__tr2__SetConfigurationResponse(soap*, _tr2__SetConfigurationResponse*) serialize to a sink
/// - _tr2__SetConfigurationResponse* soap_dup__tr2__SetConfigurationResponse(soap*, _tr2__SetConfigurationResponse* dst, _tr2__SetConfigurationResponse *src) returns deep copy of _tr2__SetConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetConfigurationResponse(_tr2__SetConfigurationResponse*) deep deletes _tr2__SetConfigurationResponse data members, use only on dst after soap_dup__tr2__SetConfigurationResponse(NULL, _tr2__SetConfigurationResponse *dst, _tr2__SetConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tr2__SetConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
/// struct _tr2__SetVideoSourceConfiguration operations:
/// - soap_default__tr2__SetVideoSourceConfiguration(soap*, _tr2__SetVideoSourceConfiguration*) reset members to default
/// - int soap_read__tr2__SetVideoSourceConfiguration(soap*, _tr2__SetVideoSourceConfiguration*) deserialize from a source
/// - int soap_write__tr2__SetVideoSourceConfiguration(soap*, _tr2__SetVideoSourceConfiguration*) serialize to a sink
/// - _tr2__SetVideoSourceConfiguration* soap_dup__tr2__SetVideoSourceConfiguration(soap*, _tr2__SetVideoSourceConfiguration* dst, _tr2__SetVideoSourceConfiguration *src) returns deep copy of _tr2__SetVideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetVideoSourceConfiguration(_tr2__SetVideoSourceConfiguration*) deep deletes _tr2__SetVideoSourceConfiguration data members, use only on dst after soap_dup__tr2__SetVideoSourceConfiguration(NULL, _tr2__SetVideoSourceConfiguration *dst, _tr2__SetVideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__SetVideoSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
/// struct _tr2__SetAudioEncoderConfiguration operations:
/// - soap_default__tr2__SetAudioEncoderConfiguration(soap*, _tr2__SetAudioEncoderConfiguration*) reset members to default
/// - int soap_read__tr2__SetAudioEncoderConfiguration(soap*, _tr2__SetAudioEncoderConfiguration*) deserialize from a source
/// - int soap_write__tr2__SetAudioEncoderConfiguration(soap*, _tr2__SetAudioEncoderConfiguration*) serialize to a sink
/// - _tr2__SetAudioEncoderConfiguration* soap_dup__tr2__SetAudioEncoderConfiguration(soap*, _tr2__SetAudioEncoderConfiguration* dst, _tr2__SetAudioEncoderConfiguration *src) returns deep copy of _tr2__SetAudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetAudioEncoderConfiguration(_tr2__SetAudioEncoderConfiguration*) deep deletes _tr2__SetAudioEncoderConfiguration data members, use only on dst after soap_dup__tr2__SetAudioEncoderConfiguration(NULL, _tr2__SetAudioEncoderConfiguration *dst, _tr2__SetAudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__SetAudioEncoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration.
    struct tt__AudioEncoder2Configuration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
/// struct _tr2__SetAudioSourceConfiguration operations:
/// - soap_default__tr2__SetAudioSourceConfiguration(soap*, _tr2__SetAudioSourceConfiguration*) reset members to default
/// - int soap_read__tr2__SetAudioSourceConfiguration(soap*, _tr2__SetAudioSourceConfiguration*) deserialize from a source
/// - int soap_write__tr2__SetAudioSourceConfiguration(soap*, _tr2__SetAudioSourceConfiguration*) serialize to a sink
/// - _tr2__SetAudioSourceConfiguration* soap_dup__tr2__SetAudioSourceConfiguration(soap*, _tr2__SetAudioSourceConfiguration* dst, _tr2__SetAudioSourceConfiguration *src) returns deep copy of _tr2__SetAudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetAudioSourceConfiguration(_tr2__SetAudioSourceConfiguration*) deep deletes _tr2__SetAudioSourceConfiguration data members, use only on dst after soap_dup__tr2__SetAudioSourceConfiguration(NULL, _tr2__SetAudioSourceConfiguration *dst, _tr2__SetAudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__SetAudioSourceConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetMetadataConfiguration is a complexType.
///
/// struct _tr2__SetMetadataConfiguration operations:
/// - soap_default__tr2__SetMetadataConfiguration(soap*, _tr2__SetMetadataConfiguration*) reset members to default
/// - int soap_read__tr2__SetMetadataConfiguration(soap*, _tr2__SetMetadataConfiguration*) deserialize from a source
/// - int soap_write__tr2__SetMetadataConfiguration(soap*, _tr2__SetMetadataConfiguration*) serialize to a sink
/// - _tr2__SetMetadataConfiguration* soap_dup__tr2__SetMetadataConfiguration(soap*, _tr2__SetMetadataConfiguration* dst, _tr2__SetMetadataConfiguration *src) returns deep copy of _tr2__SetMetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetMetadataConfiguration(_tr2__SetMetadataConfiguration*) deep deletes _tr2__SetMetadataConfiguration data members, use only on dst after soap_dup__tr2__SetMetadataConfiguration(NULL, _tr2__SetMetadataConfiguration *dst, _tr2__SetMetadataConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__SetMetadataConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
/// struct _tr2__SetAudioOutputConfiguration operations:
/// - soap_default__tr2__SetAudioOutputConfiguration(soap*, _tr2__SetAudioOutputConfiguration*) reset members to default
/// - int soap_read__tr2__SetAudioOutputConfiguration(soap*, _tr2__SetAudioOutputConfiguration*) deserialize from a source
/// - int soap_write__tr2__SetAudioOutputConfiguration(soap*, _tr2__SetAudioOutputConfiguration*) serialize to a sink
/// - _tr2__SetAudioOutputConfiguration* soap_dup__tr2__SetAudioOutputConfiguration(soap*, _tr2__SetAudioOutputConfiguration* dst, _tr2__SetAudioOutputConfiguration *src) returns deep copy of _tr2__SetAudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetAudioOutputConfiguration(_tr2__SetAudioOutputConfiguration*) deep deletes _tr2__SetAudioOutputConfiguration data members, use only on dst after soap_dup__tr2__SetAudioOutputConfiguration(NULL, _tr2__SetAudioOutputConfiguration *dst, _tr2__SetAudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__SetAudioOutputConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
/// struct _tr2__SetAudioDecoderConfiguration operations:
/// - soap_default__tr2__SetAudioDecoderConfiguration(soap*, _tr2__SetAudioDecoderConfiguration*) reset members to default
/// - int soap_read__tr2__SetAudioDecoderConfiguration(soap*, _tr2__SetAudioDecoderConfiguration*) deserialize from a source
/// - int soap_write__tr2__SetAudioDecoderConfiguration(soap*, _tr2__SetAudioDecoderConfiguration*) serialize to a sink
/// - _tr2__SetAudioDecoderConfiguration* soap_dup__tr2__SetAudioDecoderConfiguration(soap*, _tr2__SetAudioDecoderConfiguration* dst, _tr2__SetAudioDecoderConfiguration *src) returns deep copy of _tr2__SetAudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetAudioDecoderConfiguration(_tr2__SetAudioDecoderConfiguration*) deep deletes _tr2__SetAudioDecoderConfiguration data members, use only on dst after soap_dup__tr2__SetAudioDecoderConfiguration(NULL, _tr2__SetAudioDecoderConfiguration *dst, _tr2__SetAudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct _tr2__SetAudioDecoderConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
/// struct _tr2__GetVideoSourceConfigurationOptionsResponse operations:
/// - soap_default__tr2__GetVideoSourceConfigurationOptionsResponse(soap*, _tr2__GetVideoSourceConfigurationOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetVideoSourceConfigurationOptionsResponse(soap*, _tr2__GetVideoSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetVideoSourceConfigurationOptionsResponse(soap*, _tr2__GetVideoSourceConfigurationOptionsResponse*) serialize to a sink
/// - _tr2__GetVideoSourceConfigurationOptionsResponse* soap_dup__tr2__GetVideoSourceConfigurationOptionsResponse(soap*, _tr2__GetVideoSourceConfigurationOptionsResponse* dst, _tr2__GetVideoSourceConfigurationOptionsResponse *src) returns deep copy of _tr2__GetVideoSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetVideoSourceConfigurationOptionsResponse(_tr2__GetVideoSourceConfigurationOptionsResponse*) deep deletes _tr2__GetVideoSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__tr2__GetVideoSourceConfigurationOptionsResponse(NULL, _tr2__GetVideoSourceConfigurationOptionsResponse *dst, _tr2__GetVideoSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetVideoSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    struct tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
/// struct _tr2__GetVideoEncoderConfigurationOptionsResponse operations:
/// - soap_default__tr2__GetVideoEncoderConfigurationOptionsResponse(soap*, _tr2__GetVideoEncoderConfigurationOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetVideoEncoderConfigurationOptionsResponse(soap*, _tr2__GetVideoEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetVideoEncoderConfigurationOptionsResponse(soap*, _tr2__GetVideoEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _tr2__GetVideoEncoderConfigurationOptionsResponse* soap_dup__tr2__GetVideoEncoderConfigurationOptionsResponse(soap*, _tr2__GetVideoEncoderConfigurationOptionsResponse* dst, _tr2__GetVideoEncoderConfigurationOptionsResponse *src) returns deep copy of _tr2__GetVideoEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetVideoEncoderConfigurationOptionsResponse(_tr2__GetVideoEncoderConfigurationOptionsResponse*) deep deletes _tr2__GetVideoEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__tr2__GetVideoEncoderConfigurationOptionsResponse(NULL, _tr2__GetVideoEncoderConfigurationOptionsResponse *dst, _tr2__GetVideoEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetVideoEncoderConfigurationOptionsResponse
{
/// Size of array of struct tt__VideoEncoder2ConfigurationOptions* is 1..unbounded.
   $int                                  __sizeOptions                  1;
/// Array struct tt__VideoEncoder2ConfigurationOptions* of size 1..unbounded.
    struct tt__VideoEncoder2ConfigurationOptions*  Options                        1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
/// struct _tr2__GetAudioSourceConfigurationOptionsResponse operations:
/// - soap_default__tr2__GetAudioSourceConfigurationOptionsResponse(soap*, _tr2__GetAudioSourceConfigurationOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioSourceConfigurationOptionsResponse(soap*, _tr2__GetAudioSourceConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioSourceConfigurationOptionsResponse(soap*, _tr2__GetAudioSourceConfigurationOptionsResponse*) serialize to a sink
/// - _tr2__GetAudioSourceConfigurationOptionsResponse* soap_dup__tr2__GetAudioSourceConfigurationOptionsResponse(soap*, _tr2__GetAudioSourceConfigurationOptionsResponse* dst, _tr2__GetAudioSourceConfigurationOptionsResponse *src) returns deep copy of _tr2__GetAudioSourceConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioSourceConfigurationOptionsResponse(_tr2__GetAudioSourceConfigurationOptionsResponse*) deep deletes _tr2__GetAudioSourceConfigurationOptionsResponse data members, use only on dst after soap_dup__tr2__GetAudioSourceConfigurationOptionsResponse(NULL, _tr2__GetAudioSourceConfigurationOptionsResponse *dst, _tr2__GetAudioSourceConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioSourceConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    struct tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
/// struct _tr2__GetAudioEncoderConfigurationOptionsResponse operations:
/// - soap_default__tr2__GetAudioEncoderConfigurationOptionsResponse(soap*, _tr2__GetAudioEncoderConfigurationOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioEncoderConfigurationOptionsResponse(soap*, _tr2__GetAudioEncoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioEncoderConfigurationOptionsResponse(soap*, _tr2__GetAudioEncoderConfigurationOptionsResponse*) serialize to a sink
/// - _tr2__GetAudioEncoderConfigurationOptionsResponse* soap_dup__tr2__GetAudioEncoderConfigurationOptionsResponse(soap*, _tr2__GetAudioEncoderConfigurationOptionsResponse* dst, _tr2__GetAudioEncoderConfigurationOptionsResponse *src) returns deep copy of _tr2__GetAudioEncoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioEncoderConfigurationOptionsResponse(_tr2__GetAudioEncoderConfigurationOptionsResponse*) deep deletes _tr2__GetAudioEncoderConfigurationOptionsResponse data members, use only on dst after soap_dup__tr2__GetAudioEncoderConfigurationOptionsResponse(NULL, _tr2__GetAudioEncoderConfigurationOptionsResponse *dst, _tr2__GetAudioEncoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioEncoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoder2ConfigurationOptions* is 1..unbounded.
   $int                                  __sizeOptions                  1;
/// Array struct tt__AudioEncoder2ConfigurationOptions* of size 1..unbounded.
    struct tt__AudioEncoder2ConfigurationOptions*  Options                        1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
/// struct _tr2__GetMetadataConfigurationOptionsResponse operations:
/// - soap_default__tr2__GetMetadataConfigurationOptionsResponse(soap*, _tr2__GetMetadataConfigurationOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetMetadataConfigurationOptionsResponse(soap*, _tr2__GetMetadataConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetMetadataConfigurationOptionsResponse(soap*, _tr2__GetMetadataConfigurationOptionsResponse*) serialize to a sink
/// - _tr2__GetMetadataConfigurationOptionsResponse* soap_dup__tr2__GetMetadataConfigurationOptionsResponse(soap*, _tr2__GetMetadataConfigurationOptionsResponse* dst, _tr2__GetMetadataConfigurationOptionsResponse *src) returns deep copy of _tr2__GetMetadataConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetMetadataConfigurationOptionsResponse(_tr2__GetMetadataConfigurationOptionsResponse*) deep deletes _tr2__GetMetadataConfigurationOptionsResponse data members, use only on dst after soap_dup__tr2__GetMetadataConfigurationOptionsResponse(NULL, _tr2__GetMetadataConfigurationOptionsResponse *dst, _tr2__GetMetadataConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetMetadataConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    struct tt__MetadataConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// struct _tr2__GetAudioOutputConfigurationOptionsResponse operations:
/// - soap_default__tr2__GetAudioOutputConfigurationOptionsResponse(soap*, _tr2__GetAudioOutputConfigurationOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioOutputConfigurationOptionsResponse(soap*, _tr2__GetAudioOutputConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioOutputConfigurationOptionsResponse(soap*, _tr2__GetAudioOutputConfigurationOptionsResponse*) serialize to a sink
/// - _tr2__GetAudioOutputConfigurationOptionsResponse* soap_dup__tr2__GetAudioOutputConfigurationOptionsResponse(soap*, _tr2__GetAudioOutputConfigurationOptionsResponse* dst, _tr2__GetAudioOutputConfigurationOptionsResponse *src) returns deep copy of _tr2__GetAudioOutputConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioOutputConfigurationOptionsResponse(_tr2__GetAudioOutputConfigurationOptionsResponse*) deep deletes _tr2__GetAudioOutputConfigurationOptionsResponse data members, use only on dst after soap_dup__tr2__GetAudioOutputConfigurationOptionsResponse(NULL, _tr2__GetAudioOutputConfigurationOptionsResponse *dst, _tr2__GetAudioOutputConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioOutputConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    struct tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
/// struct _tr2__GetAudioDecoderConfigurationOptionsResponse operations:
/// - soap_default__tr2__GetAudioDecoderConfigurationOptionsResponse(soap*, _tr2__GetAudioDecoderConfigurationOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetAudioDecoderConfigurationOptionsResponse(soap*, _tr2__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetAudioDecoderConfigurationOptionsResponse(soap*, _tr2__GetAudioDecoderConfigurationOptionsResponse*) serialize to a sink
/// - _tr2__GetAudioDecoderConfigurationOptionsResponse* soap_dup__tr2__GetAudioDecoderConfigurationOptionsResponse(soap*, _tr2__GetAudioDecoderConfigurationOptionsResponse* dst, _tr2__GetAudioDecoderConfigurationOptionsResponse *src) returns deep copy of _tr2__GetAudioDecoderConfigurationOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetAudioDecoderConfigurationOptionsResponse(_tr2__GetAudioDecoderConfigurationOptionsResponse*) deep deletes _tr2__GetAudioDecoderConfigurationOptionsResponse data members, use only on dst after soap_dup__tr2__GetAudioDecoderConfigurationOptionsResponse(NULL, _tr2__GetAudioDecoderConfigurationOptionsResponse *dst, _tr2__GetAudioDecoderConfigurationOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetAudioDecoderConfigurationOptionsResponse
{
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoder2ConfigurationOptions* is 1..unbounded.
   $int                                  __sizeOptions                  1;
/// Array struct tt__AudioEncoder2ConfigurationOptions* of size 1..unbounded.
    struct tt__AudioEncoder2ConfigurationOptions*  Options                        1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetStreamUri is a complexType.
///
/// struct _tr2__GetStreamUri operations:
/// - soap_default__tr2__GetStreamUri(soap*, _tr2__GetStreamUri*) reset members to default
/// - int soap_read__tr2__GetStreamUri(soap*, _tr2__GetStreamUri*) deserialize from a source
/// - int soap_write__tr2__GetStreamUri(soap*, _tr2__GetStreamUri*) serialize to a sink
/// - _tr2__GetStreamUri* soap_dup__tr2__GetStreamUri(soap*, _tr2__GetStreamUri* dst, _tr2__GetStreamUri *src) returns deep copy of _tr2__GetStreamUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetStreamUri(_tr2__GetStreamUri*) deep deletes _tr2__GetStreamUri data members, use only on dst after soap_dup__tr2__GetStreamUri(NULL, _tr2__GetStreamUri *dst, _tr2__GetStreamUri *src) (use soapcpp2 -Ed)
struct _tr2__GetStreamUri
{
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming as defined by tr2:TransportProtocol
/// </BLOCKQUOTE></PRE>
/// Element "Protocol" of XSD type xs:string.
    char*                                Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetStreamUriResponse is a complexType.
///
/// struct _tr2__GetStreamUriResponse operations:
/// - soap_default__tr2__GetStreamUriResponse(soap*, _tr2__GetStreamUriResponse*) reset members to default
/// - int soap_read__tr2__GetStreamUriResponse(soap*, _tr2__GetStreamUriResponse*) deserialize from a source
/// - int soap_write__tr2__GetStreamUriResponse(soap*, _tr2__GetStreamUriResponse*) serialize to a sink
/// - _tr2__GetStreamUriResponse* soap_dup__tr2__GetStreamUriResponse(soap*, _tr2__GetStreamUriResponse* dst, _tr2__GetStreamUriResponse *src) returns deep copy of _tr2__GetStreamUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetStreamUriResponse(_tr2__GetStreamUriResponse*) deep deletes _tr2__GetStreamUriResponse data members, use only on dst after soap_dup__tr2__GetStreamUriResponse(NULL, _tr2__GetStreamUriResponse *dst, _tr2__GetStreamUriResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetStreamUriResponse
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPoint is a complexType.
///
/// struct _tr2__SetSynchronizationPoint operations:
/// - soap_default__tr2__SetSynchronizationPoint(soap*, _tr2__SetSynchronizationPoint*) reset members to default
/// - int soap_read__tr2__SetSynchronizationPoint(soap*, _tr2__SetSynchronizationPoint*) deserialize from a source
/// - int soap_write__tr2__SetSynchronizationPoint(soap*, _tr2__SetSynchronizationPoint*) serialize to a sink
/// - _tr2__SetSynchronizationPoint* soap_dup__tr2__SetSynchronizationPoint(soap*, _tr2__SetSynchronizationPoint* dst, _tr2__SetSynchronizationPoint *src) returns deep copy of _tr2__SetSynchronizationPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetSynchronizationPoint(_tr2__SetSynchronizationPoint*) deep deletes _tr2__SetSynchronizationPoint data members, use only on dst after soap_dup__tr2__SetSynchronizationPoint(NULL, _tr2__SetSynchronizationPoint *dst, _tr2__SetSynchronizationPoint *src) (use soapcpp2 -Ed)
struct _tr2__SetSynchronizationPoint
{
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// struct _tr2__SetSynchronizationPointResponse operations:
/// - soap_default__tr2__SetSynchronizationPointResponse(soap*, _tr2__SetSynchronizationPointResponse*) reset members to default
/// - int soap_read__tr2__SetSynchronizationPointResponse(soap*, _tr2__SetSynchronizationPointResponse*) deserialize from a source
/// - int soap_write__tr2__SetSynchronizationPointResponse(soap*, _tr2__SetSynchronizationPointResponse*) serialize to a sink
/// - _tr2__SetSynchronizationPointResponse* soap_dup__tr2__SetSynchronizationPointResponse(soap*, _tr2__SetSynchronizationPointResponse* dst, _tr2__SetSynchronizationPointResponse *src) returns deep copy of _tr2__SetSynchronizationPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetSynchronizationPointResponse(_tr2__SetSynchronizationPointResponse*) deep deletes _tr2__SetSynchronizationPointResponse data members, use only on dst after soap_dup__tr2__SetSynchronizationPointResponse(NULL, _tr2__SetSynchronizationPointResponse *dst, _tr2__SetSynchronizationPointResponse *src) (use soapcpp2 -Ed)
struct _tr2__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUri is a complexType.
///
/// struct _tr2__GetSnapshotUri operations:
/// - soap_default__tr2__GetSnapshotUri(soap*, _tr2__GetSnapshotUri*) reset members to default
/// - int soap_read__tr2__GetSnapshotUri(soap*, _tr2__GetSnapshotUri*) deserialize from a source
/// - int soap_write__tr2__GetSnapshotUri(soap*, _tr2__GetSnapshotUri*) serialize to a sink
/// - _tr2__GetSnapshotUri* soap_dup__tr2__GetSnapshotUri(soap*, _tr2__GetSnapshotUri* dst, _tr2__GetSnapshotUri *src) returns deep copy of _tr2__GetSnapshotUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetSnapshotUri(_tr2__GetSnapshotUri*) deep deletes _tr2__GetSnapshotUri data members, use only on dst after soap_dup__tr2__GetSnapshotUri(NULL, _tr2__GetSnapshotUri *dst, _tr2__GetSnapshotUri *src) (use soapcpp2 -Ed)
struct _tr2__GetSnapshotUri
{
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// struct _tr2__GetSnapshotUriResponse operations:
/// - soap_default__tr2__GetSnapshotUriResponse(soap*, _tr2__GetSnapshotUriResponse*) reset members to default
/// - int soap_read__tr2__GetSnapshotUriResponse(soap*, _tr2__GetSnapshotUriResponse*) deserialize from a source
/// - int soap_write__tr2__GetSnapshotUriResponse(soap*, _tr2__GetSnapshotUriResponse*) serialize to a sink
/// - _tr2__GetSnapshotUriResponse* soap_dup__tr2__GetSnapshotUriResponse(soap*, _tr2__GetSnapshotUriResponse* dst, _tr2__GetSnapshotUriResponse *src) returns deep copy of _tr2__GetSnapshotUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetSnapshotUriResponse(_tr2__GetSnapshotUriResponse*) deep deletes _tr2__GetSnapshotUriResponse data members, use only on dst after soap_dup__tr2__GetSnapshotUriResponse(NULL, _tr2__GetSnapshotUriResponse *dst, _tr2__GetSnapshotUriResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetSnapshotUriResponse
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting snapshot images.
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreamingResponse is a complexType.
///
/// struct _tr2__StartStopMulticastStreamingResponse operations:
/// - soap_default__tr2__StartStopMulticastStreamingResponse(soap*, _tr2__StartStopMulticastStreamingResponse*) reset members to default
/// - int soap_read__tr2__StartStopMulticastStreamingResponse(soap*, _tr2__StartStopMulticastStreamingResponse*) deserialize from a source
/// - int soap_write__tr2__StartStopMulticastStreamingResponse(soap*, _tr2__StartStopMulticastStreamingResponse*) serialize to a sink
/// - _tr2__StartStopMulticastStreamingResponse* soap_dup__tr2__StartStopMulticastStreamingResponse(soap*, _tr2__StartStopMulticastStreamingResponse* dst, _tr2__StartStopMulticastStreamingResponse *src) returns deep copy of _tr2__StartStopMulticastStreamingResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__StartStopMulticastStreamingResponse(_tr2__StartStopMulticastStreamingResponse*) deep deletes _tr2__StartStopMulticastStreamingResponse data members, use only on dst after soap_dup__tr2__StartStopMulticastStreamingResponse(NULL, _tr2__StartStopMulticastStreamingResponse *dst, _tr2__StartStopMulticastStreamingResponse *src) (use soapcpp2 -Ed)
struct _tr2__StartStopMulticastStreamingResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModes is a complexType.
///
/// struct _tr2__GetVideoSourceModes operations:
/// - soap_default__tr2__GetVideoSourceModes(soap*, _tr2__GetVideoSourceModes*) reset members to default
/// - int soap_read__tr2__GetVideoSourceModes(soap*, _tr2__GetVideoSourceModes*) deserialize from a source
/// - int soap_write__tr2__GetVideoSourceModes(soap*, _tr2__GetVideoSourceModes*) serialize to a sink
/// - _tr2__GetVideoSourceModes* soap_dup__tr2__GetVideoSourceModes(soap*, _tr2__GetVideoSourceModes* dst, _tr2__GetVideoSourceModes *src) returns deep copy of _tr2__GetVideoSourceModes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetVideoSourceModes(_tr2__GetVideoSourceModes*) deep deletes _tr2__GetVideoSourceModes data members, use only on dst after soap_dup__tr2__GetVideoSourceModes(NULL, _tr2__GetVideoSourceModes *dst, _tr2__GetVideoSourceModes *src) (use soapcpp2 -Ed)
struct _tr2__GetVideoSourceModes
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
/// struct _tr2__GetVideoSourceModesResponse operations:
/// - soap_default__tr2__GetVideoSourceModesResponse(soap*, _tr2__GetVideoSourceModesResponse*) reset members to default
/// - int soap_read__tr2__GetVideoSourceModesResponse(soap*, _tr2__GetVideoSourceModesResponse*) deserialize from a source
/// - int soap_write__tr2__GetVideoSourceModesResponse(soap*, _tr2__GetVideoSourceModesResponse*) serialize to a sink
/// - _tr2__GetVideoSourceModesResponse* soap_dup__tr2__GetVideoSourceModesResponse(soap*, _tr2__GetVideoSourceModesResponse* dst, _tr2__GetVideoSourceModesResponse *src) returns deep copy of _tr2__GetVideoSourceModesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetVideoSourceModesResponse(_tr2__GetVideoSourceModesResponse*) deep deletes _tr2__GetVideoSourceModesResponse data members, use only on dst after soap_dup__tr2__GetVideoSourceModesResponse(NULL, _tr2__GetVideoSourceModesResponse *dst, _tr2__GetVideoSourceModesResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetVideoSourceModesResponse
{
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tr2__VideoSourceMode* is 1..unbounded.
   $int                                  __sizeVideoSourceModes         1;
/// Array struct tr2__VideoSourceMode* of size 1..unbounded.
    struct tr2__VideoSourceMode*         VideoSourceModes               1;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceMode is a complexType.
///
/// struct _tr2__SetVideoSourceMode operations:
/// - soap_default__tr2__SetVideoSourceMode(soap*, _tr2__SetVideoSourceMode*) reset members to default
/// - int soap_read__tr2__SetVideoSourceMode(soap*, _tr2__SetVideoSourceMode*) deserialize from a source
/// - int soap_write__tr2__SetVideoSourceMode(soap*, _tr2__SetVideoSourceMode*) serialize to a sink
/// - _tr2__SetVideoSourceMode* soap_dup__tr2__SetVideoSourceMode(soap*, _tr2__SetVideoSourceMode* dst, _tr2__SetVideoSourceMode *src) returns deep copy of _tr2__SetVideoSourceMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetVideoSourceMode(_tr2__SetVideoSourceMode*) deep deletes _tr2__SetVideoSourceMode data members, use only on dst after soap_dup__tr2__SetVideoSourceMode(NULL, _tr2__SetVideoSourceMode *dst, _tr2__SetVideoSourceMode *src) (use soapcpp2 -Ed)
struct _tr2__SetVideoSourceMode
{
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceModeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
/// struct _tr2__SetVideoSourceModeResponse operations:
/// - soap_default__tr2__SetVideoSourceModeResponse(soap*, _tr2__SetVideoSourceModeResponse*) reset members to default
/// - int soap_read__tr2__SetVideoSourceModeResponse(soap*, _tr2__SetVideoSourceModeResponse*) deserialize from a source
/// - int soap_write__tr2__SetVideoSourceModeResponse(soap*, _tr2__SetVideoSourceModeResponse*) serialize to a sink
/// - _tr2__SetVideoSourceModeResponse* soap_dup__tr2__SetVideoSourceModeResponse(soap*, _tr2__SetVideoSourceModeResponse* dst, _tr2__SetVideoSourceModeResponse *src) returns deep copy of _tr2__SetVideoSourceModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetVideoSourceModeResponse(_tr2__SetVideoSourceModeResponse*) deep deletes _tr2__SetVideoSourceModeResponse data members, use only on dst after soap_dup__tr2__SetVideoSourceModeResponse(NULL, _tr2__SetVideoSourceModeResponse *dst, _tr2__SetVideoSourceModeResponse *src) (use soapcpp2 -Ed)
struct _tr2__SetVideoSourceModeResponse
{
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
/// Element "Reboot" of XSD type xs:boolean.
    enum xsd__boolean                    Reboot                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDs is a complexType.
///
/// struct _tr2__GetOSDs operations:
/// - soap_default__tr2__GetOSDs(soap*, _tr2__GetOSDs*) reset members to default
/// - int soap_read__tr2__GetOSDs(soap*, _tr2__GetOSDs*) deserialize from a source
/// - int soap_write__tr2__GetOSDs(soap*, _tr2__GetOSDs*) serialize to a sink
/// - _tr2__GetOSDs* soap_dup__tr2__GetOSDs(soap*, _tr2__GetOSDs* dst, _tr2__GetOSDs *src) returns deep copy of _tr2__GetOSDs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetOSDs(_tr2__GetOSDs*) deep deletes _tr2__GetOSDs data members, use only on dst after soap_dup__tr2__GetOSDs(NULL, _tr2__GetOSDs *dst, _tr2__GetOSDs *src) (use soapcpp2 -Ed)
struct _tr2__GetOSDs
{
/// <PRE><BLOCKQUOTE>
///   The GetOSDs command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDsResponse is a complexType.
///
/// struct _tr2__GetOSDsResponse operations:
/// - soap_default__tr2__GetOSDsResponse(soap*, _tr2__GetOSDsResponse*) reset members to default
/// - int soap_read__tr2__GetOSDsResponse(soap*, _tr2__GetOSDsResponse*) deserialize from a source
/// - int soap_write__tr2__GetOSDsResponse(soap*, _tr2__GetOSDsResponse*) serialize to a sink
/// - _tr2__GetOSDsResponse* soap_dup__tr2__GetOSDsResponse(soap*, _tr2__GetOSDsResponse* dst, _tr2__GetOSDsResponse *src) returns deep copy of _tr2__GetOSDsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetOSDsResponse(_tr2__GetOSDsResponse*) deep deletes _tr2__GetOSDsResponse data members, use only on dst after soap_dup__tr2__GetOSDsResponse(NULL, _tr2__GetOSDsResponse *dst, _tr2__GetOSDsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetOSDsResponse
{
/// <PRE><BLOCKQUOTE>
///   The requested OSD configuration.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver20/media/wsdl":SetOSD is a complexType.
///
/// struct _tr2__SetOSD operations:
/// - soap_default__tr2__SetOSD(soap*, _tr2__SetOSD*) reset members to default
/// - int soap_read__tr2__SetOSD(soap*, _tr2__SetOSD*) deserialize from a source
/// - int soap_write__tr2__SetOSD(soap*, _tr2__SetOSD*) serialize to a sink
/// - _tr2__SetOSD* soap_dup__tr2__SetOSD(soap*, _tr2__SetOSD* dst, _tr2__SetOSD *src) returns deep copy of _tr2__SetOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__SetOSD(_tr2__SetOSD*) deep deletes _tr2__SetOSD data members, use only on dst after soap_dup__tr2__SetOSD(NULL, _tr2__SetOSD *dst, _tr2__SetOSD *src) (use soapcpp2 -Ed)
struct _tr2__SetOSD
{
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDOptions is a complexType.
///
/// struct _tr2__GetOSDOptions operations:
/// - soap_default__tr2__GetOSDOptions(soap*, _tr2__GetOSDOptions*) reset members to default
/// - int soap_read__tr2__GetOSDOptions(soap*, _tr2__GetOSDOptions*) deserialize from a source
/// - int soap_write__tr2__GetOSDOptions(soap*, _tr2__GetOSDOptions*) serialize to a sink
/// - _tr2__GetOSDOptions* soap_dup__tr2__GetOSDOptions(soap*, _tr2__GetOSDOptions* dst, _tr2__GetOSDOptions *src) returns deep copy of _tr2__GetOSDOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetOSDOptions(_tr2__GetOSDOptions*) deep deletes _tr2__GetOSDOptions data members, use only on dst after soap_dup__tr2__GetOSDOptions(NULL, _tr2__GetOSDOptions *dst, _tr2__GetOSDOptions *src) (use soapcpp2 -Ed)
struct _tr2__GetOSDOptions
{
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":GetOSDOptionsResponse is a complexType.
///
/// struct _tr2__GetOSDOptionsResponse operations:
/// - soap_default__tr2__GetOSDOptionsResponse(soap*, _tr2__GetOSDOptionsResponse*) reset members to default
/// - int soap_read__tr2__GetOSDOptionsResponse(soap*, _tr2__GetOSDOptionsResponse*) deserialize from a source
/// - int soap_write__tr2__GetOSDOptionsResponse(soap*, _tr2__GetOSDOptionsResponse*) serialize to a sink
/// - _tr2__GetOSDOptionsResponse* soap_dup__tr2__GetOSDOptionsResponse(soap*, _tr2__GetOSDOptionsResponse* dst, _tr2__GetOSDOptionsResponse *src) returns deep copy of _tr2__GetOSDOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__GetOSDOptionsResponse(_tr2__GetOSDOptionsResponse*) deep deletes _tr2__GetOSDOptionsResponse data members, use only on dst after soap_dup__tr2__GetOSDOptionsResponse(NULL, _tr2__GetOSDOptionsResponse *dst, _tr2__GetOSDOptionsResponse *src) (use soapcpp2 -Ed)
struct _tr2__GetOSDOptionsResponse
{

/// </BLOCKQUOTE></PRE>
/// Element "OSDOptions" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    struct tt__OSDConfigurationOptions*  OSDOptions                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateOSD is a complexType.
///
/// struct _tr2__CreateOSD operations:
/// - soap_default__tr2__CreateOSD(soap*, _tr2__CreateOSD*) reset members to default
/// - int soap_read__tr2__CreateOSD(soap*, _tr2__CreateOSD*) deserialize from a source
/// - int soap_write__tr2__CreateOSD(soap*, _tr2__CreateOSD*) serialize to a sink
/// - _tr2__CreateOSD* soap_dup__tr2__CreateOSD(soap*, _tr2__CreateOSD* dst, _tr2__CreateOSD *src) returns deep copy of _tr2__CreateOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__CreateOSD(_tr2__CreateOSD*) deep deletes _tr2__CreateOSD data members, use only on dst after soap_dup__tr2__CreateOSD(NULL, _tr2__CreateOSD *dst, _tr2__CreateOSD *src) (use soapcpp2 -Ed)
struct _tr2__CreateOSD
{
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
/// Element "OSD" of XSD type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    struct tt__OSDConfiguration*         OSD                            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver20/media/wsdl":CreateOSDResponse is a complexType.
///
/// struct _tr2__CreateOSDResponse operations:
/// - soap_default__tr2__CreateOSDResponse(soap*, _tr2__CreateOSDResponse*) reset members to default
/// - int soap_read__tr2__CreateOSDResponse(soap*, _tr2__CreateOSDResponse*) deserialize from a source
/// - int soap_write__tr2__CreateOSDResponse(soap*, _tr2__CreateOSDResponse*) serialize to a sink
/// - _tr2__CreateOSDResponse* soap_dup__tr2__CreateOSDResponse(soap*, _tr2__CreateOSDResponse* dst, _tr2__CreateOSDResponse *src) returns deep copy of _tr2__CreateOSDResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__CreateOSDResponse(_tr2__CreateOSDResponse*) deep deletes _tr2__CreateOSDResponse data members, use only on dst after soap_dup__tr2__CreateOSDResponse(NULL, _tr2__CreateOSDResponse *dst, _tr2__CreateOSDResponse *src) (use soapcpp2 -Ed)
struct _tr2__CreateOSDResponse
{
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver20/media/wsdl":DeleteOSD is a complexType.
///
/// struct _tr2__DeleteOSD operations:
/// - soap_default__tr2__DeleteOSD(soap*, _tr2__DeleteOSD*) reset members to default
/// - int soap_read__tr2__DeleteOSD(soap*, _tr2__DeleteOSD*) deserialize from a source
/// - int soap_write__tr2__DeleteOSD(soap*, _tr2__DeleteOSD*) serialize to a sink
/// - _tr2__DeleteOSD* soap_dup__tr2__DeleteOSD(soap*, _tr2__DeleteOSD* dst, _tr2__DeleteOSD *src) returns deep copy of _tr2__DeleteOSD src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tr2__DeleteOSD(_tr2__DeleteOSD*) deep deletes _tr2__DeleteOSD data members, use only on dst after soap_dup__tr2__DeleteOSD(NULL, _tr2__DeleteOSD *dst, _tr2__DeleteOSD *src) (use soapcpp2 -Ed)
struct _tr2__DeleteOSD
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "OSDToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
/// struct tt__VideoSource operations:
/// - soap_default_tt__VideoSource(soap*, tt__VideoSource*) reset members to default
/// - int soap_read_tt__VideoSource(soap*, tt__VideoSource*) deserialize from a source
/// - int soap_write_tt__VideoSource(soap*, tt__VideoSource*) serialize to a sink
/// - tt__VideoSource* soap_dup_tt__VideoSource(soap*, tt__VideoSource* dst, tt__VideoSource *src) returns deep copy of tt__VideoSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSource(tt__VideoSource*) deep deletes tt__VideoSource data members, use only on dst after soap_dup_tt__VideoSource(NULL, tt__VideoSource *dst, tt__VideoSource *src) (use soapcpp2 -Ed)
struct tt__VideoSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings.
    struct tt__ImagingSettings*          Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    struct tt__VideoSourceExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
/// struct tt__AudioSource operations:
/// - soap_default_tt__AudioSource(soap*, tt__AudioSource*) reset members to default
/// - int soap_read_tt__AudioSource(soap*, tt__AudioSource*) deserialize from a source
/// - int soap_write_tt__AudioSource(soap*, tt__AudioSource*) serialize to a sink
/// - tt__AudioSource* soap_dup_tt__AudioSource(soap*, tt__AudioSource* dst, tt__AudioSource *src) returns deep copy of tt__AudioSource src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSource(tt__AudioSource*) deep deletes tt__AudioSource data members, use only on dst after soap_dup_tt__AudioSource(NULL, tt__AudioSource *dst, tt__AudioSource *src) (use soapcpp2 -Ed)
struct tt__AudioSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
/// Element "Channels" of XSD type xs:int.
    int                                  Channels                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__VideoSourceConfiguration operations:
/// - soap_default_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) reset members to default
/// - int soap_read_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) serialize to a sink
/// - tt__VideoSourceConfiguration* soap_dup_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration* dst, tt__VideoSourceConfiguration *src) returns deep copy of tt__VideoSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoSourceConfiguration(tt__VideoSourceConfiguration*) deep deletes tt__VideoSourceConfiguration data members, use only on dst after soap_dup_tt__VideoSourceConfiguration(NULL, tt__VideoSourceConfiguration *dst, tt__VideoSourceConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
/// Element "Bounds" of XSD type "http://www.onvif.org/ver10/schema":IntRectangle.
    struct tt__IntRectangle*             Bounds                         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    struct tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__VideoEncoderConfiguration operations:
/// - soap_default_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) reset members to default
/// - int soap_read_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) serialize to a sink
/// - tt__VideoEncoderConfiguration* soap_dup_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration* dst, tt__VideoEncoderConfiguration *src) returns deep copy of tt__VideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderConfiguration(tt__VideoEncoderConfiguration*) deep deletes tt__VideoEncoderConfiguration data members, use only on dst after soap_dup_tt__VideoEncoderConfiguration(NULL, tt__VideoEncoderConfiguration *dst, tt__VideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
/// Element "Quality" of XSD type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "RateControl" of XSD type "http://www.onvif.org/ver10/schema":VideoRateControl.
    struct tt__VideoRateControl*         RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    struct tt__Mpeg4Configuration*       MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Configuration.
    struct tt__H264Configuration*        H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
///
/// struct tt__JpegOptions2 operations:
/// - soap_default_tt__JpegOptions2(soap*, tt__JpegOptions2*) reset members to default
/// - int soap_read_tt__JpegOptions2(soap*, tt__JpegOptions2*) deserialize from a source
/// - int soap_write_tt__JpegOptions2(soap*, tt__JpegOptions2*) serialize to a sink
/// - tt__JpegOptions2* soap_dup_tt__JpegOptions2(soap*, tt__JpegOptions2* dst, tt__JpegOptions2 *src) returns deep copy of tt__JpegOptions2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegOptions2(tt__JpegOptions2*) deep deletes tt__JpegOptions2 data members, use only on dst after soap_dup_tt__JpegOptions2(NULL, tt__JpegOptions2 *dst, tt__JpegOptions2 *src) (use soapcpp2 -Ed)
struct tt__JpegOptions2
{
/// INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
//  END OF INHERITED FROM tt__JpegOptions
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
/// struct tt__Mpeg4Options2 operations:
/// - soap_default_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) reset members to default
/// - int soap_read_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) deserialize from a source
/// - int soap_write_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) serialize to a sink
/// - tt__Mpeg4Options2* soap_dup_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2* dst, tt__Mpeg4Options2 *src) returns deep copy of tt__Mpeg4Options2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Options2(tt__Mpeg4Options2*) deep deletes tt__Mpeg4Options2 data members, use only on dst after soap_dup_tt__Mpeg4Options2(NULL, tt__Mpeg4Options2 *dst, tt__Mpeg4Options2 *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Options2
{
/// INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;
//  END OF INHERITED FROM tt__Mpeg4Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":H264Options.
///
/// struct tt__H264Options2 operations:
/// - soap_default_tt__H264Options2(soap*, tt__H264Options2*) reset members to default
/// - int soap_read_tt__H264Options2(soap*, tt__H264Options2*) deserialize from a source
/// - int soap_write_tt__H264Options2(soap*, tt__H264Options2*) serialize to a sink
/// - tt__H264Options2* soap_dup_tt__H264Options2(soap*, tt__H264Options2* dst, tt__H264Options2 *src) returns deep copy of tt__H264Options2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Options2(tt__H264Options2*) deep deletes tt__H264Options2 data members, use only on dst after soap_dup_tt__H264Options2(NULL, tt__H264Options2 *dst, tt__H264Options2 *src) (use soapcpp2 -Ed)
struct tt__H264Options2
{
/// INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;
//  END OF INHERITED FROM tt__H264Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__VideoEncoder2Configuration operations:
/// - soap_default_tt__VideoEncoder2Configuration(soap*, tt__VideoEncoder2Configuration*) reset members to default
/// - int soap_read_tt__VideoEncoder2Configuration(soap*, tt__VideoEncoder2Configuration*) deserialize from a source
/// - int soap_write_tt__VideoEncoder2Configuration(soap*, tt__VideoEncoder2Configuration*) serialize to a sink
/// - tt__VideoEncoder2Configuration* soap_dup_tt__VideoEncoder2Configuration(soap*, tt__VideoEncoder2Configuration* dst, tt__VideoEncoder2Configuration *src) returns deep copy of tt__VideoEncoder2Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoder2Configuration(tt__VideoEncoder2Configuration*) deep deletes tt__VideoEncoder2Configuration data members, use only on dst after soap_dup_tt__VideoEncoder2Configuration(NULL, tt__VideoEncoder2Configuration *dst, tt__VideoEncoder2Configuration *src) (use soapcpp2 -Ed)
struct tt__VideoEncoder2Configuration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Mime name of the supported audio format. For name definitions see tt:VideoEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution2.
    struct tt__VideoResolution2*         Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "RateControl" of XSD type "http://www.onvif.org/ver10/schema":VideoRateControl2.
    struct tt__VideoRateControl2*        RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
/// Element "Quality" of XSD type xs:float.
    float                                Quality                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Attribute "GovLength" of XSD type xs:int.
   @int*                                 GovLength                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The encoder profile as defined in tt:VideoEncodingProfiles.
/// </BLOCKQUOTE></PRE>
/// Attribute "Profile" of XSD type xs:string.
   @char*                                Profile                        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__AudioSourceConfiguration operations:
/// - soap_default_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) reset members to default
/// - int soap_read_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) serialize to a sink
/// - tt__AudioSourceConfiguration* soap_dup_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration* dst, tt__AudioSourceConfiguration *src) returns deep copy of tt__AudioSourceConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioSourceConfiguration(tt__AudioSourceConfiguration*) deep deletes tt__AudioSourceConfiguration data members, use only on dst after soap_dup_tt__AudioSourceConfiguration(NULL, tt__AudioSourceConfiguration *dst, tt__AudioSourceConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__AudioEncoderConfiguration operations:
/// - soap_default_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) reset members to default
/// - int soap_read_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) serialize to a sink
/// - tt__AudioEncoderConfiguration* soap_dup_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration* dst, tt__AudioEncoderConfiguration *src) returns deep copy of tt__AudioEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoderConfiguration(tt__AudioEncoderConfiguration*) deep deletes tt__AudioEncoderConfiguration data members, use only on dst after soap_dup_tt__AudioEncoderConfiguration(NULL, tt__AudioEncoderConfiguration *dst, tt__AudioEncoderConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "SampleRate" of XSD type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__AudioEncoder2Configuration operations:
/// - soap_default_tt__AudioEncoder2Configuration(soap*, tt__AudioEncoder2Configuration*) reset members to default
/// - int soap_read_tt__AudioEncoder2Configuration(soap*, tt__AudioEncoder2Configuration*) deserialize from a source
/// - int soap_write_tt__AudioEncoder2Configuration(soap*, tt__AudioEncoder2Configuration*) serialize to a sink
/// - tt__AudioEncoder2Configuration* soap_dup_tt__AudioEncoder2Configuration(soap*, tt__AudioEncoder2Configuration* dst, tt__AudioEncoder2Configuration *src) returns deep copy of tt__AudioEncoder2Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioEncoder2Configuration(tt__AudioEncoder2Configuration*) deep deletes tt__AudioEncoder2Configuration data members, use only on dst after soap_dup_tt__AudioEncoder2Configuration(NULL, tt__AudioEncoder2Configuration *dst, tt__AudioEncoder2Configuration *src) (use soapcpp2 -Ed)
struct tt__AudioEncoder2Configuration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Mime name of the supported audio format. For definitions see tt:AudioEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type xs:string.
    char*                                Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional multicast configuration of the audio stream.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "SampleRate" of XSD type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__VideoAnalyticsConfiguration operations:
/// - soap_default_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) reset members to default
/// - int soap_read_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) serialize to a sink
/// - tt__VideoAnalyticsConfiguration* soap_dup_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration* dst, tt__VideoAnalyticsConfiguration *src) returns deep copy of tt__VideoAnalyticsConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoAnalyticsConfiguration(tt__VideoAnalyticsConfiguration*) deep deletes tt__VideoAnalyticsConfiguration data members, use only on dst after soap_dup_tt__VideoAnalyticsConfiguration(NULL, tt__VideoAnalyticsConfiguration *dst, tt__VideoAnalyticsConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoAnalyticsConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    struct tt__RuleEngineConfiguration*  RuleEngineConfiguration        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__MetadataConfiguration operations:
/// - soap_default_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) reset members to default
/// - int soap_read_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) deserialize from a source
/// - int soap_write_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) serialize to a sink
/// - tt__MetadataConfiguration* soap_dup_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration* dst, tt__MetadataConfiguration *src) returns deep copy of tt__MetadataConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MetadataConfiguration(tt__MetadataConfiguration*) deep deletes tt__MetadataConfiguration data members, use only on dst after soap_dup_tt__MetadataConfiguration(NULL, tt__MetadataConfiguration *dst, tt__MetadataConfiguration *src) (use soapcpp2 -Ed)
struct tt__MetadataConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZFilter.
    struct tt__PTZFilter*                PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventSubscription.
    struct tt__EventSubscription*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type xs:boolean.
    enum xsd__boolean*                   Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    struct tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
/// Attribute "CompressionType" of XSD type xs:string.
   @char*                                CompressionType                0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video outputs.
/// </BLOCKQUOTE></PRE>
/// struct tt__VideoOutput operations:
/// - soap_default_tt__VideoOutput(soap*, tt__VideoOutput*) reset members to default
/// - int soap_read_tt__VideoOutput(soap*, tt__VideoOutput*) deserialize from a source
/// - int soap_write_tt__VideoOutput(soap*, tt__VideoOutput*) serialize to a sink
/// - tt__VideoOutput* soap_dup_tt__VideoOutput(soap*, tt__VideoOutput* dst, tt__VideoOutput *src) returns deep copy of tt__VideoOutput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutput(tt__VideoOutput*) deep deletes tt__VideoOutput data members, use only on dst after soap_dup_tt__VideoOutput(NULL, tt__VideoOutput *dst, tt__VideoOutput *src) (use soapcpp2 -Ed)
struct tt__VideoOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Layout" of XSD type "http://www.onvif.org/ver10/schema":Layout.
    struct tt__Layout*                   Layout                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Resolution of the display in Pixel.
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refresh rate of the display in Hertz.
/// </BLOCKQUOTE></PRE>
/// Element "RefreshRate" of XSD type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Aspect ratio of the display as physical extent of width divided by height.
/// </BLOCKQUOTE></PRE>
/// Element "AspectRatio" of XSD type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    struct tt__VideoOutputExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__VideoOutputConfiguration operations:
/// - soap_default_tt__VideoOutputConfiguration(soap*, tt__VideoOutputConfiguration*) reset members to default
/// - int soap_read_tt__VideoOutputConfiguration(soap*, tt__VideoOutputConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoOutputConfiguration(soap*, tt__VideoOutputConfiguration*) serialize to a sink
/// - tt__VideoOutputConfiguration* soap_dup_tt__VideoOutputConfiguration(soap*, tt__VideoOutputConfiguration* dst, tt__VideoOutputConfiguration *src) returns deep copy of tt__VideoOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoOutputConfiguration(tt__VideoOutputConfiguration*) deep deletes tt__VideoOutputConfiguration data members, use only on dst after soap_dup_tt__VideoOutputConfiguration(NULL, tt__VideoOutputConfiguration *dst, tt__VideoOutputConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
/// struct tt__AudioOutput operations:
/// - soap_default_tt__AudioOutput(soap*, tt__AudioOutput*) reset members to default
/// - int soap_read_tt__AudioOutput(soap*, tt__AudioOutput*) deserialize from a source
/// - int soap_write_tt__AudioOutput(soap*, tt__AudioOutput*) serialize to a sink
/// - tt__AudioOutput* soap_dup_tt__AudioOutput(soap*, tt__AudioOutput* dst, tt__AudioOutput *src) returns deep copy of tt__AudioOutput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioOutput(tt__AudioOutput*) deep deletes tt__AudioOutput data members, use only on dst after soap_dup_tt__AudioOutput(NULL, tt__AudioOutput *dst, tt__AudioOutput *src) (use soapcpp2 -Ed)
struct tt__AudioOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__AudioOutputConfiguration operations:
/// - soap_default_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) reset members to default
/// - int soap_read_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) serialize to a sink
/// - tt__AudioOutputConfiguration* soap_dup_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration* dst, tt__AudioOutputConfiguration *src) returns deep copy of tt__AudioOutputConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioOutputConfiguration(tt__AudioOutputConfiguration*) deep deletes tt__AudioOutputConfiguration data members, use only on dst after soap_dup_tt__AudioOutputConfiguration(NULL, tt__AudioOutputConfiguration *dst, tt__AudioOutputConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Element "SendPrimacy" of XSD type xs:anyURI.
    xsd__anyURI                          SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevel" of XSD type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// <PRE><BLOCKQUOTE>
///   The Audio Decoder Configuration does not contain any that parameter to configure the
///   decoding .A decoder shall decode every data it receives (according to its capabilities).
/// </BLOCKQUOTE></PRE>
/// struct tt__AudioDecoderConfiguration operations:
/// - soap_default_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration*) reset members to default
/// - int soap_read_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration*) deserialize from a source
/// - int soap_write_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration*) serialize to a sink
/// - tt__AudioDecoderConfiguration* soap_dup_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration* dst, tt__AudioDecoderConfiguration *src) returns deep copy of tt__AudioDecoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AudioDecoderConfiguration(tt__AudioDecoderConfiguration*) deep deletes tt__AudioDecoderConfiguration data members, use only on dst after soap_dup_tt__AudioDecoderConfiguration(NULL, tt__AudioDecoderConfiguration *dst, tt__AudioDecoderConfiguration *src) (use soapcpp2 -Ed)
struct tt__AudioDecoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// struct tt__NetworkInterface operations:
/// - soap_default_tt__NetworkInterface(soap*, tt__NetworkInterface*) reset members to default
/// - int soap_read_tt__NetworkInterface(soap*, tt__NetworkInterface*) deserialize from a source
/// - int soap_write_tt__NetworkInterface(soap*, tt__NetworkInterface*) serialize to a sink
/// - tt__NetworkInterface* soap_dup_tt__NetworkInterface(soap*, tt__NetworkInterface* dst, tt__NetworkInterface *src) returns deep copy of tt__NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterface(tt__NetworkInterface*) deep deletes tt__NetworkInterface data members, use only on dst after soap_dup_tt__NetworkInterface(NULL, tt__NetworkInterface *dst, tt__NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__NetworkInterface
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
/// Element "Info" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    struct tt__NetworkInterfaceInfo*     Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    struct tt__NetworkInterfaceLink*     Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    struct tt__IPv4NetworkInterface*     IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    struct tt__IPv6NetworkInterface*     IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    struct tt__NetworkInterfaceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
///
/// struct tt__CertificateUsage operations:
/// - soap_default_tt__CertificateUsage(soap*, tt__CertificateUsage*) reset members to default
/// - int soap_read_tt__CertificateUsage(soap*, tt__CertificateUsage*) deserialize from a source
/// - int soap_write_tt__CertificateUsage(soap*, tt__CertificateUsage*) serialize to a sink
/// - tt__CertificateUsage* soap_dup_tt__CertificateUsage(soap*, tt__CertificateUsage* dst, tt__CertificateUsage *src) returns deep copy of tt__CertificateUsage src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateUsage(tt__CertificateUsage*) deep deletes tt__CertificateUsage data members, use only on dst after soap_dup_tt__CertificateUsage(NULL, tt__CertificateUsage *dst, tt__CertificateUsage *src) (use soapcpp2 -Ed)
struct tt__CertificateUsage
{
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Attribute "Critical" of XSD type xs:boolean.
   @enum xsd__boolean                    Critical                       1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// struct tt__RelayOutput operations:
/// - soap_default_tt__RelayOutput(soap*, tt__RelayOutput*) reset members to default
/// - int soap_read_tt__RelayOutput(soap*, tt__RelayOutput*) deserialize from a source
/// - int soap_write_tt__RelayOutput(soap*, tt__RelayOutput*) serialize to a sink
/// - tt__RelayOutput* soap_dup_tt__RelayOutput(soap*, tt__RelayOutput* dst, tt__RelayOutput *src) returns deep copy of tt__RelayOutput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelayOutput(tt__RelayOutput*) deep deletes tt__RelayOutput data members, use only on dst after soap_dup_tt__RelayOutput(NULL, tt__RelayOutput *dst, tt__RelayOutput *src) (use soapcpp2 -Ed)
struct tt__RelayOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Properties" of XSD type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// struct tt__DigitalInput operations:
/// - soap_default_tt__DigitalInput(soap*, tt__DigitalInput*) reset members to default
/// - int soap_read_tt__DigitalInput(soap*, tt__DigitalInput*) deserialize from a source
/// - int soap_write_tt__DigitalInput(soap*, tt__DigitalInput*) serialize to a sink
/// - tt__DigitalInput* soap_dup_tt__DigitalInput(soap*, tt__DigitalInput* dst, tt__DigitalInput *src) returns deep copy of tt__DigitalInput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DigitalInput(tt__DigitalInput*) deep deletes tt__DigitalInput data members, use only on dst after soap_dup_tt__DigitalInput(NULL, tt__DigitalInput *dst, tt__DigitalInput *src) (use soapcpp2 -Ed)
struct tt__DigitalInput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicate the Digital IdleState status.
/// </BLOCKQUOTE></PRE>
/// Attribute "IdleState" of XSD type "http://www.onvif.org/ver10/schema":DigitalIdleState.
   @enum tt__DigitalIdleState*           IdleState                      0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// struct tt__PTZNode operations:
/// - soap_default_tt__PTZNode(soap*, tt__PTZNode*) reset members to default
/// - int soap_read_tt__PTZNode(soap*, tt__PTZNode*) deserialize from a source
/// - int soap_write_tt__PTZNode(soap*, tt__PTZNode*) serialize to a sink
/// - tt__PTZNode* soap_dup_tt__PTZNode(soap*, tt__PTZNode* dst, tt__PTZNode *src) returns deep copy of tt__PTZNode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZNode(tt__PTZNode*) deep deletes tt__PTZNode data members, use only on dst after soap_dup_tt__PTZNode(NULL, tt__PTZNode *dst, tt__PTZNode *src) (use soapcpp2 -Ed)
struct tt__PTZNode
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPTZSpaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresets" of XSD type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "HomeSupported" of XSD type xs:boolean.
    enum xsd__boolean                    HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
   $int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    struct tt__PTZNodeExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
/// Attribute "FixedHomePosition" of XSD type xs:boolean.
   @enum xsd__boolean*                   FixedHomePosition              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__PTZConfiguration operations:
/// - soap_default_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) reset members to default
/// - int soap_read_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) deserialize from a source
/// - int soap_write_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) serialize to a sink
/// - tt__PTZConfiguration* soap_dup_tt__PTZConfiguration(soap*, tt__PTZConfiguration* dst, tt__PTZConfiguration *src) returns deep copy of tt__PTZConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZConfiguration(tt__PTZConfiguration*) deep deletes tt__PTZConfiguration data members, use only on dst after soap_dup_tt__PTZConfiguration(NULL, tt__PTZConfiguration *dst, tt__PTZConfiguration *src) (use soapcpp2 -Ed)
struct tt__PTZConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "NodeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsolutePantTiltPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsoluteZoomPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativePanTiltTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativeZoomTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousPanTiltVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousZoomVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZSpeed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZTimeout" of XSD type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltLimits" of XSD type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    struct tt__PanTiltLimits*            PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomLimits" of XSD type "http://www.onvif.org/ver10/schema":ZoomLimits.
    struct tt__ZoomLimits*               ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    struct tt__PTZConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when moving.
/// </BLOCKQUOTE></PRE>
/// Attribute "MoveRamp" of XSD type xs:int.
   @int*                                 MoveRamp                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when recalling presets.
/// </BLOCKQUOTE></PRE>
/// Attribute "PresetRamp" of XSD type xs:int.
   @int*                                 PresetRamp                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when executing PresetTours.
/// </BLOCKQUOTE></PRE>
/// Attribute "PresetTourRamp" of XSD type xs:int.
   @int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
///
/// struct tt__Object operations:
/// - soap_default_tt__Object(soap*, tt__Object*) reset members to default
/// - int soap_read_tt__Object(soap*, tt__Object*) deserialize from a source
/// - int soap_write_tt__Object(soap*, tt__Object*) serialize to a sink
/// - tt__Object* soap_dup_tt__Object(soap*, tt__Object* dst, tt__Object *src) returns deep copy of tt__Object src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Object(tt__Object*) deep deletes tt__Object data members, use only on dst after soap_dup_tt__Object(NULL, tt__Object *dst, tt__Object *src) (use soapcpp2 -Ed)
struct tt__Object
{
/// INHERITED FROM tt__ObjectId:
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
//  END OF INHERITED FROM tt__ObjectId
/// Element "Appearance" of XSD type "http://www.onvif.org/ver10/schema":Appearance.
    struct tt__Appearance*               Appearance                     0;	///< Optional element.
/// Element "Behaviour" of XSD type "http://www.onvif.org/ver10/schema":Behaviour.
    struct tt__Behaviour*                Behaviour                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectExtension.
    struct tt__ObjectExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
///
/// struct tt__EventFilter operations:
/// - soap_default_tt__EventFilter(soap*, tt__EventFilter*) reset members to default
/// - int soap_read_tt__EventFilter(soap*, tt__EventFilter*) deserialize from a source
/// - int soap_write_tt__EventFilter(soap*, tt__EventFilter*) serialize to a sink
/// - tt__EventFilter* soap_dup_tt__EventFilter(soap*, tt__EventFilter* dst, tt__EventFilter *src) returns deep copy of tt__EventFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventFilter(tt__EventFilter*) deep deletes tt__EventFilter data members, use only on dst after soap_dup_tt__EventFilter(NULL, tt__EventFilter *dst, tt__EventFilter *src) (use soapcpp2 -Ed)
struct tt__EventFilter
{
/// INHERITED FROM wsnt__FilterType:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
//  END OF INHERITED FROM wsnt__FilterType
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__AnalyticsEngine operations:
/// - soap_default_tt__AnalyticsEngine(soap*, tt__AnalyticsEngine*) reset members to default
/// - int soap_read_tt__AnalyticsEngine(soap*, tt__AnalyticsEngine*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngine(soap*, tt__AnalyticsEngine*) serialize to a sink
/// - tt__AnalyticsEngine* soap_dup_tt__AnalyticsEngine(soap*, tt__AnalyticsEngine* dst, tt__AnalyticsEngine *src) returns deep copy of tt__AnalyticsEngine src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngine(tt__AnalyticsEngine*) deep deletes tt__AnalyticsEngine data members, use only on dst after soap_dup_tt__AnalyticsEngine(NULL, tt__AnalyticsEngine *dst, tt__AnalyticsEngine *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngine
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    struct tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__AnalyticsEngineInput operations:
/// - soap_default_tt__AnalyticsEngineInput(soap*, tt__AnalyticsEngineInput*) reset members to default
/// - int soap_read_tt__AnalyticsEngineInput(soap*, tt__AnalyticsEngineInput*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineInput(soap*, tt__AnalyticsEngineInput*) serialize to a sink
/// - tt__AnalyticsEngineInput* soap_dup_tt__AnalyticsEngineInput(soap*, tt__AnalyticsEngineInput* dst, tt__AnalyticsEngineInput *src) returns deep copy of tt__AnalyticsEngineInput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineInput(tt__AnalyticsEngineInput*) deep deletes tt__AnalyticsEngineInput data members, use only on dst after soap_dup_tt__AnalyticsEngineInput(NULL, tt__AnalyticsEngineInput *dst, tt__AnalyticsEngineInput *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineInput
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "SourceIdentification" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentification.
    struct tt__SourceIdentification*     SourceIdentification           1;	///< Required element.
/// Element "VideoInput" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoInput                     1;	///< Required element.
/// Element "MetadataInput" of XSD type "http://www.onvif.org/ver10/schema":MetadataInput.
    struct tt__MetadataInput*            MetadataInput                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// struct tt__AnalyticsEngineControl operations:
/// - soap_default_tt__AnalyticsEngineControl(soap*, tt__AnalyticsEngineControl*) reset members to default
/// - int soap_read_tt__AnalyticsEngineControl(soap*, tt__AnalyticsEngineControl*) deserialize from a source
/// - int soap_write_tt__AnalyticsEngineControl(soap*, tt__AnalyticsEngineControl*) serialize to a sink
/// - tt__AnalyticsEngineControl* soap_dup_tt__AnalyticsEngineControl(soap*, tt__AnalyticsEngineControl* dst, tt__AnalyticsEngineControl *src) returns deep copy of tt__AnalyticsEngineControl src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsEngineControl(tt__AnalyticsEngineControl*) deep deletes tt__AnalyticsEngineControl data members, use only on dst after soap_dup_tt__AnalyticsEngineControl(NULL, tt__AnalyticsEngineControl *dst, tt__AnalyticsEngineControl *src) (use soapcpp2 -Ed)
struct tt__AnalyticsEngineControl
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This informational parameter is read-only. Deprecated for Media2 Service.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine (AnalyticsEngine) being controlled.
/// </BLOCKQUOTE></PRE>
/// Element "EngineToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// </BLOCKQUOTE></PRE>
/// Element "EngineConfigToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Tokens of the input (AnalyticsEngineInput) configuration applied.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeInputToken               1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputToken                     1;
/// <PRE><BLOCKQUOTE>
///   Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeReceiverToken            1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  ReceiverToken                  1;
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// Element "Subscription" of XSD type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   Subscription                   1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// struct tt__OSDConfiguration operations:
/// - soap_default_tt__OSDConfiguration(soap*, tt__OSDConfiguration*) reset members to default
/// - int soap_read_tt__OSDConfiguration(soap*, tt__OSDConfiguration*) deserialize from a source
/// - int soap_write_tt__OSDConfiguration(soap*, tt__OSDConfiguration*) serialize to a sink
/// - tt__OSDConfiguration* soap_dup_tt__OSDConfiguration(soap*, tt__OSDConfiguration* dst, tt__OSDConfiguration *src) returns deep copy of tt__OSDConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDConfiguration(tt__OSDConfiguration*) deep deletes tt__OSDConfiguration data members, use only on dst after soap_dup_tt__OSDConfiguration(NULL, tt__OSDConfiguration *dst, tt__OSDConfiguration *src) (use soapcpp2 -Ed)
struct tt__OSDConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":OSDReference.
    struct tt__OSDReference*             VideoSourceConfigurationToken  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of OSD.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":OSDType.
    enum tt__OSDType                     Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position configuration of OSD.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":OSDPosConfiguration.
    struct tt__OSDPosConfiguration*      Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Text configuration of OSD. It shall be present when the value of Type field is Text.
/// </BLOCKQUOTE></PRE>
/// Element "TextString" of XSD type "http://www.onvif.org/ver10/schema":OSDTextConfiguration.
    struct tt__OSDTextConfiguration*     TextString                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image configuration of OSD. It shall be present when the value of Type field is Image
/// </BLOCKQUOTE></PRE>
/// Element "Image" of XSD type "http://www.onvif.org/ver10/schema":OSDImgConfiguration.
    struct tt__OSDImgConfiguration*      Image                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationExtension.
    struct tt__OSDConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__SubscribeCreationFailedFaultType operations:
/// - soap_default_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType*) reset members to default
/// - int soap_read_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType*) serialize to a sink
/// - wsnt__SubscribeCreationFailedFaultType* soap_dup_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType* dst, wsnt__SubscribeCreationFailedFaultType *src) returns deep copy of wsnt__SubscribeCreationFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscribeCreationFailedFaultType(wsnt__SubscribeCreationFailedFaultType*) deep deletes wsnt__SubscribeCreationFailedFaultType data members, use only on dst after soap_dup_wsnt__SubscribeCreationFailedFaultType(NULL, wsnt__SubscribeCreationFailedFaultType *dst, wsnt__SubscribeCreationFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__SubscribeCreationFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode operations:
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_ErrorCode* soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode* dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_ErrorCode(_wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deep deletes _wsnt__SubscribeCreationFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(NULL, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__SubscribeCreationFailedFaultType_Description operations:
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_Description(soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) reset members to default
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_Description(soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_Description(soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_Description* soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(soap*, _wsnt__SubscribeCreationFailedFaultType_Description* dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_Description(_wsnt__SubscribeCreationFailedFaultType_Description*) deep deletes _wsnt__SubscribeCreationFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(NULL, _wsnt__SubscribeCreationFailedFaultType_Description *dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__SubscribeCreationFailedFaultType_FaultCause operations:
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_FaultCause* soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause* dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_FaultCause(_wsnt__SubscribeCreationFailedFaultType_FaultCause*) deep deletes _wsnt__SubscribeCreationFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(NULL, _wsnt__SubscribeCreationFailedFaultType_FaultCause *dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__InvalidFilterFaultType operations:
/// - soap_default_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType*) reset members to default
/// - int soap_read_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType*) serialize to a sink
/// - wsnt__InvalidFilterFaultType* soap_dup_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType* dst, wsnt__InvalidFilterFaultType *src) returns deep copy of wsnt__InvalidFilterFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidFilterFaultType(wsnt__InvalidFilterFaultType*) deep deletes wsnt__InvalidFilterFaultType data members, use only on dst after soap_dup_wsnt__InvalidFilterFaultType(NULL, wsnt__InvalidFilterFaultType *dst, wsnt__InvalidFilterFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidFilterFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__InvalidFilterFaultType_ErrorCode operations:
/// - soap_default__wsnt__InvalidFilterFaultType_ErrorCode(soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__InvalidFilterFaultType_ErrorCode(soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_ErrorCode(soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_ErrorCode* soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(soap*, _wsnt__InvalidFilterFaultType_ErrorCode* dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidFilterFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_ErrorCode(_wsnt__InvalidFilterFaultType_ErrorCode*) deep deletes _wsnt__InvalidFilterFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(NULL, _wsnt__InvalidFilterFaultType_ErrorCode *dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__InvalidFilterFaultType_Description operations:
/// - soap_default__wsnt__InvalidFilterFaultType_Description(soap*, _wsnt__InvalidFilterFaultType_Description*) reset members to default
/// - int soap_read__wsnt__InvalidFilterFaultType_Description(soap*, _wsnt__InvalidFilterFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_Description(soap*, _wsnt__InvalidFilterFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_Description* soap_dup__wsnt__InvalidFilterFaultType_Description(soap*, _wsnt__InvalidFilterFaultType_Description* dst, _wsnt__InvalidFilterFaultType_Description *src) returns deep copy of _wsnt__InvalidFilterFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_Description(_wsnt__InvalidFilterFaultType_Description*) deep deletes _wsnt__InvalidFilterFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_Description(NULL, _wsnt__InvalidFilterFaultType_Description *dst, _wsnt__InvalidFilterFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__InvalidFilterFaultType_FaultCause operations:
/// - soap_default__wsnt__InvalidFilterFaultType_FaultCause(soap*, _wsnt__InvalidFilterFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__InvalidFilterFaultType_FaultCause(soap*, _wsnt__InvalidFilterFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_FaultCause(soap*, _wsnt__InvalidFilterFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_FaultCause* soap_dup__wsnt__InvalidFilterFaultType_FaultCause(soap*, _wsnt__InvalidFilterFaultType_FaultCause* dst, _wsnt__InvalidFilterFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidFilterFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_FaultCause(_wsnt__InvalidFilterFaultType_FaultCause*) deep deletes _wsnt__InvalidFilterFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_FaultCause(NULL, _wsnt__InvalidFilterFaultType_FaultCause *dst, _wsnt__InvalidFilterFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 1..unbounded.
   $int                                  __sizeUnknownFilter            1;
/// Array _QName* of size 1..unbounded.
    _QName*                              UnknownFilter                  1;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__TopicExpressionDialectUnknownFaultType operations:
/// - soap_default_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType*) reset members to default
/// - int soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType*) serialize to a sink
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType* dst, wsnt__TopicExpressionDialectUnknownFaultType *src) returns deep copy of wsnt__TopicExpressionDialectUnknownFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionDialectUnknownFaultType(wsnt__TopicExpressionDialectUnknownFaultType*) deep deletes wsnt__TopicExpressionDialectUnknownFaultType data members, use only on dst after soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(NULL, wsnt__TopicExpressionDialectUnknownFaultType *dst, wsnt__TopicExpressionDialectUnknownFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode operations:
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__TopicExpressionDialectUnknownFaultType_Description operations:
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) reset members to default
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_Description* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description* dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_Description(_wsnt__TopicExpressionDialectUnknownFaultType_Description*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_Description *dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause operations:
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__InvalidTopicExpressionFaultType operations:
/// - soap_default_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType*) reset members to default
/// - int soap_read_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidTopicExpressionFaultType* soap_dup_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType* dst, wsnt__InvalidTopicExpressionFaultType *src) returns deep copy of wsnt__InvalidTopicExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidTopicExpressionFaultType(wsnt__InvalidTopicExpressionFaultType*) deep deletes wsnt__InvalidTopicExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidTopicExpressionFaultType(NULL, wsnt__InvalidTopicExpressionFaultType *dst, wsnt__InvalidTopicExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidTopicExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode operations:
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode* dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_ErrorCode(_wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidTopicExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__InvalidTopicExpressionFaultType_Description operations:
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_Description(soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) reset members to default
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_Description(soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_Description(soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_Description* soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(soap*, _wsnt__InvalidTopicExpressionFaultType_Description* dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_Description(_wsnt__InvalidTopicExpressionFaultType_Description*) deep deletes _wsnt__InvalidTopicExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(NULL, _wsnt__InvalidTopicExpressionFaultType_Description *dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__InvalidTopicExpressionFaultType_FaultCause operations:
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause* dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_FaultCause(_wsnt__InvalidTopicExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidTopicExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(NULL, _wsnt__InvalidTopicExpressionFaultType_FaultCause *dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__TopicNotSupportedFaultType operations:
/// - soap_default_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType*) reset members to default
/// - int soap_read_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType*) serialize to a sink
/// - wsnt__TopicNotSupportedFaultType* soap_dup_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType* dst, wsnt__TopicNotSupportedFaultType *src) returns deep copy of wsnt__TopicNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicNotSupportedFaultType(wsnt__TopicNotSupportedFaultType*) deep deletes wsnt__TopicNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__TopicNotSupportedFaultType(NULL, wsnt__TopicNotSupportedFaultType *dst, wsnt__TopicNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__TopicNotSupportedFaultType_ErrorCode operations:
/// - soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode(soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_ErrorCode* soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode* dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_ErrorCode(_wsnt__TopicNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__TopicNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(NULL, _wsnt__TopicNotSupportedFaultType_ErrorCode *dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__TopicNotSupportedFaultType_Description operations:
/// - soap_default__wsnt__TopicNotSupportedFaultType_Description(soap*, _wsnt__TopicNotSupportedFaultType_Description*) reset members to default
/// - int soap_read__wsnt__TopicNotSupportedFaultType_Description(soap*, _wsnt__TopicNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_Description(soap*, _wsnt__TopicNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_Description* soap_dup__wsnt__TopicNotSupportedFaultType_Description(soap*, _wsnt__TopicNotSupportedFaultType_Description* dst, _wsnt__TopicNotSupportedFaultType_Description *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_Description(_wsnt__TopicNotSupportedFaultType_Description*) deep deletes _wsnt__TopicNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_Description(NULL, _wsnt__TopicNotSupportedFaultType_Description *dst, _wsnt__TopicNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__TopicNotSupportedFaultType_FaultCause operations:
/// - soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_FaultCause(soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_FaultCause* soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(soap*, _wsnt__TopicNotSupportedFaultType_FaultCause* dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_FaultCause(_wsnt__TopicNotSupportedFaultType_FaultCause*) deep deletes _wsnt__TopicNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(NULL, _wsnt__TopicNotSupportedFaultType_FaultCause *dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__MultipleTopicsSpecifiedFaultType operations:
/// - soap_default_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType*) reset members to default
/// - int soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType*) deserialize from a source
/// - int soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType*) serialize to a sink
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType* dst, wsnt__MultipleTopicsSpecifiedFaultType *src) returns deep copy of wsnt__MultipleTopicsSpecifiedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__MultipleTopicsSpecifiedFaultType(wsnt__MultipleTopicsSpecifiedFaultType*) deep deletes wsnt__MultipleTopicsSpecifiedFaultType data members, use only on dst after soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(NULL, wsnt__MultipleTopicsSpecifiedFaultType *dst, wsnt__MultipleTopicsSpecifiedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode operations:
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__MultipleTopicsSpecifiedFaultType_Description operations:
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) reset members to default
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_Description* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description* dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_Description(_wsnt__MultipleTopicsSpecifiedFaultType_Description*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_Description data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_Description *dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause operations:
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__InvalidProducerPropertiesExpressionFaultType operations:
/// - soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) reset members to default
/// - int soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType* dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) returns deep copy of wsnt__InvalidProducerPropertiesExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidProducerPropertiesExpressionFaultType(wsnt__InvalidProducerPropertiesExpressionFaultType*) deep deletes wsnt__InvalidProducerPropertiesExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(NULL, wsnt__InvalidProducerPropertiesExpressionFaultType *dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode operations:
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description operations:
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) reset members to default
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(_wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause operations:
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__InvalidMessageContentExpressionFaultType operations:
/// - soap_default_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType*) reset members to default
/// - int soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_dup_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType* dst, wsnt__InvalidMessageContentExpressionFaultType *src) returns deep copy of wsnt__InvalidMessageContentExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidMessageContentExpressionFaultType(wsnt__InvalidMessageContentExpressionFaultType*) deep deletes wsnt__InvalidMessageContentExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidMessageContentExpressionFaultType(NULL, wsnt__InvalidMessageContentExpressionFaultType *dst, wsnt__InvalidMessageContentExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode operations:
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__InvalidMessageContentExpressionFaultType_Description operations:
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) reset members to default
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description(soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_Description* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description* dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_Description(_wsnt__InvalidMessageContentExpressionFaultType_Description*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(NULL, _wsnt__InvalidMessageContentExpressionFaultType_Description *dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause operations:
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(_wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(NULL, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnrecognizedPolicyRequestFaultType operations:
/// - soap_default_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType*) reset members to default
/// - int soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType* dst, wsnt__UnrecognizedPolicyRequestFaultType *src) returns deep copy of wsnt__UnrecognizedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnrecognizedPolicyRequestFaultType(wsnt__UnrecognizedPolicyRequestFaultType*) deep deletes wsnt__UnrecognizedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(NULL, wsnt__UnrecognizedPolicyRequestFaultType *dst, wsnt__UnrecognizedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnrecognizedPolicyRequestFaultType_Description operations:
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_Description* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description* dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_Description(_wsnt__UnrecognizedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_Description *dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause operations:
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
   $int                                  __sizeUnrecognizedPolicy       0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnrecognizedPolicy             0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnsupportedPolicyRequestFaultType operations:
/// - soap_default_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType*) reset members to default
/// - int soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_dup_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType* dst, wsnt__UnsupportedPolicyRequestFaultType *src) returns deep copy of wsnt__UnsupportedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnsupportedPolicyRequestFaultType(wsnt__UnsupportedPolicyRequestFaultType*) deep deletes wsnt__UnsupportedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnsupportedPolicyRequestFaultType(NULL, wsnt__UnsupportedPolicyRequestFaultType *dst, wsnt__UnsupportedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnsupportedPolicyRequestFaultType_Description operations:
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description(soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_Description* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description* dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_Description(_wsnt__UnsupportedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(NULL, _wsnt__UnsupportedPolicyRequestFaultType_Description *dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause operations:
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(_wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
   $int                                  __sizeUnsupportedPolicy        0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnsupportedPolicy              0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__NotifyMessageNotSupportedFaultType operations:
/// - soap_default_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType*) reset members to default
/// - int soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType*) serialize to a sink
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_dup_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType* dst, wsnt__NotifyMessageNotSupportedFaultType *src) returns deep copy of wsnt__NotifyMessageNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotifyMessageNotSupportedFaultType(wsnt__NotifyMessageNotSupportedFaultType*) deep deletes wsnt__NotifyMessageNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__NotifyMessageNotSupportedFaultType(NULL, wsnt__NotifyMessageNotSupportedFaultType *dst, wsnt__NotifyMessageNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode operations:
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(NULL, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__NotifyMessageNotSupportedFaultType_Description operations:
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) reset members to default
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description(soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_Description* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description* dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_Description(_wsnt__NotifyMessageNotSupportedFaultType_Description*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(NULL, _wsnt__NotifyMessageNotSupportedFaultType_Description *dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause operations:
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(_wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(NULL, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnacceptableInitialTerminationTimeFaultType operations:
/// - soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) reset members to default
/// - int soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType* dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableInitialTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableInitialTerminationTimeFaultType(wsnt__UnacceptableInitialTerminationTimeFaultType*) deep deletes wsnt__UnacceptableInitialTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(NULL, wsnt__UnacceptableInitialTerminationTimeFaultType *dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description operations:
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(_wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause operations:
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__NoCurrentMessageOnTopicFaultType operations:
/// - soap_default_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType*) reset members to default
/// - int soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType*) deserialize from a source
/// - int soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType*) serialize to a sink
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType* dst, wsnt__NoCurrentMessageOnTopicFaultType *src) returns deep copy of wsnt__NoCurrentMessageOnTopicFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NoCurrentMessageOnTopicFaultType(wsnt__NoCurrentMessageOnTopicFaultType*) deep deletes wsnt__NoCurrentMessageOnTopicFaultType data members, use only on dst after soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(NULL, wsnt__NoCurrentMessageOnTopicFaultType *dst, wsnt__NoCurrentMessageOnTopicFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode operations:
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__NoCurrentMessageOnTopicFaultType_Description operations:
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) reset members to default
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_Description* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description* dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_Description(_wsnt__NoCurrentMessageOnTopicFaultType_Description*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_Description data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_Description *dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause operations:
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnableToGetMessagesFaultType operations:
/// - soap_default_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType*) reset members to default
/// - int soap_read_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType*) serialize to a sink
/// - wsnt__UnableToGetMessagesFaultType* soap_dup_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType* dst, wsnt__UnableToGetMessagesFaultType *src) returns deep copy of wsnt__UnableToGetMessagesFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToGetMessagesFaultType(wsnt__UnableToGetMessagesFaultType*) deep deletes wsnt__UnableToGetMessagesFaultType data members, use only on dst after soap_dup_wsnt__UnableToGetMessagesFaultType(NULL, wsnt__UnableToGetMessagesFaultType *dst, wsnt__UnableToGetMessagesFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToGetMessagesFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnableToGetMessagesFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_ErrorCode* soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode* dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_ErrorCode(_wsnt__UnableToGetMessagesFaultType_ErrorCode*) deep deletes _wsnt__UnableToGetMessagesFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(NULL, _wsnt__UnableToGetMessagesFaultType_ErrorCode *dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnableToGetMessagesFaultType_Description operations:
/// - soap_default__wsnt__UnableToGetMessagesFaultType_Description(soap*, _wsnt__UnableToGetMessagesFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_Description(soap*, _wsnt__UnableToGetMessagesFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_Description(soap*, _wsnt__UnableToGetMessagesFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_Description* soap_dup__wsnt__UnableToGetMessagesFaultType_Description(soap*, _wsnt__UnableToGetMessagesFaultType_Description* dst, _wsnt__UnableToGetMessagesFaultType_Description *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_Description(_wsnt__UnableToGetMessagesFaultType_Description*) deep deletes _wsnt__UnableToGetMessagesFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_Description(NULL, _wsnt__UnableToGetMessagesFaultType_Description *dst, _wsnt__UnableToGetMessagesFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnableToGetMessagesFaultType_FaultCause operations:
/// - soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause(soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_FaultCause* soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause* dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_FaultCause(_wsnt__UnableToGetMessagesFaultType_FaultCause*) deep deletes _wsnt__UnableToGetMessagesFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(NULL, _wsnt__UnableToGetMessagesFaultType_FaultCause *dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnableToDestroyPullPointFaultType operations:
/// - soap_default_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType*) reset members to default
/// - int soap_read_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType*) serialize to a sink
/// - wsnt__UnableToDestroyPullPointFaultType* soap_dup_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType* dst, wsnt__UnableToDestroyPullPointFaultType *src) returns deep copy of wsnt__UnableToDestroyPullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroyPullPointFaultType(wsnt__UnableToDestroyPullPointFaultType*) deep deletes wsnt__UnableToDestroyPullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroyPullPointFaultType(NULL, wsnt__UnableToDestroyPullPointFaultType *dst, wsnt__UnableToDestroyPullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(_wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(NULL, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnableToDestroyPullPointFaultType_Description operations:
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_Description(soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_Description* soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(soap*, _wsnt__UnableToDestroyPullPointFaultType_Description* dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_Description(_wsnt__UnableToDestroyPullPointFaultType_Description*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(NULL, _wsnt__UnableToDestroyPullPointFaultType_Description *dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause operations:
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_FaultCause* soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause* dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_FaultCause(_wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(NULL, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnableToCreatePullPointFaultType operations:
/// - soap_default_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType*) reset members to default
/// - int soap_read_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType*) serialize to a sink
/// - wsnt__UnableToCreatePullPointFaultType* soap_dup_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType* dst, wsnt__UnableToCreatePullPointFaultType *src) returns deep copy of wsnt__UnableToCreatePullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToCreatePullPointFaultType(wsnt__UnableToCreatePullPointFaultType*) deep deletes wsnt__UnableToCreatePullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToCreatePullPointFaultType(NULL, wsnt__UnableToCreatePullPointFaultType *dst, wsnt__UnableToCreatePullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToCreatePullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode* dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_ErrorCode(_wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToCreatePullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(NULL, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnableToCreatePullPointFaultType_Description operations:
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_Description(soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_Description(soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_Description(soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_Description* soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(soap*, _wsnt__UnableToCreatePullPointFaultType_Description* dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_Description(_wsnt__UnableToCreatePullPointFaultType_Description*) deep deletes _wsnt__UnableToCreatePullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(NULL, _wsnt__UnableToCreatePullPointFaultType_Description *dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnableToCreatePullPointFaultType_FaultCause operations:
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_FaultCause* soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause* dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_FaultCause(_wsnt__UnableToCreatePullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToCreatePullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(NULL, _wsnt__UnableToCreatePullPointFaultType_FaultCause *dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnacceptableTerminationTimeFaultType operations:
/// - soap_default_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType*) reset members to default
/// - int soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_dup_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType* dst, wsnt__UnacceptableTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableTerminationTimeFaultType(wsnt__UnacceptableTerminationTimeFaultType*) deep deletes wsnt__UnacceptableTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableTerminationTimeFaultType(NULL, wsnt__UnacceptableTerminationTimeFaultType *dst, wsnt__UnacceptableTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnacceptableTerminationTimeFaultType_Description operations:
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_Description(_wsnt__UnacceptableTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause operations:
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__UnableToDestroySubscriptionFaultType operations:
/// - soap_default_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType*) reset members to default
/// - int soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType*) serialize to a sink
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_dup_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType* dst, wsnt__UnableToDestroySubscriptionFaultType *src) returns deep copy of wsnt__UnableToDestroySubscriptionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroySubscriptionFaultType(wsnt__UnableToDestroySubscriptionFaultType*) deep deletes wsnt__UnableToDestroySubscriptionFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroySubscriptionFaultType(NULL, wsnt__UnableToDestroySubscriptionFaultType *dst, wsnt__UnableToDestroySubscriptionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode operations:
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(NULL, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__UnableToDestroySubscriptionFaultType_Description operations:
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) reset members to default
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description(soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_Description* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description* dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_Description(_wsnt__UnableToDestroySubscriptionFaultType_Description*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(NULL, _wsnt__UnableToDestroySubscriptionFaultType_Description *dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause operations:
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(_wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(NULL, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__PauseFailedFaultType operations:
/// - soap_default_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType*) reset members to default
/// - int soap_read_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType*) serialize to a sink
/// - wsnt__PauseFailedFaultType* soap_dup_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType* dst, wsnt__PauseFailedFaultType *src) returns deep copy of wsnt__PauseFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__PauseFailedFaultType(wsnt__PauseFailedFaultType*) deep deletes wsnt__PauseFailedFaultType data members, use only on dst after soap_dup_wsnt__PauseFailedFaultType(NULL, wsnt__PauseFailedFaultType *dst, wsnt__PauseFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__PauseFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__PauseFailedFaultType_ErrorCode operations:
/// - soap_default__wsnt__PauseFailedFaultType_ErrorCode(soap*, _wsnt__PauseFailedFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__PauseFailedFaultType_ErrorCode(soap*, _wsnt__PauseFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_ErrorCode(soap*, _wsnt__PauseFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_ErrorCode* soap_dup__wsnt__PauseFailedFaultType_ErrorCode(soap*, _wsnt__PauseFailedFaultType_ErrorCode* dst, _wsnt__PauseFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__PauseFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_ErrorCode(_wsnt__PauseFailedFaultType_ErrorCode*) deep deletes _wsnt__PauseFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_ErrorCode(NULL, _wsnt__PauseFailedFaultType_ErrorCode *dst, _wsnt__PauseFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__PauseFailedFaultType_Description operations:
/// - soap_default__wsnt__PauseFailedFaultType_Description(soap*, _wsnt__PauseFailedFaultType_Description*) reset members to default
/// - int soap_read__wsnt__PauseFailedFaultType_Description(soap*, _wsnt__PauseFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_Description(soap*, _wsnt__PauseFailedFaultType_Description*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_Description* soap_dup__wsnt__PauseFailedFaultType_Description(soap*, _wsnt__PauseFailedFaultType_Description* dst, _wsnt__PauseFailedFaultType_Description *src) returns deep copy of _wsnt__PauseFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_Description(_wsnt__PauseFailedFaultType_Description*) deep deletes _wsnt__PauseFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_Description(NULL, _wsnt__PauseFailedFaultType_Description *dst, _wsnt__PauseFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__PauseFailedFaultType_FaultCause operations:
/// - soap_default__wsnt__PauseFailedFaultType_FaultCause(soap*, _wsnt__PauseFailedFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__PauseFailedFaultType_FaultCause(soap*, _wsnt__PauseFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_FaultCause(soap*, _wsnt__PauseFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_FaultCause* soap_dup__wsnt__PauseFailedFaultType_FaultCause(soap*, _wsnt__PauseFailedFaultType_FaultCause* dst, _wsnt__PauseFailedFaultType_FaultCause *src) returns deep copy of _wsnt__PauseFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_FaultCause(_wsnt__PauseFailedFaultType_FaultCause*) deep deletes _wsnt__PauseFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_FaultCause(NULL, _wsnt__PauseFailedFaultType_FaultCause *dst, _wsnt__PauseFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// struct wsnt__ResumeFailedFaultType operations:
/// - soap_default_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType*) reset members to default
/// - int soap_read_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType*) serialize to a sink
/// - wsnt__ResumeFailedFaultType* soap_dup_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType* dst, wsnt__ResumeFailedFaultType *src) returns deep copy of wsnt__ResumeFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__ResumeFailedFaultType(wsnt__ResumeFailedFaultType*) deep deletes wsnt__ResumeFailedFaultType data members, use only on dst after soap_dup_wsnt__ResumeFailedFaultType(NULL, wsnt__ResumeFailedFaultType *dst, wsnt__ResumeFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__ResumeFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// struct _wsnt__ResumeFailedFaultType_ErrorCode operations:
/// - soap_default__wsnt__ResumeFailedFaultType_ErrorCode(soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) reset members to default
/// - int soap_read__wsnt__ResumeFailedFaultType_ErrorCode(soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_ErrorCode(soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_ErrorCode* soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(soap*, _wsnt__ResumeFailedFaultType_ErrorCode* dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__ResumeFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_ErrorCode(_wsnt__ResumeFailedFaultType_ErrorCode*) deep deletes _wsnt__ResumeFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(NULL, _wsnt__ResumeFailedFaultType_ErrorCode *dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// @todo This mixed content complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
/// struct _wsnt__ResumeFailedFaultType_Description operations:
/// - soap_default__wsnt__ResumeFailedFaultType_Description(soap*, _wsnt__ResumeFailedFaultType_Description*) reset members to default
/// - int soap_read__wsnt__ResumeFailedFaultType_Description(soap*, _wsnt__ResumeFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_Description(soap*, _wsnt__ResumeFailedFaultType_Description*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_Description* soap_dup__wsnt__ResumeFailedFaultType_Description(soap*, _wsnt__ResumeFailedFaultType_Description* dst, _wsnt__ResumeFailedFaultType_Description *src) returns deep copy of _wsnt__ResumeFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_Description(_wsnt__ResumeFailedFaultType_Description*) deep deletes _wsnt__ResumeFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_Description(NULL, _wsnt__ResumeFailedFaultType_Description *dst, _wsnt__ResumeFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
/// struct _wsnt__ResumeFailedFaultType_FaultCause operations:
/// - soap_default__wsnt__ResumeFailedFaultType_FaultCause(soap*, _wsnt__ResumeFailedFaultType_FaultCause*) reset members to default
/// - int soap_read__wsnt__ResumeFailedFaultType_FaultCause(soap*, _wsnt__ResumeFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_FaultCause(soap*, _wsnt__ResumeFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_FaultCause* soap_dup__wsnt__ResumeFailedFaultType_FaultCause(soap*, _wsnt__ResumeFailedFaultType_FaultCause* dst, _wsnt__ResumeFailedFaultType_FaultCause *src) returns deep copy of _wsnt__ResumeFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_FaultCause(_wsnt__ResumeFailedFaultType_FaultCause*) deep deletes _wsnt__ResumeFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_FaultCause(NULL, _wsnt__ResumeFailedFaultType_FaultCause *dst, _wsnt__ResumeFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// struct wstop__TopicNamespaceType operations:
/// - soap_default_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType*) reset members to default
/// - int soap_read_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType*) deserialize from a source
/// - int soap_write_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType*) serialize to a sink
/// - wstop__TopicNamespaceType* soap_dup_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType* dst, wstop__TopicNamespaceType *src) returns deep copy of wstop__TopicNamespaceType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicNamespaceType(wstop__TopicNamespaceType*) deep deletes wstop__TopicNamespaceType data members, use only on dst after soap_dup_wstop__TopicNamespaceType(NULL, wstop__TopicNamespaceType *dst, wstop__TopicNamespaceType *src) (use soapcpp2 -Ed)
struct wstop__TopicNamespaceType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Size of Topic array is 0..unbounded.
   $int                                  __sizeTopic                    0;
/// struct _wstop__TopicNamespaceType_Topic operations:
/// - soap_default__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic*) reset members to default
/// - int soap_read__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic*) deserialize from a source
/// - int soap_write__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic*) serialize to a sink
/// - _wstop__TopicNamespaceType_Topic* soap_dup__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic* dst, _wstop__TopicNamespaceType_Topic *src) returns deep copy of _wstop__TopicNamespaceType_Topic src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wstop__TopicNamespaceType_Topic(_wstop__TopicNamespaceType_Topic*) deep deletes _wstop__TopicNamespaceType_Topic data members, use only on dst after soap_dup__wstop__TopicNamespaceType_Topic(NULL, _wstop__TopicNamespaceType_Topic *dst, _wstop__TopicNamespaceType_Topic *src) (use soapcpp2 -Ed)
    struct _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
   $int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of XSD type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression       parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of XSD type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// struct wstop__TopicType operations:
/// - soap_default_wstop__TopicType(soap*, wstop__TopicType*) reset members to default
/// - int soap_read_wstop__TopicType(soap*, wstop__TopicType*) deserialize from a source
/// - int soap_write_wstop__TopicType(soap*, wstop__TopicType*) serialize to a sink
/// - wstop__TopicType* soap_dup_wstop__TopicType(soap*, wstop__TopicType* dst, wstop__TopicType *src) returns deep copy of wstop__TopicType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicType(wstop__TopicType*) deep deletes wstop__TopicType data members, use only on dst after soap_dup_wstop__TopicType(NULL, wstop__TopicType *dst, wstop__TopicType *src) (use soapcpp2 -Ed)
struct wstop__TopicType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
   $int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// struct wstop__TopicSetType operations:
/// - soap_default_wstop__TopicSetType(soap*, wstop__TopicSetType*) reset members to default
/// - int soap_read_wstop__TopicSetType(soap*, wstop__TopicSetType*) deserialize from a source
/// - int soap_write_wstop__TopicSetType(soap*, wstop__TopicSetType*) serialize to a sink
/// - wstop__TopicSetType* soap_dup_wstop__TopicSetType(soap*, wstop__TopicSetType* dst, wstop__TopicSetType *src) returns deep copy of wstop__TopicSetType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicSetType(wstop__TopicSetType*) deep deletes wstop__TopicSetType data members, use only on dst after soap_dup_wstop__TopicSetType(NULL, wstop__TopicSetType *dst, wstop__TopicSetType *src) (use soapcpp2 -Ed)
struct wstop__TopicSetType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDReference is a complexType with simpleContent.
///
/// struct tt__OSDReference operations:
/// - soap_default_tt__OSDReference(soap*, tt__OSDReference*) reset members to default
/// - int soap_read_tt__OSDReference(soap*, tt__OSDReference*) deserialize from a source
/// - int soap_write_tt__OSDReference(soap*, tt__OSDReference*) serialize to a sink
/// - tt__OSDReference* soap_dup_tt__OSDReference(soap*, tt__OSDReference* dst, tt__OSDReference *src) returns deep copy of tt__OSDReference src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OSDReference(tt__OSDReference*) deep deletes tt__OSDReference data members, use only on dst after soap_dup_tt__OSDReference(NULL, tt__OSDReference *dst, tt__OSDReference *src) (use soapcpp2 -Ed)
struct tt__OSDReference
{
/// __item wraps ""http://www.onvif.org/ver10/schema":ReferenceToken" simpleContent.
    tt__ReferenceToken                   __item                        ;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of XSD type "http://www.onvif.org/ver10/schema":Polygon.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of XSD type "http://www.onvif.org/ver10/schema":Polyline.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of XSD type "http://www.onvif.org/ver10/schema":MetadataStream.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of XSD type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of XSD type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":Capabilities of XSD type "http://www.onvif.org/ver20/media/wsdl":Capabilities2.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":ConfigurationEnumeration of XSD type "http://www.onvif.org/ver20/media/wsdl":ConfigurationEnumeration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAnalyticsConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurations of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoSourceConfigurationOptions of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetVideoEncoderConfigurationOptions of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioSourceConfigurationOptions of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioEncoderConfigurationOptions of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetMetadataConfigurationOptions of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioOutputConfigurationOptions of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":GetAudioDecoderConfigurationOptions of XSD type "http://www.onvif.org/ver20/media/wsdl":GetConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":StartMulticastStreaming of XSD type "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreaming.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver20/media/wsdl":StopMulticastStreaming of XSD type "http://www.onvif.org/ver20/media/wsdl":StartStopMulticastStreaming.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tr2  service name:	Media2Binding 
//gsoap tr2  service type:	Media2 
//gsoap tr2  service namespace:	http://www.onvif.org/ver20/media/wsdl 
//gsoap tr2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref Media2Binding

  - @ref MediaBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page Media2Binding Binding "Media2Binding"

@section Media2Binding_operations Operations of Binding "Media2Binding"

  - @ref __tr2__GetServiceCapabilities

  - @ref __tr2__CreateProfile

  - @ref __tr2__GetProfiles

  - @ref __tr2__AddConfiguration

  - @ref __tr2__RemoveConfiguration

  - @ref __tr2__DeleteProfile

  - @ref __tr2__GetVideoSourceConfigurations

  - @ref __tr2__GetVideoEncoderConfigurations

  - @ref __tr2__GetAudioSourceConfigurations

  - @ref __tr2__GetAudioEncoderConfigurations

  - @ref __tr2__GetAnalyticsConfigurations

  - @ref __tr2__GetMetadataConfigurations

  - @ref __tr2__GetAudioOutputConfigurations

  - @ref __tr2__GetAudioDecoderConfigurations

  - @ref __tr2__SetVideoSourceConfiguration

  - @ref __tr2__SetVideoEncoderConfiguration

  - @ref __tr2__SetAudioSourceConfiguration

  - @ref __tr2__SetAudioEncoderConfiguration

  - @ref __tr2__SetMetadataConfiguration

  - @ref __tr2__SetAudioOutputConfiguration

  - @ref __tr2__SetAudioDecoderConfiguration

  - @ref __tr2__GetVideoSourceConfigurationOptions

  - @ref __tr2__GetVideoEncoderConfigurationOptions

  - @ref __tr2__GetAudioSourceConfigurationOptions

  - @ref __tr2__GetAudioEncoderConfigurationOptions

  - @ref __tr2__GetMetadataConfigurationOptions

  - @ref __tr2__GetAudioOutputConfigurationOptions

  - @ref __tr2__GetAudioDecoderConfigurationOptions

  - @ref __tr2__GetStreamUri

  - @ref __tr2__StartMulticastStreaming

  - @ref __tr2__StopMulticastStreaming

  - @ref __tr2__SetSynchronizationPoint

  - @ref __tr2__GetSnapshotUri

  - @ref __tr2__GetVideoSourceModes

  - @ref __tr2__SetVideoSourceMode

  - @ref __tr2__GetOSDs

  - @ref __tr2__GetOSDOptions

  - @ref __tr2__SetOSD

  - @ref __tr2__CreateOSD

  - @ref __tr2__DeleteOSD

@section Media2Binding_ports Endpoints of Binding "Media2Binding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__GetAudioOutputs

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__AddAudioOutputConfiguration

  - @ref __trt__AddAudioDecoderConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__RemoveAudioOutputConfiguration

  - @ref __trt__RemoveAudioDecoderConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetAudioOutputConfigurations

  - @ref __trt__GetAudioDecoderConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetAudioOutputConfiguration

  - @ref __trt__GetAudioDecoderConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__GetCompatibleAudioOutputConfigurations

  - @ref __trt__GetCompatibleAudioDecoderConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__SetAudioOutputConfiguration

  - @ref __trt__SetAudioDecoderConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetAudioOutputConfigurationOptions

  - @ref __trt__GetAudioDecoderConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

  - @ref __trt__GetVideoSourceModes

  - @ref __trt__SetVideoSourceMode

  - @ref __trt__GetOSDs

  - @ref __trt__GetOSD

  - @ref __trt__GetOSDOptions

  - @ref __trt__SetOSD

  - @ref __trt__CreateOSD

  - @ref __trt__DeleteOSD

@section MediaBinding_ports Endpoints of Binding "MediaBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   Media2Binding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetServiceCapabilities" of service binding "Media2Binding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__GetServiceCapabilities* tr2__GetServiceCapabilities,
    // output parameters:
    struct _tr2__GetServiceCapabilitiesResponse2*tr2__GetServiceCapabilitiesResponse2
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tr2__GetServiceCapabilities* tr2__GetServiceCapabilities,
    // output parameters:
    struct _tr2__GetServiceCapabilitiesResponse2*tr2__GetServiceCapabilitiesResponse2
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tr2  service method-style:	GetServiceCapabilities document
//gsoap tr2  service method-encoding:	GetServiceCapabilities literal
//gsoap tr2  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities
//gsoap tr2  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilitiesResponse
int __tr2__GetServiceCapabilities(
    struct _tr2__GetServiceCapabilities* tr2__GetServiceCapabilities,	///< Input parameter
    struct _tr2__GetServiceCapabilitiesResponse2*tr2__GetServiceCapabilitiesResponse2	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__CreateProfile" of service binding "Media2Binding".
This operation creates a new media profile. 
				A created profile created via this method may be
deleted via the DeleteProfile method.
				Optionally Configurations can be assinged to the
profile on creation. For details regarding profile assignement
				check also the method AddConfiguration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__CreateProfile*         tr2__CreateProfile,
    // output parameters:
    struct _tr2__CreateProfileResponse *tr2__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__CreateProfile(
    struct soap *soap,
    // input parameters:
    struct _tr2__CreateProfile*         tr2__CreateProfile,
    // output parameters:
    struct _tr2__CreateProfileResponse *tr2__CreateProfileResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	CreateProfile SOAP
//gsoap tr2  service method-style:	CreateProfile document
//gsoap tr2  service method-encoding:	CreateProfile literal
//gsoap tr2  service method-input-action:	CreateProfile http://www.onvif.org/ver20/media/wsdl/CreateProfile
//gsoap tr2  service method-output-action:	CreateProfile http://www.onvif.org/ver20/media/wsdl/CreateProfileResponse
int __tr2__CreateProfile(
    struct _tr2__CreateProfile*         tr2__CreateProfile,	///< Input parameter
    struct _tr2__CreateProfileResponse *tr2__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetProfiles" of service binding "Media2Binding".
Retrieve the profile with the specified token or all defined media profiles. If
no configuration types are defined only the profile names and token are returned.
				In case of provided configuration types all information
regarding these types is returned. Pass "All" to get all available configurations.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__GetProfiles*           tr2__GetProfiles,
    // output parameters:
    struct _tr2__GetProfilesResponse   *tr2__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetProfiles(
    struct soap *soap,
    // input parameters:
    struct _tr2__GetProfiles*           tr2__GetProfiles,
    // output parameters:
    struct _tr2__GetProfilesResponse   *tr2__GetProfilesResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetProfiles SOAP
//gsoap tr2  service method-style:	GetProfiles document
//gsoap tr2  service method-encoding:	GetProfiles literal
//gsoap tr2  service method-input-action:	GetProfiles http://www.onvif.org/ver20/media/wsdl/GetProfiles
//gsoap tr2  service method-output-action:	GetProfiles http://www.onvif.org/ver20/media/wsdl/GetProfilesResponse
int __tr2__GetProfiles(
    struct _tr2__GetProfiles*           tr2__GetProfiles,	///< Input parameter
    struct _tr2__GetProfilesResponse   *tr2__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__AddConfiguration                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__AddConfiguration" of service binding "Media2Binding".
This operation adds one or more Configurations to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. A device shall
support adding a compatible Configuration to a Profile containing a VideoSourceConfiguration
and shall
support streaming video data of such a profile.<br/>
				Note that OSD elements must be added via the CreateOSD
command.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/AddConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/AddConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/AddConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__AddConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__AddConfiguration*      tr2__AddConfiguration,
    // output parameters:
    struct _tr2__AddConfigurationResponse*tr2__AddConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__AddConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__AddConfiguration*      tr2__AddConfiguration,
    // output parameters:
    struct _tr2__AddConfigurationResponse*tr2__AddConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	AddConfiguration SOAP
//gsoap tr2  service method-style:	AddConfiguration document
//gsoap tr2  service method-encoding:	AddConfiguration literal
//gsoap tr2  service method-input-action:	AddConfiguration http://www.onvif.org/ver20/media/wsdl/AddConfiguration
//gsoap tr2  service method-output-action:	AddConfiguration http://www.onvif.org/ver20/media/wsdl/AddConfigurationResponse
int __tr2__AddConfiguration(
    struct _tr2__AddConfiguration*      tr2__AddConfiguration,	///< Input parameter
    struct _tr2__AddConfigurationResponse*tr2__AddConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__RemoveConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__RemoveConfiguration" of service binding "Media2Binding".
This operation removes the listed configurations from an existing media profile.
If the
				media profile does not contain one of the listed
configurations that item shall be ignored. <br/>
				Note that the token is only required for the OSD
items.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/RemoveConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__RemoveConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__RemoveConfiguration*   tr2__RemoveConfiguration,
    // output parameters:
    struct _tr2__RemoveConfigurationResponse*tr2__RemoveConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__RemoveConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__RemoveConfiguration*   tr2__RemoveConfiguration,
    // output parameters:
    struct _tr2__RemoveConfigurationResponse*tr2__RemoveConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	RemoveConfiguration SOAP
//gsoap tr2  service method-style:	RemoveConfiguration document
//gsoap tr2  service method-encoding:	RemoveConfiguration literal
//gsoap tr2  service method-input-action:	RemoveConfiguration http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration
//gsoap tr2  service method-output-action:	RemoveConfiguration http://www.onvif.org/ver20/media/wsdl/RemoveConfigurationResponse
int __tr2__RemoveConfiguration(
    struct _tr2__RemoveConfiguration*   tr2__RemoveConfiguration,	///< Input parameter
    struct _tr2__RemoveConfigurationResponse*tr2__RemoveConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__DeleteProfile" of service binding "Media2Binding".
This operation deletes a profile. Deletion of a profile is only possible for non-fixed
profiles

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__DeleteProfile*         tr2__DeleteProfile,
    // output parameters:
    struct _tr2__DeleteProfileResponse *tr2__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__DeleteProfile(
    struct soap *soap,
    // input parameters:
    struct _tr2__DeleteProfile*         tr2__DeleteProfile,
    // output parameters:
    struct _tr2__DeleteProfileResponse *tr2__DeleteProfileResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	DeleteProfile SOAP
//gsoap tr2  service method-style:	DeleteProfile document
//gsoap tr2  service method-encoding:	DeleteProfile literal
//gsoap tr2  service method-input-action:	DeleteProfile http://www.onvif.org/ver20/media/wsdl/DeleteProfile
//gsoap tr2  service method-output-action:	DeleteProfile http://www.onvif.org/ver20/media/wsdl/DeleteProfileResponse
int __tr2__DeleteProfile(
    struct _tr2__DeleteProfile*         tr2__DeleteProfile,	///< Input parameter
    struct _tr2__DeleteProfileResponse *tr2__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetVideoSourceConfigurations" of service binding "Media2Binding".
By default this operation lists all existing video source configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoSourceConfigurations,
    // output parameters:
    struct _tr2__GetVideoSourceConfigurationsResponse*tr2__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoSourceConfigurations,
    // output parameters:
    struct _tr2__GetVideoSourceConfigurationsResponse*tr2__GetVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap tr2  service method-style:	GetVideoSourceConfigurations document
//gsoap tr2  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap tr2  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations
//gsoap tr2  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationsResponse
int __tr2__GetVideoSourceConfigurations(
    struct tr2__GetConfiguration*       tr2__GetVideoSourceConfigurations,	///< Input parameter
    struct _tr2__GetVideoSourceConfigurationsResponse*tr2__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetVideoEncoderConfigurations" of service binding "Media2Binding".
By default this operation lists all existing video encoder configurations for a
device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoEncoderConfigurations,
    // output parameters:
    struct _tr2__GetVideoEncoderConfigurationsResponse*tr2__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoEncoderConfigurations,
    // output parameters:
    struct _tr2__GetVideoEncoderConfigurationsResponse*tr2__GetVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap tr2  service method-style:	GetVideoEncoderConfigurations document
//gsoap tr2  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap tr2  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations
//gsoap tr2  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationsResponse
int __tr2__GetVideoEncoderConfigurations(
    struct tr2__GetConfiguration*       tr2__GetVideoEncoderConfigurations,	///< Input parameter
    struct _tr2__GetVideoEncoderConfigurationsResponse*tr2__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioSourceConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio source configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdlGetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioSourceConfigurations,
    // output parameters:
    struct _tr2__GetAudioSourceConfigurationsResponse*tr2__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioSourceConfigurations,
    // output parameters:
    struct _tr2__GetAudioSourceConfigurationsResponse*tr2__GetAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap tr2  service method-style:	GetAudioSourceConfigurations document
//gsoap tr2  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap tr2  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver20/media/wsdlGetAudioSourceConfigurations/
//gsoap tr2  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver20/media/wsdlGetAudioSourceConfigurations/Response
int __tr2__GetAudioSourceConfigurations(
    struct tr2__GetConfiguration*       tr2__GetAudioSourceConfigurations,	///< Input parameter
    struct _tr2__GetAudioSourceConfigurationsResponse*tr2__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioEncoderConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio encoder configurations for a
device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioEncoderConfigurations,
    // output parameters:
    struct _tr2__GetAudioEncoderConfigurationsResponse*tr2__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioEncoderConfigurations,
    // output parameters:
    struct _tr2__GetAudioEncoderConfigurationsResponse*tr2__GetAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap tr2  service method-style:	GetAudioEncoderConfigurations document
//gsoap tr2  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap tr2  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations
//gsoap tr2  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationsResponse
int __tr2__GetAudioEncoderConfigurations(
    struct tr2__GetConfiguration*       tr2__GetAudioEncoderConfigurations,	///< Input parameter
    struct _tr2__GetAudioEncoderConfigurationsResponse*tr2__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAnalyticsConfigurations                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAnalyticsConfigurations" of service binding "Media2Binding".
By default this operation lists all existing video analytics configurations for
a device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAnalyticsConfigurations,
    // output parameters:
    struct _tr2__GetAnalyticsConfigurationsResponse*tr2__GetAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAnalyticsConfigurations,
    // output parameters:
    struct _tr2__GetAnalyticsConfigurationsResponse*tr2__GetAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAnalyticsConfigurations SOAP
//gsoap tr2  service method-style:	GetAnalyticsConfigurations document
//gsoap tr2  service method-encoding:	GetAnalyticsConfigurations literal
//gsoap tr2  service method-input-action:	GetAnalyticsConfigurations http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations
//gsoap tr2  service method-output-action:	GetAnalyticsConfigurations http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurationsResponse
int __tr2__GetAnalyticsConfigurations(
    struct tr2__GetConfiguration*       tr2__GetAnalyticsConfigurations,	///< Input parameter
    struct _tr2__GetAnalyticsConfigurationsResponse*tr2__GetAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetMetadataConfigurations" of service binding "Media2Binding".
By default this operation lists all existing metadata configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetMetadataConfigurations,
    // output parameters:
    struct _tr2__GetMetadataConfigurationsResponse*tr2__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetMetadataConfigurations,
    // output parameters:
    struct _tr2__GetMetadataConfigurationsResponse*tr2__GetMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap tr2  service method-style:	GetMetadataConfigurations document
//gsoap tr2  service method-encoding:	GetMetadataConfigurations literal
//gsoap tr2  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations
//gsoap tr2  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationsResponse
int __tr2__GetMetadataConfigurations(
    struct tr2__GetConfiguration*       tr2__GetMetadataConfigurations,	///< Input parameter
    struct _tr2__GetMetadataConfigurationsResponse*tr2__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioOutputConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio output configurations for a device.
Provide a profile token to list only configurations that are compatible with the
profile. If a configuration token is provided only a single configuration will
be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioOutputConfigurations,
    // output parameters:
    struct _tr2__GetAudioOutputConfigurationsResponse*tr2__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioOutputConfigurations,
    // output parameters:
    struct _tr2__GetAudioOutputConfigurationsResponse*tr2__GetAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap tr2  service method-style:	GetAudioOutputConfigurations document
//gsoap tr2  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap tr2  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations
//gsoap tr2  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationsResponse
int __tr2__GetAudioOutputConfigurations(
    struct tr2__GetConfiguration*       tr2__GetAudioOutputConfigurations,	///< Input parameter
    struct _tr2__GetAudioOutputConfigurationsResponse*tr2__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioDecoderConfigurations" of service binding "Media2Binding".
By default this operation lists all existing audio decoder configurations for a
device. Provide a profile token to list only configurations that are compatible
with the profile. If a configuration token is provided only a single configuration
will be returned.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioDecoderConfigurations,
    // output parameters:
    struct _tr2__GetAudioDecoderConfigurationsResponse*tr2__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioDecoderConfigurations,
    // output parameters:
    struct _tr2__GetAudioDecoderConfigurationsResponse*tr2__GetAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap tr2  service method-style:	GetAudioDecoderConfigurations document
//gsoap tr2  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap tr2  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations
//gsoap tr2  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationsResponse
int __tr2__GetAudioDecoderConfigurations(
    struct tr2__GetConfiguration*       tr2__GetAudioDecoderConfigurations,	///< Input parameter
    struct _tr2__GetAudioDecoderConfigurationsResponse*tr2__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetVideoSourceConfiguration" of service binding "Media2Binding".
This operation modifies a video source configuration. Running streams using this
configuration may be immediately updated according to the new settings. The changes
are not guaranteed to take effect unless the client requests a new stream URI and
restarts any affected stream. NVC methods for changing a running stream are out
of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetVideoSourceConfiguration* tr2__SetVideoSourceConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetVideoSourceConfiguration* tr2__SetVideoSourceConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap tr2  service method-style:	SetVideoSourceConfiguration document
//gsoap tr2  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap tr2  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration
//gsoap tr2  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfigurationResponse
int __tr2__SetVideoSourceConfiguration(
    struct _tr2__SetVideoSourceConfiguration* tr2__SetVideoSourceConfiguration,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetVideoEncoderConfiguration" of service binding "Media2Binding".
This operation modifies a video encoder configuration. Running streams using this
configuration may be immediately updated according to the new settings. The changes
are not guaranteed to take effect unless the client requests a new stream URI and
restarts any affected stream. NVC methods for changing a running stream are out
of scope for this specification. <br/>SessionTimeout is provided as a hint for
keeping rtsp session by a device. If necessary the device may adapt parameter values
for SessionTimeout elements without returning an error. For the time between keep
alive calls the client shall adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetVideoEncoderConfiguration* tr2__SetVideoEncoderConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetVideoEncoderConfiguration* tr2__SetVideoEncoderConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap tr2  service method-style:	SetVideoEncoderConfiguration document
//gsoap tr2  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap tr2  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration
//gsoap tr2  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfigurationResponse
int __tr2__SetVideoEncoderConfiguration(
    struct _tr2__SetVideoEncoderConfiguration* tr2__SetVideoEncoderConfiguration,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetAudioSourceConfiguration" of service binding "Media2Binding".
This operation modifies an audio source configuration. Running streams using this
configuration
				may be immediately updated according to the new
settings. The changes are not guaranteed
				to take effect unless the client requests a new
stream URI and restarts any affected stream
				NVC methods for changing a running stream are out
of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetAudioSourceConfiguration* tr2__SetAudioSourceConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetAudioSourceConfiguration* tr2__SetAudioSourceConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap tr2  service method-style:	SetAudioSourceConfiguration document
//gsoap tr2  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap tr2  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration
//gsoap tr2  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfigurationResponse
int __tr2__SetAudioSourceConfiguration(
    struct _tr2__SetAudioSourceConfiguration* tr2__SetAudioSourceConfiguration,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetAudioEncoderConfiguration" of service binding "Media2Binding".
This operation modifies an audio encoder configuration. Running streams using this
configuration may be immediately updated
				according to the new settings. The changes are not
guaranteed to take effect unless the client
				requests a new stream URI and restarts any affected
streams. NVC methods for changing a
				running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetAudioEncoderConfiguration* tr2__SetAudioEncoderConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetAudioEncoderConfiguration* tr2__SetAudioEncoderConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap tr2  service method-style:	SetAudioEncoderConfiguration document
//gsoap tr2  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap tr2  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration
//gsoap tr2  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfigurationResponse
int __tr2__SetAudioEncoderConfiguration(
    struct _tr2__SetAudioEncoderConfiguration* tr2__SetAudioEncoderConfiguration,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetMetadataConfiguration" of service binding "Media2Binding".
This operation modifies a metadata configuration. Running streams using this configuration
may be updated immediately
				according to the new settings. The changes are not
guaranteed to take effect unless the client
				requests a new stream URI and restarts any affected
streams. NVC methods for changing a
				running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetMetadataConfiguration* tr2__SetMetadataConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetMetadataConfiguration* tr2__SetMetadataConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap tr2  service method-style:	SetMetadataConfiguration document
//gsoap tr2  service method-encoding:	SetMetadataConfiguration literal
//gsoap tr2  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration
//gsoap tr2  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver20/media/wsdl/SetMetadataConfigurationResponse
int __tr2__SetMetadataConfiguration(
    struct _tr2__SetMetadataConfiguration* tr2__SetMetadataConfiguration,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetAudioOutputConfiguration" of service binding "Media2Binding".
This operation modifies an audio output configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetAudioOutputConfiguration* tr2__SetAudioOutputConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetAudioOutputConfiguration* tr2__SetAudioOutputConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap tr2  service method-style:	SetAudioOutputConfiguration document
//gsoap tr2  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap tr2  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration
//gsoap tr2  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfigurationResponse
int __tr2__SetAudioOutputConfiguration(
    struct _tr2__SetAudioOutputConfiguration* tr2__SetAudioOutputConfiguration,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetAudioDecoderConfiguration" of service binding "Media2Binding".
This operation modifies an audio decoder configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetAudioDecoderConfiguration* tr2__SetAudioDecoderConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetAudioDecoderConfiguration* tr2__SetAudioDecoderConfiguration,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap tr2  service method-style:	SetAudioDecoderConfiguration document
//gsoap tr2  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap tr2  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration
//gsoap tr2  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfigurationResponse
int __tr2__SetAudioDecoderConfiguration(
    struct _tr2__SetAudioDecoderConfiguration* tr2__SetAudioDecoderConfiguration,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetVideoSourceConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
				reconfigured If a video source configuration is
specified, the options shall concern that
				particular configuration. If a media profile is
specified, the options shall be compatible with
				that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdlGetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _tr2__GetVideoSourceConfigurationOptionsResponse*tr2__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _tr2__GetVideoSourceConfigurationOptionsResponse*tr2__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap tr2  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap tr2  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap tr2  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap tr2  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdlGetVideoSourceConfigurationOptions/Response
int __tr2__GetVideoSourceConfigurationOptions(
    struct tr2__GetConfiguration*       tr2__GetVideoSourceConfigurationOptions,	///< Input parameter
    struct _tr2__GetVideoSourceConfigurationOptionsResponse*tr2__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetVideoEncoderConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _tr2__GetVideoEncoderConfigurationOptionsResponse*tr2__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _tr2__GetVideoEncoderConfigurationOptionsResponse*tr2__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap tr2  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap tr2  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap tr2  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap tr2  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __tr2__GetVideoEncoderConfigurationOptions(
    struct tr2__GetConfiguration*       tr2__GetVideoEncoderConfigurationOptions,	///< Input parameter
    struct _tr2__GetVideoEncoderConfigurationOptionsResponse*tr2__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioSourceConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
				reconfigured. If an audio source configuration is
specified, the options shall concern that
				particular configuration. If a media profile is
specified, the options shall be compatible with
				that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioSourceConfigurationOptionsResponse*tr2__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioSourceConfigurationOptionsResponse*tr2__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap tr2  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap tr2  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap tr2  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap tr2  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __tr2__GetAudioSourceConfigurationOptions(
    struct tr2__GetConfiguration*       tr2__GetAudioSourceConfigurationOptions,	///< Input parameter
    struct _tr2__GetAudioSourceConfigurationOptionsResponse*tr2__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioEncoderConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
				reconfigured.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioEncoderConfigurationOptionsResponse*tr2__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioEncoderConfigurationOptionsResponse*tr2__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap tr2  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap tr2  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap tr2  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap tr2  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __tr2__GetAudioEncoderConfigurationOptions(
    struct tr2__GetConfiguration*       tr2__GetAudioEncoderConfigurationOptions,	///< Input parameter
    struct _tr2__GetAudioEncoderConfigurationOptionsResponse*tr2__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetMetadataConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetMetadataConfigurationOptions,
    // output parameters:
    struct _tr2__GetMetadataConfigurationOptionsResponse*tr2__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetMetadataConfigurationOptions,
    // output parameters:
    struct _tr2__GetMetadataConfigurationOptionsResponse*tr2__GetMetadataConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap tr2  service method-style:	GetMetadataConfigurationOptions document
//gsoap tr2  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap tr2  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions
//gsoap tr2  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptionsResponse
int __tr2__GetMetadataConfigurationOptions(
    struct tr2__GetConfiguration*       tr2__GetMetadataConfigurationOptions,	///< Input parameter
    struct _tr2__GetMetadataConfigurationOptionsResponse*tr2__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioOutputConfigurationOptions" of service binding "Media2Binding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioOutputConfigurationOptionsResponse*tr2__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioOutputConfigurationOptionsResponse*tr2__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap tr2  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap tr2  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap tr2  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap tr2  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __tr2__GetAudioOutputConfigurationOptions(
    struct tr2__GetConfiguration*       tr2__GetAudioOutputConfigurationOptions,	///< Input parameter
    struct _tr2__GetAudioOutputConfigurationOptionsResponse*tr2__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetAudioDecoderConfigurationOptions" of service binding "Media2Binding".
This command list the audio decoding capabilities for a given profile and configuration
of a
				device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioDecoderConfigurationOptionsResponse*tr2__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct tr2__GetConfiguration*       tr2__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _tr2__GetAudioDecoderConfigurationOptionsResponse*tr2__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap tr2  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap tr2  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap tr2  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap tr2  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __tr2__GetAudioDecoderConfigurationOptions(
    struct tr2__GetConfiguration*       tr2__GetAudioDecoderConfigurationOptions,	///< Input parameter
    struct _tr2__GetAudioDecoderConfigurationOptionsResponse*tr2__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetStreamUri" of service binding "Media2Binding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
				the control protocol. The returned URI shall remain
valid indefinitely even if the profile is changed. <br/>
				Defined stream types are
				 <ul>
				 	<li>RtspUnicast		RTSP streaming RTP
as UDP Unicast.</li>
				 	<li>RtspMulticast	RTSP streaming RTP
as UDP Multicast.</li>
				 	<li>RTSP			RTSP streaming
RTP over TCP.</li>
				 	<li>RtspOverHttp	Tunneling both the
RTSP control channel and the RTP stream over HTTP or HTTPS.</li>
				 </ul>
				If a multicast stream is requested the VideoEncoderConfiguration,
AudioEncoderConfiguration and MetadataConfiguration element inside the corresponding

				media profile must be configured with valid multicast
settings.<br/>
				For full compatibility with other ONVIF services
a device should not generate Uris longer than
				128 octets.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__GetStreamUri*          tr2__GetStreamUri,
    // output parameters:
    struct _tr2__GetStreamUriResponse  *tr2__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetStreamUri(
    struct soap *soap,
    // input parameters:
    struct _tr2__GetStreamUri*          tr2__GetStreamUri,
    // output parameters:
    struct _tr2__GetStreamUriResponse  *tr2__GetStreamUriResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetStreamUri SOAP
//gsoap tr2  service method-style:	GetStreamUri document
//gsoap tr2  service method-encoding:	GetStreamUri literal
//gsoap tr2  service method-input-action:	GetStreamUri http://www.onvif.org/ver20/media/wsdl/GetStreamUri
//gsoap tr2  service method-output-action:	GetStreamUri http://www.onvif.org/ver20/media/wsdl/GetStreamUriResponse
int __tr2__GetStreamUri(
    struct _tr2__GetStreamUri*          tr2__GetStreamUri,	///< Input parameter
    struct _tr2__GetStreamUriResponse  *tr2__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__StartMulticastStreaming" of service binding "Media2Binding".
This command starts multicast streaming using a specified media profile of a device.
				Streaming continues until StopMulticastStreaming
is called for the same Profile. The
				streaming shall continue after a reboot of the device
until a StopMulticastStreaming request is
				received. The multicast address, port and TTL are
configured in the
				VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration
				respectively.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__StartStopMulticastStreaming* tr2__StartMulticastStreaming,
    // output parameters:
    struct _tr2__StartStopMulticastStreamingResponse*tr2__StartStopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct tr2__StartStopMulticastStreaming* tr2__StartMulticastStreaming,
    // output parameters:
    struct _tr2__StartStopMulticastStreamingResponse*tr2__StartStopMulticastStreamingResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	StartMulticastStreaming SOAP
//gsoap tr2  service method-style:	StartMulticastStreaming document
//gsoap tr2  service method-encoding:	StartMulticastStreaming literal
//gsoap tr2  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming
//gsoap tr2  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StartMulticastStreamingResponse
int __tr2__StartMulticastStreaming(
    struct tr2__StartStopMulticastStreaming* tr2__StartMulticastStreaming,	///< Input parameter
    struct _tr2__StartStopMulticastStreamingResponse*tr2__StartStopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__StopMulticastStreaming" of service binding "Media2Binding".
This command stops multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct tr2__StartStopMulticastStreaming* tr2__StopMulticastStreaming,
    // output parameters:
    struct _tr2__StartStopMulticastStreamingResponse*tr2__StartStopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct tr2__StartStopMulticastStreaming* tr2__StopMulticastStreaming,
    // output parameters:
    struct _tr2__StartStopMulticastStreamingResponse*tr2__StartStopMulticastStreamingResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	StopMulticastStreaming SOAP
//gsoap tr2  service method-style:	StopMulticastStreaming document
//gsoap tr2  service method-encoding:	StopMulticastStreaming literal
//gsoap tr2  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming
//gsoap tr2  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver20/media/wsdl/StopMulticastStreamingResponse
int __tr2__StopMulticastStreaming(
    struct tr2__StartStopMulticastStreaming* tr2__StopMulticastStreaming,	///< Input parameter
    struct _tr2__StartStopMulticastStreamingResponse*tr2__StartStopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetSynchronizationPoint" of service binding "Media2Binding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetSynchronizationPoint* tr2__SetSynchronizationPoint,
    // output parameters:
    struct _tr2__SetSynchronizationPointResponse*tr2__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetSynchronizationPoint* tr2__SetSynchronizationPoint,
    // output parameters:
    struct _tr2__SetSynchronizationPointResponse*tr2__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tr2  service method-style:	SetSynchronizationPoint document
//gsoap tr2  service method-encoding:	SetSynchronizationPoint literal
//gsoap tr2  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint
//gsoap tr2  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPointResponse
int __tr2__SetSynchronizationPoint(
    struct _tr2__SetSynchronizationPoint* tr2__SetSynchronizationPoint,	///< Input parameter
    struct _tr2__SetSynchronizationPointResponse*tr2__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetSnapshotUri" of service binding "Media2Binding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__GetSnapshotUri*        tr2__GetSnapshotUri,
    // output parameters:
    struct _tr2__GetSnapshotUriResponse*tr2__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    struct _tr2__GetSnapshotUri*        tr2__GetSnapshotUri,
    // output parameters:
    struct _tr2__GetSnapshotUriResponse*tr2__GetSnapshotUriResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetSnapshotUri SOAP
//gsoap tr2  service method-style:	GetSnapshotUri document
//gsoap tr2  service method-encoding:	GetSnapshotUri literal
//gsoap tr2  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri
//gsoap tr2  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver20/media/wsdl/GetSnapshotUriResponse
int __tr2__GetSnapshotUri(
    struct _tr2__GetSnapshotUri*        tr2__GetSnapshotUri,	///< Input parameter
    struct _tr2__GetSnapshotUriResponse*tr2__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetVideoSourceModes" of service binding "Media2Binding".
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetVideoSourceModes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__GetVideoSourceModes*   tr2__GetVideoSourceModes,
    // output parameters:
    struct _tr2__GetVideoSourceModesResponse*tr2__GetVideoSourceModesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetVideoSourceModes(
    struct soap *soap,
    // input parameters:
    struct _tr2__GetVideoSourceModes*   tr2__GetVideoSourceModes,
    // output parameters:
    struct _tr2__GetVideoSourceModesResponse*tr2__GetVideoSourceModesResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetVideoSourceModes SOAP
//gsoap tr2  service method-style:	GetVideoSourceModes document
//gsoap tr2  service method-encoding:	GetVideoSourceModes literal
//gsoap tr2  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes
//gsoap tr2  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModesResponse
int __tr2__GetVideoSourceModes(
    struct _tr2__GetVideoSourceModes*   tr2__GetVideoSourceModes,	///< Input parameter
    struct _tr2__GetVideoSourceModesResponse*tr2__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetVideoSourceMode" of service binding "Media2Binding".
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetVideoSourceMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetVideoSourceMode*    tr2__SetVideoSourceMode,
    // output parameters:
    struct _tr2__SetVideoSourceModeResponse*tr2__SetVideoSourceModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetVideoSourceMode(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetVideoSourceMode*    tr2__SetVideoSourceMode,
    // output parameters:
    struct _tr2__SetVideoSourceModeResponse*tr2__SetVideoSourceModeResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetVideoSourceMode SOAP
//gsoap tr2  service method-style:	SetVideoSourceMode document
//gsoap tr2  service method-encoding:	SetVideoSourceMode literal
//gsoap tr2  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode
//gsoap tr2  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver20/media/wsdl/SetVideoSourceModeResponse
int __tr2__SetVideoSourceMode(
    struct _tr2__SetVideoSourceMode*    tr2__SetVideoSourceMode,	///< Input parameter
    struct _tr2__SetVideoSourceModeResponse*tr2__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetOSDs" of service binding "Media2Binding".
Get the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetOSDsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetOSDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__GetOSDs*               tr2__GetOSDs,
    // output parameters:
    struct _tr2__GetOSDsResponse       *tr2__GetOSDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetOSDs(
    struct soap *soap,
    // input parameters:
    struct _tr2__GetOSDs*               tr2__GetOSDs,
    // output parameters:
    struct _tr2__GetOSDsResponse       *tr2__GetOSDsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetOSDs SOAP
//gsoap tr2  service method-style:	GetOSDs document
//gsoap tr2  service method-encoding:	GetOSDs literal
//gsoap tr2  service method-input-action:	GetOSDs http://www.onvif.org/ver20/media/wsdl/GetOSDs
//gsoap tr2  service method-output-action:	GetOSDs http://www.onvif.org/ver20/media/wsdl/GetOSDsResponse
int __tr2__GetOSDs(
    struct _tr2__GetOSDs*               tr2__GetOSDs,	///< Input parameter
    struct _tr2__GetOSDsResponse       *tr2__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__GetOSDOptions" of service binding "Media2Binding".
Get the OSD Options.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/GetOSDOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__GetOSDOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__GetOSDOptions*         tr2__GetOSDOptions,
    // output parameters:
    struct _tr2__GetOSDOptionsResponse *tr2__GetOSDOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__GetOSDOptions(
    struct soap *soap,
    // input parameters:
    struct _tr2__GetOSDOptions*         tr2__GetOSDOptions,
    // output parameters:
    struct _tr2__GetOSDOptionsResponse *tr2__GetOSDOptionsResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	GetOSDOptions SOAP
//gsoap tr2  service method-style:	GetOSDOptions document
//gsoap tr2  service method-encoding:	GetOSDOptions literal
//gsoap tr2  service method-input-action:	GetOSDOptions http://www.onvif.org/ver20/media/wsdl/GetOSDOptions
//gsoap tr2  service method-output-action:	GetOSDOptions http://www.onvif.org/ver20/media/wsdl/GetOSDOptionsResponse
int __tr2__GetOSDOptions(
    struct _tr2__GetOSDOptions*         tr2__GetOSDOptions,	///< Input parameter
    struct _tr2__GetOSDOptionsResponse *tr2__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__SetOSD" of service binding "Media2Binding".
Set the OSD

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/SetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__SetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__SetOSD*                tr2__SetOSD,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__SetOSD(
    struct soap *soap,
    // input parameters:
    struct _tr2__SetOSD*                tr2__SetOSD,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	SetOSD SOAP
//gsoap tr2  service method-style:	SetOSD document
//gsoap tr2  service method-encoding:	SetOSD literal
//gsoap tr2  service method-input-action:	SetOSD http://www.onvif.org/ver20/media/wsdl/SetOSD
//gsoap tr2  service method-output-action:	SetOSD http://www.onvif.org/ver20/media/wsdl/SetOSDResponse
int __tr2__SetOSD(
    struct _tr2__SetOSD*                tr2__SetOSD,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__CreateOSD" of service binding "Media2Binding".
Create the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/CreateOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__CreateOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__CreateOSD*             tr2__CreateOSD,
    // output parameters:
    struct _tr2__CreateOSDResponse     *tr2__CreateOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__CreateOSD(
    struct soap *soap,
    // input parameters:
    struct _tr2__CreateOSD*             tr2__CreateOSD,
    // output parameters:
    struct _tr2__CreateOSDResponse     *tr2__CreateOSDResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	CreateOSD SOAP
//gsoap tr2  service method-style:	CreateOSD document
//gsoap tr2  service method-encoding:	CreateOSD literal
//gsoap tr2  service method-input-action:	CreateOSD http://www.onvif.org/ver20/media/wsdl/CreateOSD
//gsoap tr2  service method-output-action:	CreateOSD http://www.onvif.org/ver20/media/wsdl/CreateOSDResponse
int __tr2__CreateOSD(
    struct _tr2__CreateOSD*             tr2__CreateOSD,	///< Input parameter
    struct _tr2__CreateOSDResponse     *tr2__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tr2__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tr2__DeleteOSD" of service binding "Media2Binding".
Delete the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver20/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver20/media/wsdl/DeleteOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tr2__DeleteOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tr2__DeleteOSD*             tr2__DeleteOSD,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tr2__DeleteOSD(
    struct soap *soap,
    // input parameters:
    struct _tr2__DeleteOSD*             tr2__DeleteOSD,
    // output parameters:
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse
  );
@endcode

*/

//gsoap tr2  service method-protocol:	DeleteOSD SOAP
//gsoap tr2  service method-style:	DeleteOSD document
//gsoap tr2  service method-encoding:	DeleteOSD literal
//gsoap tr2  service method-input-action:	DeleteOSD http://www.onvif.org/ver20/media/wsdl/DeleteOSD
//gsoap tr2  service method-output-action:	DeleteOSD http://www.onvif.org/ver20/media/wsdl/DeleteOSDResponse
int __tr2__DeleteOSD(
    struct _tr2__DeleteOSD*             tr2__DeleteOSD,	///< Input parameter
    struct _tr2__SetConfigurationResponse*tr2__SetConfigurationResponse	///< Output parameter
);

/**

@page Media2Binding Binding "Media2Binding"

@section Media2Binding_policy_enablers Policy Enablers of Binding "Media2Binding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,	///< Input parameter
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSources" of service binding "MediaBinding".
This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSources*       trt__GetVideoSources,
    // output parameters:
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSources SOAP
//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap trt  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response
int __trt__GetVideoSources(
    struct _trt__GetVideoSources*       trt__GetVideoSources,	///< Input parameter
    struct _trt__GetVideoSourcesResponse*trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSources" of service binding "MediaBinding".
This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSources(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSources*       trt__GetAudioSources,
    // output parameters:
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSources SOAP
//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap trt  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse
int __trt__GetAudioSources(
    struct _trt__GetAudioSources*       trt__GetAudioSources,	///< Input parameter
    struct _trt__GetAudioSourcesResponse*trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputs" of service binding "MediaBinding".
This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,
    // output parameters:
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputs SOAP
//gsoap trt  service method-style:	GetAudioOutputs document
//gsoap trt  service method-encoding:	GetAudioOutputs literal
//gsoap trt  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap trt  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse
int __trt__GetAudioOutputs(
    struct _trt__GetAudioOutputs*       trt__GetAudioOutputs,	///< Input parameter
    struct _trt__GetAudioOutputsResponse*trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateProfile" of service binding "MediaBinding".
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    struct _trt__CreateProfile*         trt__CreateProfile,	///< Input parameter
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfile" of service binding "MediaBinding".
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    struct _trt__GetProfile*            trt__GetProfile,	///< Input parameter
    struct _trt__GetProfileResponse    *trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfiles" of service binding "MediaBinding".
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    struct _trt__GetProfiles*           trt__GetProfiles,	///< Input parameter
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding".
This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible VideoEncoderConfiguration to a Profile containing a
VideoSourceConfiguration and shall
support streaming video data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap trt  service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse
int __trt__AddVideoEncoderConfiguration(
    struct _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Input parameter
    struct _trt__AddVideoEncoderConfigurationResponse*trt__AddVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding".
This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,
    // output parameters:
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,
    // output parameters:
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap trt  service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse
int __trt__AddVideoSourceConfiguration(
    struct _trt__AddVideoSourceConfiguration* trt__AddVideoSourceConfiguration,	///< Input parameter
    struct _trt__AddVideoSourceConfigurationResponse*trt__AddVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioEncoderConfiguration to an existing media profile. If
a 
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible AudioEncoderConfiguration to a profile containing an
AudioSourceConfiguration and shall
support streaming audio data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap trt  service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse
int __trt__AddAudioEncoderConfiguration(
    struct _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Input parameter
    struct _trt__AddAudioEncoderConfigurationResponse*trt__AddAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding".
This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,
    // output parameters:
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,
    // output parameters:
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap trt  service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse
int __trt__AddAudioSourceConfiguration(
    struct _trt__AddAudioSourceConfiguration* trt__AddAudioSourceConfiguration,	///< Input parameter
    struct _trt__AddAudioSourceConfigurationResponse*trt__AddAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding".
This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,
    // output parameters:
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddPTZConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,
    // output parameters:
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddPTZConfiguration SOAP
//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-input-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap trt  service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse
int __trt__AddPTZConfiguration(
    struct _trt__AddPTZConfiguration*   trt__AddPTZConfiguration,	///< Input parameter
    struct _trt__AddPTZConfigurationResponse*trt__AddPTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse
int __trt__AddVideoAnalyticsConfiguration(
    struct _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__AddVideoAnalyticsConfigurationResponse*trt__AddVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding".
This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,
    // output parameters:
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,
    // output parameters:
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddMetadataConfiguration SOAP
//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-input-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap trt  service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse
int __trt__AddMetadataConfiguration(
    struct _trt__AddMetadataConfiguration* trt__AddMetadataConfiguration,	///< Input parameter
    struct _trt__AddMetadataConfigurationResponse*trt__AddMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioOutputConfiguration" of service binding "MediaBinding".
This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,
    // output parameters:
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,
    // output parameters:
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	AddAudioOutputConfiguration document
//gsoap trt  service method-encoding:	AddAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap trt  service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse
int __trt__AddAudioOutputConfiguration(
    struct _trt__AddAudioOutputConfiguration* trt__AddAudioOutputConfiguration,	///< Input parameter
    struct _trt__AddAudioOutputConfigurationResponse*trt__AddAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioDecoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	AddAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap trt  service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse
int __trt__AddAudioDecoderConfiguration(
    struct _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,	///< Input parameter
    struct _trt__AddAudioDecoderConfigurationResponse*trt__AddAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding".
This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse
int __trt__RemoveVideoEncoderConfiguration(
    struct _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Input parameter
    struct _trt__RemoveVideoEncoderConfigurationResponse*trt__RemoveVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding".
This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap trt  service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse
int __trt__RemoveVideoSourceConfiguration(
    struct _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Input parameter
    struct _trt__RemoveVideoSourceConfigurationResponse*trt__RemoveVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse
int __trt__RemoveAudioEncoderConfiguration(
    struct _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Input parameter
    struct _trt__RemoveAudioEncoderConfigurationResponse*trt__RemoveAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding".
This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap trt  service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse
int __trt__RemoveAudioSourceConfiguration(
    struct _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Input parameter
    struct _trt__RemoveAudioSourceConfigurationResponse*trt__RemoveAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding".
This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,
    // output parameters:
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemovePTZConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,
    // output parameters:
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemovePTZConfiguration SOAP
//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-input-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap trt  service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse
int __trt__RemovePTZConfiguration(
    struct _trt__RemovePTZConfiguration* trt__RemovePTZConfiguration,	///< Input parameter
    struct _trt__RemovePTZConfigurationResponse*trt__RemovePTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse
int __trt__RemoveVideoAnalyticsConfiguration(
    struct _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__RemoveVideoAnalyticsConfigurationResponse*trt__RemoveVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding".
This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,
    // output parameters:
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,
    // output parameters:
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveMetadataConfiguration SOAP
//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-input-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap trt  service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse
int __trt__RemoveMetadataConfiguration(
    struct _trt__RemoveMetadataConfiguration* trt__RemoveMetadataConfiguration,	///< Input parameter
    struct _trt__RemoveMetadataConfigurationResponse*trt__RemoveMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioOutputConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioOutputConfiguration" of service binding "MediaBinding".
This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioOutputConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap trt  service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse
int __trt__RemoveAudioOutputConfiguration(
    struct _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,	///< Input parameter
    struct _trt__RemoveAudioOutputConfigurationResponse*trt__RemoveAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioDecoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioDecoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	RemoveAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse
int __trt__RemoveAudioDecoderConfiguration(
    struct _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,	///< Input parameter
    struct _trt__RemoveAudioDecoderConfigurationResponse*trt__RemoveAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteProfile" of service binding "MediaBinding".
This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__DeleteProfile*         trt__DeleteProfile,
    // output parameters:
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__DeleteProfile*         trt__DeleteProfile,
    // output parameters:
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	DeleteProfile SOAP
//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-input-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap trt  service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse
int __trt__DeleteProfile(
    struct _trt__DeleteProfile*         trt__DeleteProfile,	///< Input parameter
    struct _trt__DeleteProfileResponse *trt__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse
int __trt__GetVideoSourceConfigurations(
    struct _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationsResponse*trt__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse
int __trt__GetVideoEncoderConfigurations(
    struct _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationsResponse*trt__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap trt  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response
int __trt__GetAudioSourceConfigurations(
    struct _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationsResponse*trt__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse
int __trt__GetAudioEncoderConfigurations(
    struct _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationsResponse*trt__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse
int __trt__GetVideoAnalyticsConfigurations(
    struct _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Input parameter
    struct _trt__GetVideoAnalyticsConfigurationsResponse*trt__GetVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding".
This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,
    // output parameters:
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,
    // output parameters:
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap trt  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse
int __trt__GetMetadataConfigurations(
    struct _trt__GetMetadataConfigurations* trt__GetMetadataConfigurations,	///< Input parameter
    struct _trt__GetMetadataConfigurationsResponse*trt__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse
int __trt__GetAudioOutputConfigurations(
    struct _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationsResponse*trt__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurations" of service binding "MediaBinding".
This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse
int __trt__GetAudioDecoderConfigurations(
    struct _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationsResponse*trt__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding".
If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap trt  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse
int __trt__GetVideoSourceConfiguration(
    struct _trt__GetVideoSourceConfiguration* trt__GetVideoSourceConfiguration,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationResponse*trt__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding".
If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse
int __trt__GetVideoEncoderConfiguration(
    struct _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationResponse*trt__GetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding".
The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap trt  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse
int __trt__GetAudioSourceConfiguration(
    struct _trt__GetAudioSourceConfiguration* trt__GetAudioSourceConfiguration,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationResponse*trt__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding".
The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse
int __trt__GetAudioEncoderConfiguration(
    struct _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationResponse*trt__GetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding".
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse
int __trt__GetVideoAnalyticsConfiguration(
    struct _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__GetVideoAnalyticsConfigurationResponse*trt__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding".
The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,
    // output parameters:
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,
    // output parameters:
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfiguration SOAP
//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-input-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap trt  service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse
int __trt__GetMetadataConfiguration(
    struct _trt__GetMetadataConfiguration* trt__GetMetadataConfiguration,	///< Input parameter
    struct _trt__GetMetadataConfigurationResponse*trt__GetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfiguration" of service binding "MediaBinding".
If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	GetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap trt  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse
int __trt__GetAudioOutputConfiguration(
    struct _trt__GetAudioOutputConfiguration* trt__GetAudioOutputConfiguration,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationResponse*trt__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfiguration" of service binding "MediaBinding".
If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse
int __trt__GetAudioDecoderConfiguration(
    struct _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationResponse*trt__GetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse
int __trt__GetCompatibleVideoEncoderConfigurations(
    struct _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding".
This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse
int __trt__GetCompatibleVideoSourceConfigurations(
    struct _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoSourceConfigurationsResponse*trt__GetCompatibleVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding".
This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse
int __trt__GetCompatibleAudioEncoderConfigurations(
    struct _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding".
This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse
int __trt__GetCompatibleAudioSourceConfigurations(
    struct _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioSourceConfigurationsResponse*trt__GetCompatibleAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Input parameter
    struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding".
This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap trt  service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse
int __trt__GetCompatibleMetadataConfigurations(
    struct _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Input parameter
    struct _trt__GetCompatibleMetadataConfigurationsResponse*trt__GetCompatibleMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioOutputConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the 
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse
int __trt__GetCompatibleAudioOutputConfigurations(
    struct _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioOutputConfigurationsResponse*trt__GetCompatibleAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioDecoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding".
This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse
int __trt__GetCompatibleAudioDecoderConfigurations(
    struct _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,	///< Input parameter
    struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*trt__GetCompatibleAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding".
This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,
    // output parameters:
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,
    // output parameters:
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap trt  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse
int __trt__SetVideoSourceConfiguration(
    struct _trt__SetVideoSourceConfiguration* trt__SetVideoSourceConfiguration,	///< Input parameter
    struct _trt__SetVideoSourceConfigurationResponse*trt__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding".
This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse
int __trt__SetVideoEncoderConfiguration(
    struct _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Input parameter
    struct _trt__SetVideoEncoderConfigurationResponse*trt__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding".
This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,
    // output parameters:
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,
    // output parameters:
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap trt  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse
int __trt__SetAudioSourceConfiguration(
    struct _trt__SetAudioSourceConfiguration* trt__SetAudioSourceConfiguration,	///< Input parameter
    struct _trt__SetAudioSourceConfigurationResponse*trt__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse
int __trt__SetAudioEncoderConfiguration(
    struct _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Input parameter
    struct _trt__SetAudioEncoderConfigurationResponse*trt__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding".
A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse
int __trt__SetVideoAnalyticsConfiguration(
    struct _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Input parameter
    struct _trt__SetVideoAnalyticsConfigurationResponse*trt__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding".
This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,
    // output parameters:
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,
    // output parameters:
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap trt  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse
int __trt__SetMetadataConfiguration(
    struct _trt__SetMetadataConfiguration* trt__SetMetadataConfiguration,	///< Input parameter
    struct _trt__SetMetadataConfigurationResponse*trt__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioOutputConfiguration" of service binding "MediaBinding".
This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,
    // output parameters:
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,
    // output parameters:
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	SetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap trt  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse
int __trt__SetAudioOutputConfiguration(
    struct _trt__SetAudioOutputConfiguration* trt__SetAudioOutputConfiguration,	///< Input parameter
    struct _trt__SetAudioOutputConfigurationResponse*trt__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioDecoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse
int __trt__SetAudioDecoderConfiguration(
    struct _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,	///< Input parameter
    struct _trt__SetAudioDecoderConfigurationResponse*trt__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap trt  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response
int __trt__GetVideoSourceConfigurationOptions(
    struct _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Input parameter
    struct _trt__GetVideoSourceConfigurationOptionsResponse*trt__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __trt__GetVideoEncoderConfigurationOptions(
    struct _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Input parameter
    struct _trt__GetVideoEncoderConfigurationOptionsResponse*trt__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __trt__GetAudioSourceConfigurationOptions(
    struct _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioSourceConfigurationOptionsResponse*trt__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __trt__GetAudioEncoderConfigurationOptions(
    struct _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioEncoderConfigurationOptionsResponse*trt__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap trt  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse
int __trt__GetMetadataConfigurationOptions(
    struct _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Input parameter
    struct _trt__GetMetadataConfigurationOptionsResponse*trt__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __trt__GetAudioOutputConfigurationOptions(
    struct _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioOutputConfigurationOptionsResponse*trt__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding".
This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __trt__GetAudioDecoderConfigurationOptions(
    struct _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,	///< Input parameter
    struct _trt__GetAudioDecoderConfigurationOptionsResponse*trt__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding".
The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // input parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetGuaranteedNumberOfVideoEncoderInstances SOAP
//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-input-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap trt  service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Input parameter
    struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetStreamUri" of service binding "MediaBinding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration element inside the corresponding 
media profile must be configured with valid multicast settings.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetStreamUri*          trt__GetStreamUri,
    // output parameters:
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetStreamUri(
    struct soap *soap,
    // input parameters:
    struct _trt__GetStreamUri*          trt__GetStreamUri,
    // output parameters:
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetStreamUri SOAP
//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-input-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap trt  service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse
int __trt__GetStreamUri(
    struct _trt__GetStreamUri*          trt__GetStreamUri,	///< Input parameter
    struct _trt__GetStreamUriResponse  *trt__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding".
This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,
    // output parameters:
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,
    // output parameters:
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	StartMulticastStreaming SOAP
//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap trt  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse
int __trt__StartMulticastStreaming(
    struct _trt__StartMulticastStreaming* trt__StartMulticastStreaming,	///< Input parameter
    struct _trt__StartMulticastStreamingResponse*trt__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding".
This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,
    // output parameters:
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,
    // output parameters:
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	StopMulticastStreaming SOAP
//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap trt  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse
int __trt__StopMulticastStreaming(
    struct _trt__StopMulticastStreaming* trt__StopMulticastStreaming,	///< Input parameter
    struct _trt__StopMulticastStreamingResponse*trt__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,
    // output parameters:
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,
    // output parameters:
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap trt  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse
int __trt__SetSynchronizationPoint(
    struct _trt__SetSynchronizationPoint* trt__SetSynchronizationPoint,	///< Input parameter
    struct _trt__SetSynchronizationPointResponse*trt__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetSnapshotUri" of service binding "MediaBinding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,	///< Input parameter
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceModes" of service binding "MediaBinding".
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceModes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,
    // output parameters:
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceModes(
    struct soap *soap,
    // input parameters:
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,
    // output parameters:
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetVideoSourceModes SOAP
//gsoap trt  service method-style:	GetVideoSourceModes document
//gsoap trt  service method-encoding:	GetVideoSourceModes literal
//gsoap trt  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes
//gsoap trt  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse
int __trt__GetVideoSourceModes(
    struct _trt__GetVideoSourceModes*   trt__GetVideoSourceModes,	///< Input parameter
    struct _trt__GetVideoSourceModesResponse*trt__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceMode" of service binding "MediaBinding".
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,
    // output parameters:
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceMode(
    struct soap *soap,
    // input parameters:
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,
    // output parameters:
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetVideoSourceMode SOAP
//gsoap trt  service method-style:	SetVideoSourceMode document
//gsoap trt  service method-encoding:	SetVideoSourceMode literal
//gsoap trt  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode
//gsoap trt  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse
int __trt__SetVideoSourceMode(
    struct _trt__SetVideoSourceMode*    trt__SetVideoSourceMode,	///< Input parameter
    struct _trt__SetVideoSourceModeResponse*trt__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDs" of service binding "MediaBinding".
Get the OSDs.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSDs*               trt__GetOSDs,
    // output parameters:
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDs(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSDs*               trt__GetOSDs,
    // output parameters:
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSDs SOAP
//gsoap trt  service method-style:	GetOSDs document
//gsoap trt  service method-encoding:	GetOSDs literal
//gsoap trt  service method-input-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDs
//gsoap trt  service method-output-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse
int __trt__GetOSDs(
    struct _trt__GetOSDs*               trt__GetOSDs,	///< Input parameter
    struct _trt__GetOSDsResponse       *trt__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSD" of service binding "MediaBinding".
Get the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSD*                trt__GetOSD,
    // output parameters:
    struct _trt__GetOSDResponse        *trt__GetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSD*                trt__GetOSD,
    // output parameters:
    struct _trt__GetOSDResponse        *trt__GetOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSD SOAP
//gsoap trt  service method-style:	GetOSD document
//gsoap trt  service method-encoding:	GetOSD literal
//gsoap trt  service method-input-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSD
//gsoap trt  service method-output-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSDResponse
int __trt__GetOSD(
    struct _trt__GetOSD*                trt__GetOSD,	///< Input parameter
    struct _trt__GetOSDResponse        *trt__GetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDOptions" of service binding "MediaBinding".
Get the OSD Options.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,
    // output parameters:
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDOptions(
    struct soap *soap,
    // input parameters:
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,
    // output parameters:
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetOSDOptions SOAP
//gsoap trt  service method-style:	GetOSDOptions document
//gsoap trt  service method-encoding:	GetOSDOptions literal
//gsoap trt  service method-input-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptions
//gsoap trt  service method-output-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse
int __trt__GetOSDOptions(
    struct _trt__GetOSDOptions*         trt__GetOSDOptions,	///< Input parameter
    struct _trt__GetOSDOptionsResponse *trt__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetOSD" of service binding "MediaBinding".
Set the OSD

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__SetOSD*                trt__SetOSD,
    // output parameters:
    struct _trt__SetOSDResponse        *trt__SetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__SetOSD*                trt__SetOSD,
    // output parameters:
    struct _trt__SetOSDResponse        *trt__SetOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	SetOSD SOAP
//gsoap trt  service method-style:	SetOSD document
//gsoap trt  service method-encoding:	SetOSD literal
//gsoap trt  service method-input-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSD
//gsoap trt  service method-output-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSDResponse
int __trt__SetOSD(
    struct _trt__SetOSD*                trt__SetOSD,	///< Input parameter
    struct _trt__SetOSDResponse        *trt__SetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateOSD" of service binding "MediaBinding".
Create the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__CreateOSD*             trt__CreateOSD,
    // output parameters:
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__CreateOSD*             trt__CreateOSD,
    // output parameters:
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	CreateOSD SOAP
//gsoap trt  service method-style:	CreateOSD document
//gsoap trt  service method-encoding:	CreateOSD literal
//gsoap trt  service method-input-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSD
//gsoap trt  service method-output-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse
int __trt__CreateOSD(
    struct _trt__CreateOSD*             trt__CreateOSD,	///< Input parameter
    struct _trt__CreateOSDResponse     *trt__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteOSD" of service binding "MediaBinding".
Delete the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__DeleteOSD*             trt__DeleteOSD,
    // output parameters:
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteOSD(
    struct soap *soap,
    // input parameters:
    struct _trt__DeleteOSD*             trt__DeleteOSD,
    // output parameters:
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	DeleteOSD SOAP
//gsoap trt  service method-style:	DeleteOSD document
//gsoap trt  service method-encoding:	DeleteOSD literal
//gsoap trt  service method-input-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSD
//gsoap trt  service method-output-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse
int __trt__DeleteOSD(
    struct _trt__DeleteOSD*             trt__DeleteOSD,	///< Input parameter
    struct _trt__DeleteOSDResponse     *trt__DeleteOSDResponse	///< Output parameter
);

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding "MediaBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <trt:GetServiceCapabilities> @ref _trt__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    @endcode

  - <trt:GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    @endcode

  - <trt:Capabilities> (use wsdl2h option -g to auto-generate type _trt__Capabilities)

  - <trt:GetVideoSources> @ref _trt__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSources(struct soap*, struct _trt__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSources(struct soap*, struct _trt__GetVideoSources*);
    @endcode

  - <trt:GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourcesResponse(struct soap*, struct _trt__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourcesResponse(struct soap*, struct _trt__GetVideoSourcesResponse*);
    @endcode

  - <trt:GetAudioSources> @ref _trt__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSources(struct soap*, struct _trt__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSources(struct soap*, struct _trt__GetAudioSources*);
    @endcode

  - <trt:GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourcesResponse(struct soap*, struct _trt__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourcesResponse(struct soap*, struct _trt__GetAudioSourcesResponse*);
    @endcode

  - <trt:GetAudioOutputs> @ref _trt__GetAudioOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputs(struct soap*, struct _trt__GetAudioOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputs(struct soap*, struct _trt__GetAudioOutputs*);
    @endcode

  - <trt:GetAudioOutputsResponse> @ref _trt__GetAudioOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputsResponse(struct soap*, struct _trt__GetAudioOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputsResponse(struct soap*, struct _trt__GetAudioOutputsResponse*);
    @endcode

  - <trt:CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    @endcode

  - <trt:CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    @endcode

  - <trt:GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    @endcode

  - <trt:GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    @endcode

  - <trt:GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    @endcode

  - <trt:GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    @endcode

  - <trt:AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfiguration(struct soap*, struct _trt__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfiguration(struct soap*, struct _trt__AddVideoEncoderConfiguration*);
    @endcode

  - <trt:AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, struct _trt__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, struct _trt__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, struct _trt__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, struct _trt__RemoveVideoEncoderConfiguration*);
    @endcode

  - <trt:RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, struct _trt__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfiguration(struct soap*, struct _trt__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfiguration(struct soap*, struct _trt__AddVideoSourceConfiguration*);
    @endcode

  - <trt:AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, struct _trt__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, struct _trt__AddVideoSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, struct _trt__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, struct _trt__RemoveVideoSourceConfiguration*);
    @endcode

  - <trt:RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, struct _trt__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, struct _trt__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <trt:AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfiguration(struct soap*, struct _trt__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfiguration(struct soap*, struct _trt__AddAudioEncoderConfiguration*);
    @endcode

  - <trt:AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, struct _trt__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, struct _trt__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, struct _trt__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, struct _trt__RemoveAudioEncoderConfiguration*);
    @endcode

  - <trt:RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfiguration(struct soap*, struct _trt__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfiguration(struct soap*, struct _trt__AddAudioSourceConfiguration*);
    @endcode

  - <trt:AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, struct _trt__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, struct _trt__AddAudioSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, struct _trt__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, struct _trt__RemoveAudioSourceConfiguration*);
    @endcode

  - <trt:RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, struct _trt__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, struct _trt__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <trt:AddPTZConfiguration> @ref _trt__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfiguration(struct soap*, struct _trt__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfiguration(struct soap*, struct _trt__AddPTZConfiguration*);
    @endcode

  - <trt:AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfigurationResponse(struct soap*, struct _trt__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfigurationResponse(struct soap*, struct _trt__AddPTZConfigurationResponse*);
    @endcode

  - <trt:RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfiguration(struct soap*, struct _trt__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfiguration(struct soap*, struct _trt__RemovePTZConfiguration*);
    @endcode

  - <trt:RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfigurationResponse(struct soap*, struct _trt__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfigurationResponse(struct soap*, struct _trt__RemovePTZConfigurationResponse*);
    @endcode

  - <trt:AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, struct _trt__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, struct _trt__AddVideoAnalyticsConfiguration*);
    @endcode

  - <trt:AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, struct _trt__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, struct _trt__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfiguration(struct soap*, struct _trt__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfiguration(struct soap*, struct _trt__AddMetadataConfiguration*);
    @endcode

  - <trt:AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfigurationResponse(struct soap*, struct _trt__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfigurationResponse(struct soap*, struct _trt__AddMetadataConfigurationResponse*);
    @endcode

  - <trt:RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfiguration(struct soap*, struct _trt__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfiguration(struct soap*, struct _trt__RemoveMetadataConfiguration*);
    @endcode

  - <trt:RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, struct _trt__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, struct _trt__RemoveMetadataConfigurationResponse*);
    @endcode

  - <trt:AddAudioOutputConfiguration> @ref _trt__AddAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfiguration(struct soap*, struct _trt__AddAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfiguration(struct soap*, struct _trt__AddAudioOutputConfiguration*);
    @endcode

  - <trt:AddAudioOutputConfigurationResponse> @ref _trt__AddAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfigurationResponse(struct soap*, struct _trt__AddAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfigurationResponse(struct soap*, struct _trt__AddAudioOutputConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioOutputConfiguration> @ref _trt__RemoveAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfiguration(struct soap*, struct _trt__RemoveAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfiguration(struct soap*, struct _trt__RemoveAudioOutputConfiguration*);
    @endcode

  - <trt:RemoveAudioOutputConfigurationResponse> @ref _trt__RemoveAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfigurationResponse(struct soap*, struct _trt__RemoveAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfigurationResponse(struct soap*, struct _trt__RemoveAudioOutputConfigurationResponse*);
    @endcode

  - <trt:AddAudioDecoderConfiguration> @ref _trt__AddAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfiguration(struct soap*, struct _trt__AddAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfiguration(struct soap*, struct _trt__AddAudioDecoderConfiguration*);
    @endcode

  - <trt:AddAudioDecoderConfigurationResponse> @ref _trt__AddAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfigurationResponse(struct soap*, struct _trt__AddAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfigurationResponse(struct soap*, struct _trt__AddAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioDecoderConfiguration> @ref _trt__RemoveAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfiguration(struct soap*, struct _trt__RemoveAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfiguration(struct soap*, struct _trt__RemoveAudioDecoderConfiguration*);
    @endcode

  - <trt:RemoveAudioDecoderConfigurationResponse> @ref _trt__RemoveAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, struct _trt__RemoveAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    @endcode

  - <trt:DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurations(struct soap*, struct _trt__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurations(struct soap*, struct _trt__GetVideoEncoderConfigurations*);
    @endcode

  - <trt:GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurations(struct soap*, struct _trt__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurations(struct soap*, struct _trt__GetVideoSourceConfigurations*);
    @endcode

  - <trt:GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurations(struct soap*, struct _trt__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurations(struct soap*, struct _trt__GetAudioEncoderConfigurations*);
    @endcode

  - <trt:GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurations(struct soap*, struct _trt__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurations(struct soap*, struct _trt__GetAudioSourceConfigurations*);
    @endcode

  - <trt:GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, struct _trt__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, struct _trt__GetVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurations(struct soap*, struct _trt__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurations(struct soap*, struct _trt__GetMetadataConfigurations*);
    @endcode

  - <trt:GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, struct _trt__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, struct _trt__GetMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurations> @ref _trt__GetAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurations(struct soap*, struct _trt__GetAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurations(struct soap*, struct _trt__GetAudioOutputConfigurations*);
    @endcode

  - <trt:GetAudioOutputConfigurationsResponse> @ref _trt__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurations> @ref _trt__GetAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurations(struct soap*, struct _trt__GetAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurations(struct soap*, struct _trt__GetAudioDecoderConfigurations*);
    @endcode

  - <trt:GetAudioDecoderConfigurationsResponse> @ref _trt__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfiguration(struct soap*, struct _trt__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfiguration(struct soap*, struct _trt__GetVideoSourceConfiguration*);
    @endcode

  - <trt:GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, struct _trt__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, struct _trt__GetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfiguration(struct soap*, struct _trt__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfiguration(struct soap*, struct _trt__GetVideoEncoderConfiguration*);
    @endcode

  - <trt:GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfiguration(struct soap*, struct _trt__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfiguration(struct soap*, struct _trt__GetAudioSourceConfiguration*);
    @endcode

  - <trt:GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, struct _trt__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, struct _trt__GetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfiguration(struct soap*, struct _trt__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfiguration(struct soap*, struct _trt__GetAudioEncoderConfiguration*);
    @endcode

  - <trt:GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, struct _trt__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, struct _trt__GetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfiguration(struct soap*, struct _trt__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfiguration(struct soap*, struct _trt__GetMetadataConfiguration*);
    @endcode

  - <trt:GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationResponse(struct soap*, struct _trt__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationResponse(struct soap*, struct _trt__GetMetadataConfigurationResponse*);
    @endcode

  - <trt:GetAudioOutputConfiguration> @ref _trt__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfiguration(struct soap*, struct _trt__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfiguration(struct soap*, struct _trt__GetAudioOutputConfiguration*);
    @endcode

  - <trt:GetAudioOutputConfigurationResponse> @ref _trt__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationResponse(struct soap*, struct _trt__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationResponse(struct soap*, struct _trt__GetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:GetAudioDecoderConfiguration> @ref _trt__GetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfiguration(struct soap*, struct _trt__GetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfiguration(struct soap*, struct _trt__GetAudioDecoderConfiguration*);
    @endcode

  - <trt:GetAudioDecoderConfigurationResponse> @ref _trt__GetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, struct _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, struct _trt__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, struct _trt__GetCompatibleMetadataConfigurations*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, struct _trt__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurations> @ref _trt__GetCompatibleAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurations(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurations(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurationsResponse> @ref _trt__GetCompatibleAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurations> @ref _trt__GetCompatibleAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurationsResponse> @ref _trt__GetCompatibleAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, struct _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfiguration(struct soap*, struct _trt__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfiguration(struct soap*, struct _trt__SetVideoEncoderConfiguration*);
    @endcode

  - <trt:SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, struct _trt__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, struct _trt__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfiguration(struct soap*, struct _trt__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfiguration(struct soap*, struct _trt__SetVideoSourceConfiguration*);
    @endcode

  - <trt:SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, struct _trt__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, struct _trt__SetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfiguration(struct soap*, struct _trt__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfiguration(struct soap*, struct _trt__SetAudioEncoderConfiguration*);
    @endcode

  - <trt:SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, struct _trt__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, struct _trt__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfiguration(struct soap*, struct _trt__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfiguration(struct soap*, struct _trt__SetAudioSourceConfiguration*);
    @endcode

  - <trt:SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, struct _trt__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, struct _trt__SetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, struct _trt__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, struct _trt__SetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, struct _trt__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfiguration(struct soap*, struct _trt__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfiguration(struct soap*, struct _trt__SetMetadataConfiguration*);
    @endcode

  - <trt:SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfigurationResponse(struct soap*, struct _trt__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfigurationResponse(struct soap*, struct _trt__SetMetadataConfigurationResponse*);
    @endcode

  - <trt:SetAudioOutputConfiguration> @ref _trt__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfiguration(struct soap*, struct _trt__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfiguration(struct soap*, struct _trt__SetAudioOutputConfiguration*);
    @endcode

  - <trt:SetAudioOutputConfigurationResponse> @ref _trt__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfigurationResponse(struct soap*, struct _trt__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfigurationResponse(struct soap*, struct _trt__SetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:SetAudioDecoderConfiguration> @ref _trt__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfiguration(struct soap*, struct _trt__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfiguration(struct soap*, struct _trt__SetAudioDecoderConfiguration*);
    @endcode

  - <trt:SetAudioDecoderConfigurationResponse> @ref _trt__SetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfigurationResponse(struct soap*, struct _trt__SetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfigurationResponse(struct soap*, struct _trt__SetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, struct _trt__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, struct _trt__GetVideoSourceConfigurationOptions*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, struct _trt__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, struct _trt__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, struct _trt__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, struct _trt__GetAudioSourceConfigurationOptions*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, struct _trt__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, struct _trt__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptions(struct soap*, struct _trt__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptions(struct soap*, struct _trt__GetMetadataConfigurationOptions*);
    @endcode

  - <trt:GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, struct _trt__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, struct _trt__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptions> @ref _trt__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptions(struct soap*, struct _trt__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptions(struct soap*, struct _trt__GetAudioOutputConfigurationOptions*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptionsResponse> @ref _trt__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptions> @ref _trt__GetAudioDecoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptions(struct soap*, struct _trt__GetAudioDecoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptions(struct soap*, struct _trt__GetAudioDecoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptionsResponse> @ref _trt__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _trt__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, struct _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <trt:GetStreamUri> @ref _trt__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUri(struct soap*, struct _trt__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUri(struct soap*, struct _trt__GetStreamUri*);
    @endcode

  - <trt:GetStreamUriResponse> @ref _trt__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUriResponse(struct soap*, struct _trt__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUriResponse(struct soap*, struct _trt__GetStreamUriResponse*);
    @endcode

  - <trt:StartMulticastStreaming> @ref _trt__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreaming(struct soap*, struct _trt__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreaming(struct soap*, struct _trt__StartMulticastStreaming*);
    @endcode

  - <trt:StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreamingResponse(struct soap*, struct _trt__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreamingResponse(struct soap*, struct _trt__StartMulticastStreamingResponse*);
    @endcode

  - <trt:StopMulticastStreaming> @ref _trt__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreaming(struct soap*, struct _trt__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreaming(struct soap*, struct _trt__StopMulticastStreaming*);
    @endcode

  - <trt:StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreamingResponse(struct soap*, struct _trt__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreamingResponse(struct soap*, struct _trt__StopMulticastStreamingResponse*);
    @endcode

  - <trt:SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPoint(struct soap*, struct _trt__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPoint(struct soap*, struct _trt__SetSynchronizationPoint*);
    @endcode

  - <trt:SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPointResponse(struct soap*, struct _trt__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPointResponse(struct soap*, struct _trt__SetSynchronizationPointResponse*);
    @endcode

  - <trt:GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    @endcode

  - <trt:GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    @endcode

  - <trt:GetVideoSourceModes> @ref _trt__GetVideoSourceModes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModes(struct soap*, struct _trt__GetVideoSourceModes*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModes(struct soap*, struct _trt__GetVideoSourceModes*);
    @endcode

  - <trt:GetVideoSourceModesResponse> @ref _trt__GetVideoSourceModesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModesResponse(struct soap*, struct _trt__GetVideoSourceModesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModesResponse(struct soap*, struct _trt__GetVideoSourceModesResponse*);
    @endcode

  - <trt:SetVideoSourceMode> @ref _trt__SetVideoSourceMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceMode(struct soap*, struct _trt__SetVideoSourceMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceMode(struct soap*, struct _trt__SetVideoSourceMode*);
    @endcode

  - <trt:SetVideoSourceModeResponse> @ref _trt__SetVideoSourceModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceModeResponse(struct soap*, struct _trt__SetVideoSourceModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceModeResponse(struct soap*, struct _trt__SetVideoSourceModeResponse*);
    @endcode

  - <trt:GetOSDs> @ref _trt__GetOSDs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDs(struct soap*, struct _trt__GetOSDs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDs(struct soap*, struct _trt__GetOSDs*);
    @endcode

  - <trt:GetOSDsResponse> @ref _trt__GetOSDsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDsResponse(struct soap*, struct _trt__GetOSDsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDsResponse(struct soap*, struct _trt__GetOSDsResponse*);
    @endcode

  - <trt:GetOSD> @ref _trt__GetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSD(struct soap*, struct _trt__GetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSD(struct soap*, struct _trt__GetOSD*);
    @endcode

  - <trt:GetOSDResponse> @ref _trt__GetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDResponse(struct soap*, struct _trt__GetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDResponse(struct soap*, struct _trt__GetOSDResponse*);
    @endcode

  - <trt:SetOSD> @ref _trt__SetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSD(struct soap*, struct _trt__SetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSD(struct soap*, struct _trt__SetOSD*);
    @endcode

  - <trt:SetOSDResponse> @ref _trt__SetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSDResponse(struct soap*, struct _trt__SetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSDResponse(struct soap*, struct _trt__SetOSDResponse*);
    @endcode

  - <trt:GetOSDOptions> @ref _trt__GetOSDOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptions(struct soap*, struct _trt__GetOSDOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptions(struct soap*, struct _trt__GetOSDOptions*);
    @endcode

  - <trt:GetOSDOptionsResponse> @ref _trt__GetOSDOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptionsResponse(struct soap*, struct _trt__GetOSDOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptionsResponse(struct soap*, struct _trt__GetOSDOptionsResponse*);
    @endcode

  - <trt:CreateOSD> @ref _trt__CreateOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSD(struct soap*, struct _trt__CreateOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSD(struct soap*, struct _trt__CreateOSD*);
    @endcode

  - <trt:CreateOSDResponse> @ref _trt__CreateOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSDResponse(struct soap*, struct _trt__CreateOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSDResponse(struct soap*, struct _trt__CreateOSDResponse*);
    @endcode

  - <trt:DeleteOSD> @ref _trt__DeleteOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSD(struct soap*, struct _trt__DeleteOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSD(struct soap*, struct _trt__DeleteOSD*);
    @endcode

  - <trt:DeleteOSDResponse> @ref _trt__DeleteOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSDResponse(struct soap*, struct _trt__DeleteOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSDResponse(struct soap*, struct _trt__DeleteOSDResponse*);
    @endcode

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoSourceConfiguration)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioSourceConfiguration)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioEncoderConfiguration)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoAnalyticsConfiguration)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate type _tt__PTZConfiguration)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate type _tt__MetadataConfiguration)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioOutputConfiguration)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioDecoderConfiguration)

  - <tt:Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, struct _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, struct _tt__Message*);
    @endcode

  - <tt:Polygon> (use wsdl2h option -g to auto-generate type _tt__Polygon)

  - <tt:Polyline> (use wsdl2h option -g to auto-generate type _tt__Polyline)

  - <tt:MetadataStream> (use wsdl2h option -g to auto-generate type _tt__MetadataStream)

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    @endcode

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    @endcode

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    @endcode

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    @endcode

  - <wsnt:Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    @endcode

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    @endcode

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    @endcode

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    @endcode

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    @endcode

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    @endcode

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    @endcode

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    @endcode

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    @endcode

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    @endcode

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    @endcode

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    @endcode

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    @endcode

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    @endcode

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    @endcode

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

@section tr2 Top-level root elements of schema "http://www.onvif.org/ver20/media/wsdl"

  - <tr2:GetServiceCapabilities> @ref _tr2__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetServiceCapabilities(struct soap*, struct _tr2__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetServiceCapabilities(struct soap*, struct _tr2__GetServiceCapabilities*);
    @endcode

  - <tr2:GetServiceCapabilitiesResponse2> @ref _tr2__GetServiceCapabilitiesResponse2
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetServiceCapabilitiesResponse2(struct soap*, struct _tr2__GetServiceCapabilitiesResponse2*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetServiceCapabilitiesResponse2(struct soap*, struct _tr2__GetServiceCapabilitiesResponse2*);
    @endcode

  - <tr2:Capabilities> (use wsdl2h option -g to auto-generate type _tr2__Capabilities)

  - <tr2:ConfigurationEnumeration> (use wsdl2h option -g to auto-generate type _tr2__ConfigurationEnumeration)

  - <tr2:CreateProfile> @ref _tr2__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__CreateProfile(struct soap*, struct _tr2__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__CreateProfile(struct soap*, struct _tr2__CreateProfile*);
    @endcode

  - <tr2:CreateProfileResponse> @ref _tr2__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__CreateProfileResponse(struct soap*, struct _tr2__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__CreateProfileResponse(struct soap*, struct _tr2__CreateProfileResponse*);
    @endcode

  - <tr2:GetProfiles> @ref _tr2__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetProfiles(struct soap*, struct _tr2__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetProfiles(struct soap*, struct _tr2__GetProfiles*);
    @endcode

  - <tr2:GetProfilesResponse> @ref _tr2__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetProfilesResponse(struct soap*, struct _tr2__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetProfilesResponse(struct soap*, struct _tr2__GetProfilesResponse*);
    @endcode

  - <tr2:AddConfiguration> @ref _tr2__AddConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__AddConfiguration(struct soap*, struct _tr2__AddConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__AddConfiguration(struct soap*, struct _tr2__AddConfiguration*);
    @endcode

  - <tr2:AddConfigurationResponse> @ref _tr2__AddConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__AddConfigurationResponse(struct soap*, struct _tr2__AddConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__AddConfigurationResponse(struct soap*, struct _tr2__AddConfigurationResponse*);
    @endcode

  - <tr2:RemoveConfiguration> @ref _tr2__RemoveConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__RemoveConfiguration(struct soap*, struct _tr2__RemoveConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__RemoveConfiguration(struct soap*, struct _tr2__RemoveConfiguration*);
    @endcode

  - <tr2:RemoveConfigurationResponse> @ref _tr2__RemoveConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__RemoveConfigurationResponse(struct soap*, struct _tr2__RemoveConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__RemoveConfigurationResponse(struct soap*, struct _tr2__RemoveConfigurationResponse*);
    @endcode

  - <tr2:DeleteProfile> @ref _tr2__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__DeleteProfile(struct soap*, struct _tr2__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__DeleteProfile(struct soap*, struct _tr2__DeleteProfile*);
    @endcode

  - <tr2:DeleteProfileResponse> @ref _tr2__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__DeleteProfileResponse(struct soap*, struct _tr2__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__DeleteProfileResponse(struct soap*, struct _tr2__DeleteProfileResponse*);
    @endcode

  - <tr2:GetVideoEncoderConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetVideoEncoderConfigurations)

  - <tr2:GetVideoEncoderConfigurationsResponse> @ref _tr2__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetVideoEncoderConfigurationsResponse(struct soap*, struct _tr2__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetVideoEncoderConfigurationsResponse(struct soap*, struct _tr2__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <tr2:GetVideoSourceConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetVideoSourceConfigurations)

  - <tr2:GetVideoSourceConfigurationsResponse> @ref _tr2__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetVideoSourceConfigurationsResponse(struct soap*, struct _tr2__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetVideoSourceConfigurationsResponse(struct soap*, struct _tr2__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <tr2:GetAudioEncoderConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetAudioEncoderConfigurations)

  - <tr2:GetAudioEncoderConfigurationsResponse> @ref _tr2__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioEncoderConfigurationsResponse(struct soap*, struct _tr2__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioEncoderConfigurationsResponse(struct soap*, struct _tr2__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <tr2:GetAudioSourceConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetAudioSourceConfigurations)

  - <tr2:GetAudioSourceConfigurationsResponse> @ref _tr2__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioSourceConfigurationsResponse(struct soap*, struct _tr2__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioSourceConfigurationsResponse(struct soap*, struct _tr2__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <tr2:GetAnalyticsConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetAnalyticsConfigurations)

  - <tr2:GetAnalyticsConfigurationsResponse> @ref _tr2__GetAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAnalyticsConfigurationsResponse(struct soap*, struct _tr2__GetAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAnalyticsConfigurationsResponse(struct soap*, struct _tr2__GetAnalyticsConfigurationsResponse*);
    @endcode

  - <tr2:GetMetadataConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetMetadataConfigurations)

  - <tr2:GetMetadataConfigurationsResponse> @ref _tr2__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetMetadataConfigurationsResponse(struct soap*, struct _tr2__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetMetadataConfigurationsResponse(struct soap*, struct _tr2__GetMetadataConfigurationsResponse*);
    @endcode

  - <tr2:GetAudioOutputConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetAudioOutputConfigurations)

  - <tr2:GetAudioOutputConfigurationsResponse> @ref _tr2__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioOutputConfigurationsResponse(struct soap*, struct _tr2__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioOutputConfigurationsResponse(struct soap*, struct _tr2__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <tr2:GetAudioDecoderConfigurations> (use wsdl2h option -g to auto-generate type _tr2__GetAudioDecoderConfigurations)

  - <tr2:GetAudioDecoderConfigurationsResponse> @ref _tr2__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioDecoderConfigurationsResponse(struct soap*, struct _tr2__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioDecoderConfigurationsResponse(struct soap*, struct _tr2__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <tr2:SetVideoEncoderConfiguration> @ref _tr2__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetVideoEncoderConfiguration(struct soap*, struct _tr2__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetVideoEncoderConfiguration(struct soap*, struct _tr2__SetVideoEncoderConfiguration*);
    @endcode

  - <tr2:SetConfigurationResponse> @ref _tr2__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetConfigurationResponse(struct soap*, struct _tr2__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetConfigurationResponse(struct soap*, struct _tr2__SetConfigurationResponse*);
    @endcode

  - <tr2:SetVideoSourceConfiguration> @ref _tr2__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetVideoSourceConfiguration(struct soap*, struct _tr2__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetVideoSourceConfiguration(struct soap*, struct _tr2__SetVideoSourceConfiguration*);
    @endcode

  - <tr2:SetAudioEncoderConfiguration> @ref _tr2__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetAudioEncoderConfiguration(struct soap*, struct _tr2__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetAudioEncoderConfiguration(struct soap*, struct _tr2__SetAudioEncoderConfiguration*);
    @endcode

  - <tr2:SetAudioSourceConfiguration> @ref _tr2__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetAudioSourceConfiguration(struct soap*, struct _tr2__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetAudioSourceConfiguration(struct soap*, struct _tr2__SetAudioSourceConfiguration*);
    @endcode

  - <tr2:SetMetadataConfiguration> @ref _tr2__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetMetadataConfiguration(struct soap*, struct _tr2__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetMetadataConfiguration(struct soap*, struct _tr2__SetMetadataConfiguration*);
    @endcode

  - <tr2:SetAudioOutputConfiguration> @ref _tr2__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetAudioOutputConfiguration(struct soap*, struct _tr2__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetAudioOutputConfiguration(struct soap*, struct _tr2__SetAudioOutputConfiguration*);
    @endcode

  - <tr2:SetAudioDecoderConfiguration> @ref _tr2__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetAudioDecoderConfiguration(struct soap*, struct _tr2__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetAudioDecoderConfiguration(struct soap*, struct _tr2__SetAudioDecoderConfiguration*);
    @endcode

  - <tr2:GetVideoSourceConfigurationOptions> (use wsdl2h option -g to auto-generate type _tr2__GetVideoSourceConfigurationOptions)

  - <tr2:GetVideoSourceConfigurationOptionsResponse> @ref _tr2__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _tr2__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetVideoSourceConfigurationOptionsResponse(struct soap*, struct _tr2__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <tr2:GetVideoEncoderConfigurationOptions> (use wsdl2h option -g to auto-generate type _tr2__GetVideoEncoderConfigurationOptions)

  - <tr2:GetVideoEncoderConfigurationOptionsResponse> @ref _tr2__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _tr2__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetVideoEncoderConfigurationOptionsResponse(struct soap*, struct _tr2__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <tr2:GetAudioSourceConfigurationOptions> (use wsdl2h option -g to auto-generate type _tr2__GetAudioSourceConfigurationOptions)

  - <tr2:GetAudioSourceConfigurationOptionsResponse> @ref _tr2__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioSourceConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <tr2:GetAudioEncoderConfigurationOptions> (use wsdl2h option -g to auto-generate type _tr2__GetAudioEncoderConfigurationOptions)

  - <tr2:GetAudioEncoderConfigurationOptionsResponse> @ref _tr2__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioEncoderConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <tr2:GetMetadataConfigurationOptions> (use wsdl2h option -g to auto-generate type _tr2__GetMetadataConfigurationOptions)

  - <tr2:GetMetadataConfigurationOptionsResponse> @ref _tr2__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetMetadataConfigurationOptionsResponse(struct soap*, struct _tr2__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetMetadataConfigurationOptionsResponse(struct soap*, struct _tr2__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <tr2:GetAudioOutputConfigurationOptions> (use wsdl2h option -g to auto-generate type _tr2__GetAudioOutputConfigurationOptions)

  - <tr2:GetAudioOutputConfigurationOptionsResponse> @ref _tr2__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioOutputConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <tr2:GetAudioDecoderConfigurationOptions> (use wsdl2h option -g to auto-generate type _tr2__GetAudioDecoderConfigurationOptions)

  - <tr2:GetAudioDecoderConfigurationOptionsResponse> @ref _tr2__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetAudioDecoderConfigurationOptionsResponse(struct soap*, struct _tr2__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <tr2:GetStreamUri> @ref _tr2__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetStreamUri(struct soap*, struct _tr2__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetStreamUri(struct soap*, struct _tr2__GetStreamUri*);
    @endcode

  - <tr2:GetStreamUriResponse> @ref _tr2__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetStreamUriResponse(struct soap*, struct _tr2__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetStreamUriResponse(struct soap*, struct _tr2__GetStreamUriResponse*);
    @endcode

  - <tr2:SetSynchronizationPoint> @ref _tr2__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetSynchronizationPoint(struct soap*, struct _tr2__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetSynchronizationPoint(struct soap*, struct _tr2__SetSynchronizationPoint*);
    @endcode

  - <tr2:SetSynchronizationPointResponse> @ref _tr2__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetSynchronizationPointResponse(struct soap*, struct _tr2__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetSynchronizationPointResponse(struct soap*, struct _tr2__SetSynchronizationPointResponse*);
    @endcode

  - <tr2:GetSnapshotUri> @ref _tr2__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetSnapshotUri(struct soap*, struct _tr2__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetSnapshotUri(struct soap*, struct _tr2__GetSnapshotUri*);
    @endcode

  - <tr2:GetSnapshotUriResponse> @ref _tr2__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetSnapshotUriResponse(struct soap*, struct _tr2__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetSnapshotUriResponse(struct soap*, struct _tr2__GetSnapshotUriResponse*);
    @endcode

  - <tr2:StartMulticastStreaming> (use wsdl2h option -g to auto-generate type _tr2__StartMulticastStreaming)

  - <tr2:StopMulticastStreaming> (use wsdl2h option -g to auto-generate type _tr2__StopMulticastStreaming)

  - <tr2:StartStopMulticastStreamingResponse> @ref _tr2__StartStopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__StartStopMulticastStreamingResponse(struct soap*, struct _tr2__StartStopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__StartStopMulticastStreamingResponse(struct soap*, struct _tr2__StartStopMulticastStreamingResponse*);
    @endcode

  - <tr2:GetVideoSourceModes> @ref _tr2__GetVideoSourceModes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetVideoSourceModes(struct soap*, struct _tr2__GetVideoSourceModes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetVideoSourceModes(struct soap*, struct _tr2__GetVideoSourceModes*);
    @endcode

  - <tr2:GetVideoSourceModesResponse> @ref _tr2__GetVideoSourceModesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetVideoSourceModesResponse(struct soap*, struct _tr2__GetVideoSourceModesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetVideoSourceModesResponse(struct soap*, struct _tr2__GetVideoSourceModesResponse*);
    @endcode

  - <tr2:SetVideoSourceMode> @ref _tr2__SetVideoSourceMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetVideoSourceMode(struct soap*, struct _tr2__SetVideoSourceMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetVideoSourceMode(struct soap*, struct _tr2__SetVideoSourceMode*);
    @endcode

  - <tr2:SetVideoSourceModeResponse> @ref _tr2__SetVideoSourceModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetVideoSourceModeResponse(struct soap*, struct _tr2__SetVideoSourceModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetVideoSourceModeResponse(struct soap*, struct _tr2__SetVideoSourceModeResponse*);
    @endcode

  - <tr2:GetOSDs> @ref _tr2__GetOSDs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetOSDs(struct soap*, struct _tr2__GetOSDs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetOSDs(struct soap*, struct _tr2__GetOSDs*);
    @endcode

  - <tr2:GetOSDsResponse> @ref _tr2__GetOSDsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetOSDsResponse(struct soap*, struct _tr2__GetOSDsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetOSDsResponse(struct soap*, struct _tr2__GetOSDsResponse*);
    @endcode

  - <tr2:SetOSD> @ref _tr2__SetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__SetOSD(struct soap*, struct _tr2__SetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__SetOSD(struct soap*, struct _tr2__SetOSD*);
    @endcode

  - <tr2:GetOSDOptions> @ref _tr2__GetOSDOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetOSDOptions(struct soap*, struct _tr2__GetOSDOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetOSDOptions(struct soap*, struct _tr2__GetOSDOptions*);
    @endcode

  - <tr2:GetOSDOptionsResponse> @ref _tr2__GetOSDOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__GetOSDOptionsResponse(struct soap*, struct _tr2__GetOSDOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__GetOSDOptionsResponse(struct soap*, struct _tr2__GetOSDOptionsResponse*);
    @endcode

  - <tr2:CreateOSD> @ref _tr2__CreateOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__CreateOSD(struct soap*, struct _tr2__CreateOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__CreateOSD(struct soap*, struct _tr2__CreateOSD*);
    @endcode

  - <tr2:CreateOSDResponse> @ref _tr2__CreateOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__CreateOSDResponse(struct soap*, struct _tr2__CreateOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__CreateOSDResponse(struct soap*, struct _tr2__CreateOSDResponse*);
    @endcode

  - <tr2:DeleteOSD> @ref _tr2__DeleteOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tr2__DeleteOSD(struct soap*, struct _tr2__DeleteOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__tr2__DeleteOSD(struct soap*, struct _tr2__DeleteOSD*);
    @endcode

*/

/* End of onvif.h */
